{
  "hash": "a23fc92bcfda9b79daf2e558f676bb51",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 4 - Part 3\"\nsubtitle: \"Decoding Chaos: Storyboard for Exploratory tab\"\ndate: \"2 March 2024\"\ndate-modified: \"last-modified\"\nauthor: \"Teo Suan Ern\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n  editor: visual\n---\n\n\n# 1. Overview\n\n*Note: This is a continuation of the take-home exercise 4.*\n\nThis assignment is separated into three segments (web pages):\n\n1.  Initial Data Exploratory Analysis (IDEA) – [Click here for IDEA page](https://isss608-ay2024-suanern.netlify.app/take-home_ex/take-home_ex04/take-home_ex04-IDEA.html){target=\"_blank\"}.\n2.  Geospatial Data Exploratory Analysis (GDEA) – [Click here for GDEA page](https://isss608-ay2024-suanern.netlify.app/take-home_ex/take-home_ex04/take-home_ex04-GDEA.html){target=\"_blank\"}.\n3.  Prototype: Exploratory – Current Page\n\n# 2. Storyboard\n\nStoryboard aims to visually maps out user's experience. It is a tool for making strong visual connection between the insights uncovered based on research and user's interaction with the R Shiny dashboard application. The interactive components and UI design aims to facilitate data (and geospatial) exploration and analysis for users to develop effective counter measures and strategies.\n\nThe **\"Exploratory\"** dashboard can be broadly classify into two key areas:\n\n-   *Geospatial Data Exploratory Analysis* allows users to select different variables and perform spatial exploration on the dataset to conceptualise armed conflict spaces in Myanmar.\n\n-   *Data Exploratory Analysis* allows users to select different variables and perform initial exploration on the dataset to discover distribution, trends and network relationships of armed conflicts in Myanmar.\n\nThe proposed layouts and UI features for \"**Exploratory\"** have been conceptualised into seven sections as follows:\n\n\n```{mermaid}\n%%| echo: false \nflowchart TD    \n\nA(Exploratory)   \nA --> B(1. Overview)\nA --> C(2. Geospatial Intensity)  \nA --> D(3. Geospatial Exploration)   \nA --> E(4. Trends)   \nA --> F(5. Distributions)\nA --> G(6. Network Relationships)\nA --> H(7. Incident Summary)\n```\n\n\nFor enhanced user experience, the prototype included 'filter' components (i.e. desired characteristics) and 'chart interpretation' boxes, and have aligned them mainly to the right side of the web pages. This was intentionally set in that way to separate the main sidebar. The 'chart interpretation' box provides brief explanation of how each chart can be interpreted.\n\n## Section One - Overview\n\n![Prototype: Exploratory - Overview sub-tab](images/prototype2_1.png)\n\nThis tab serves as the \"landing page\" that displays the map of Myanmar and its spatial points of armed conflicts over the years (i.e. 2010 to 2023). Figure below shows the UI interactive features in the **Overview** sub-tab.\n\n![](images/prototype2_1-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Overview** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreOverviewrow1 <-  fluidRow(\n  leafletOutput(), # display point spatial map\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  sliderInput() # select year range\n)\n\n# Server Components\noutput1 <- renderLeaflet({}) # point spatial map\n```\n:::\n\n\n## Section Two - Spatial Intensity\n\n![Prototype: Exploratory - Spatial Intensity sub-tab](images/prototype2_2.png)\n\nThis tab displays the spatial intensity map based on the intensity of fatalities at each armed conflict incident. Warm colours (e.g. red/ orange/ yellow) indicates higher intensity values while cool colours (e.g. blue/ green) indicates lower intensity values. Users would be able to make use of this map to adjust the intensity parameters (i.e. radius, blur and maximum point intensity) based on the filter options. Figure below shows the UI interactive features in the **Spatial Intensity** sub-tab.\n\n![](images/prototype2_2-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Spatial Intensity** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreIntensityrow1 <-  fluidRow(\n  leafletOutput(), # display point spatial map\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  sliderInput(), # select year range\n  sliderInput(), # select radius intensity\n  sliderInput(), # select blur intensity\n  sliderInput(), # select max point intensity\n)\n\n# Server Components\noutput2 <- renderLeaflet({}) # point spatial intensity map\n```\n:::\n\n\n## Section Three - Geospatial Exploration\n\n![Prototype: Exploratory - Geospatial Exploration](images/prototype2_3.png)\n\nThis tab displays two geospatial exploration maps (i.e. statistical distribution and spatial distribution). For statistical distribution map, it is a boxmap that displays the spatial representation that is similar to boxplot and histogram, which is useful to detect outliers and visualise distribution of variables. For spatial distribution map visualises spatial pattern or distribution across different geographical subnational administrative regions by plotting choropleth map.\n\nEach map has its own different filter options that serve their different purposes. Users would be able to select different display variables and perform spatial exploration to conceptualise armed conflict spaces in Myanmar accordingly. Figure below shows the UI interactive features in the **Geospatial Exploration** sub-tab.\n\n![](images/prototype2_3-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Geospatial Exploration** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreGeospatialrow1 <-  fluidRow(\n  radioButtons(), # display radio button options\n  tmapOutput(), # display statistical distribution map\n  tmapOutput(), # display spatial distribution map\n  selectInput(), # dropdown box selection for year\n  radioButtons(), # display radio button options\n  selectInput(), # dropbox selection for classification types\n  selectInput() # dropbox selection for number of classes\n)\n\n# Server Components\noutput3.1 <- renderTmap({}) # statistical distribution map\noutput3.2 <- renderTmap({}) # spatial distribution map\n```\n:::\n\n\n## Section Four - Trends\n\n![Prototype: Exploratory - Trends](images/prototype2_4.png)\n\nThis tab allows user to perform time series analysis to identify trends, or cyclic patterns, spot anomalies, visualise distribution of armed conflict incidents/ fatalities and how it has changed over the years using either line chart or calendar heatmap. The line chart (top) shows armed conflict incidents and fatalities on a monthly basis, while calendar heatmap (bottom) shows daily armed conflict incidents and fatalities based on selected year. Calendar days of each month is arranged in rows. The colour squares in the calendar heatmap represent the corresponding cell value (i.e. darker shade denotes higher frequency count). Figure below shows the UI interactive features in the **Trends** sub-tab.\n\n![](images/prototype2_4-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Trends** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreTrendrow1 <-  fluidRow(\n  highchartOutput(), # display line chart\n)\n\n\nExploreTrendrow2 <-  fluidRow(\n  plotlyOutput(), # display calendar heatmap\n  selectInput(), # dropdown box selection for year\n  radioButtons() # display radio button options\n)\n\n\n# Server Components\noutput4.1 <- renderPlotly({}) # line chart\noutput4.2 <- renderPlotly({}) # calendar heatmap\n```\n:::\n\n\n## Section Five - Distributions\n\n![Prototype: Exploratory - Distributions](images/prototype2_5.png)\n\nThis tab provides user with data exploration tools to explore the distribution of armed conflict incidents using jittered-cum-boxplot that resulted in fatalities and the dispersion of such incidents across the years in Myanmar. Points that are clustered together show higher frequency during the selected time period. Figure below shows the UI interactive features in the **Distribution** sub-tab.\n\n![](images/prototype2_5-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Distributions** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreDistributionrow1 <-  fluidRow(\n  plotlyOutput(), # display plot 1\n  sliderInput(), # select year range\n  radioButtons(), # select category (for y-axis)\n  radioButtons() # select frequency method for jitter\n)\n\n# Server Components\noutput5 <- renderPlotly({}) # distribution plot 1\n```\n:::\n\n\n## Section Six - Network Relationships\n\n![Prototype: Exploratory - Network Relationships](images/prototype2_6.png)\n\nThis tab provides users with data exploration tools to explore on the network association amongst the actors (each year) involved in the armed conflict incidents in Myanmar, based on user's selected preference to determine the frequency of actors' network association with each other. Figure below shows the UI interactive features in the **Network Relationships** sub-tab.\n\n![](images/prototype2_6-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Network Relationships** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreNetworkrow1 <-  fluidRow(\n  plotOutput(), # display network graph\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  selectInput(), # select year\n  sliderInput() # select frequency of actors' network\n)\n\n\n# Server Components\noutput6 <- renderPlot({}) # network graph\n```\n:::\n\n\n## Section Seven - Incident Summary\n\n![Prototype: Exploratory - Incident Summary](images/prototype2_7.png)\n\nThis tab visualises large volume of armed conflict incident summary notes that captures keywords recorded in a word cloud. This is useful to spot changes over time where users do not have to read through all incident summary notes. In addition, an interactive datatable (that is linked to the selection of the word cloud) is provided for users who prefer to explore the dataset.\n\nFigure below shows the UI interactive features in the **Incident Summary** sub-tab.\n\n![](images/prototype2_7-1.png)\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for **Incident Summary** sub-tab.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\n# UI Components\nExploreSummaryrow1 <-  fluidRow(\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  selectInput(), # select year\n  plotOutput(), # display word cloud\n  DT::dataTableOutput() # display datatable\n  )\n\n\n# Server Components\noutput7.1 <- renderPlot({}) # word cloud\n\noutput7.2 <- DT::renderDataTable({}) # data table\n```\n:::\n\n\n# 3. R Shiny Application (simplified code)\n\nThe storyboard (in Section 2) facilitates the development of a prototype in R Shiny Application. Iterative prototyping will allow continuous improvement of the final dashboard for the project when combined with the other team members' work.\n\nThe proposed layouts and UI features for \"**Exploratory\"** have been conceptualised into seven sections (or `tabPanel()` in R Shiny Application terms), in which `ExploreSubTabs` will form one of the `tabsetPanel()` in the entire project dashboard as part of UI.\n\nClick here for the [R Shiny Application Prototype](https://isss608-vaa-suanern.shinyapps.io/ShinyExploratoryPrototype/){target=\"_blank\"}\n\nCode chunk below shows the simplified version of R Shiny Application for **Exploratory** prototype.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#========================================================== \n## load R packages\n#========================================================== \npacman::p_load(shiny, shinydashboard, shinycssloaders, tidyverse, dplyr, \n               leaflet, plotly, highcharter, ggthemes, fresh, sf, spdep, tmap, \n               tm, ggforce, ggraph, igraph, wordcloud, tidytext, DT)\n\n\n#========================================================== \n## UI Components\n#========================================================== \n# main header ---\nheader <- dashboardHeader(title = \"Decoding Chaos\")\n\n\n# main sidebar ---\nsidebar <- dashboardSidebar()\n\nsidebarMenu(\n    menuItem(\"Exploratory\", tabName = \"Exploratory\"),\n    menuItem(\"Clustering & Outlier Analysis\", tabName = \"Clustering\"),\n    menuItem(\"Hot/ Cold Zone Analysis\", tabName = \"HotCold\"),\n    menuItem(\"Confirmatory Analysis\", tabName = \"Confirmatory\"),\n    menuItem(\"Visit ACLED data\"))\n\n# main body ---\nbody <- dashboardBody(\n    tabItems(\n      tabItem(tabName = \"Exploratory\",\n            ExploreSubTabs\n            ),\n    tabItem(tabName = \"Cluster and Outlier Analysis\"\n            ),\n    tabItem(tabName = \"Hot/ Cold Zone Analysis\"\n            ),\n    tabItem(tabName = \"Confirmatory Analysis\"\n            )\n      )\n    )\n\n# fluidRows ---\nExploreOverviewrow1 <-  fluidRow(\n  leafletOutput(), # display point spatial map\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  sliderInput() # select year range\n)\n\nExploreIntensityrow1 <-  fluidRow(\n  leafletOutput(), # display point spatial map\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  sliderInput(), # select year range\n  sliderInput(), # select radius intensity\n  sliderInput(), # select blur intensity\n  sliderInput() # select max point intensity\n)\n\nExploreGeospatialrow1 <-  fluidRow(\n  radioButtons(), # display radio button options\n  tmapOutput(), # display statistical distribution map\n  tmapOutput(), # display spatial distribution map\n  selectInput(), # dropdown box selection for year\n  radioButtons(), # display radio button options\n  selectInput(), # dropbox selection for classification types\n  selectInput() # dropbox selection for number of classes\n)\n\nExploreTrendrow1 <-  fluidRow(\n  highchartOutput() # display line chart\n)\n\nExploreTrendrow2 <-  fluidRow(\n  plotlyOutput(), # display calendar heatmap\n  selectInput(), # dropdown box selection for year\n  radioButtons() # display radio button options\n)\n\nExploreDistributionrow1 <-  fluidRow(\n  plotlyOutput(), # display plot 1\n  sliderInput(), # select year range\n  radioButtons(), # select category (for y-axis)\n  radioButtons() # select frequency method for jitter\n)\n\nExploreNetworkrow1 <-  fluidRow(\n  plotOutput(), # display network graph\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  selectInput(), # select year\n  sliderInput() # select frequency of actors' network\n)\n\nExploreSummaryrow1 <-  fluidRow(\n  selectizeInput(), # select event (allows multiple selection)\n  selectizeInput(), # select administrative region (allows multiple selection)\n  selectInput(), # select year\n  plotOutput(), # display word cloud\n  DT::dataTableOutput() # display datatable\n  )\n\n# subtabs\nExploreSubTabs <- tabsetPanel(\n  tabPanel(\"Overview\", \n           ExploreOverviewrow1\n  ),\n  tabPanel(\"Overview\", \n           ExploreIntensityrow1\n  ),\n  tabPanel(\"Geospatial Exploration\", \n           ExploreGeospatialrow1\n  ),\n  tabPanel(\"Trends\", \n           ExploreTrendrow1,\n           ExploreTrendrow2\n  ),  \n  tabPanel(\"Distribution\", \n           ExploreDistributionrow1,\n           ExploreDistributionrow2,\n           ExploreDistributionrow3\n  ),\n  tabPanel(\"Network Relationship\", \n           ExploreNetworkrow1\n  ),\n  tabPanel(\"Incident Summary\", \n           ExploreSummaryrow1\n  )\n)\n\n\n#========================================================== \n## UI dashboard\n#========================================================== \nui <- dashboardPage(title = 'Armed Conflicts in Myanmar (2010 to 2023)', \n                    header, sidebar, body)  \n\n\n#========================================================== \n## Server Components\n#========================================================== \nserver <- function(input, output) {\n\n  output1 <- renderLeaflet({}) # point spatial map\n  \n  output2 <- renderLeaflet({}) # spatial intensity map\n  \n  output3.1 <- renderTmap({}) # statistical distribution map\n  output3.2 <- renderTmap({}) # spatial distribution map\n  \n  output4.1 <- renderPlotly({}) # line chart\n  output4.2 <- renderPlotly({}) # calendar heatmap\n  \n  output5 <- renderPlotly({}) # distribution plot\n  \n  output6 <- renderPlot({}) # network graph \n  \n  output7.1 <- renderPlot({}) # word cloud\n  output7.2 <- DT::renderDataTable({}) # data table\n\n}\n\n\n#========================================================== \n## Run Shiny Application\n#========================================================== \nshinyApp(ui = ui, server = server)\n```\n:::\n\n\n# Reference\n\n-   [R Shiny - COVID-19 tracker](https://shiny.posit.co/r/gallery/life-sciences/covid19-tracker/){target=\"_blank\"}\n-   [R Shiny - NCAA Swimming Team Finder for Incoming College Athletes](https://shiny.posit.co/r/gallery/education/ncaa-swim-team-finder/){target=\"_blank\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
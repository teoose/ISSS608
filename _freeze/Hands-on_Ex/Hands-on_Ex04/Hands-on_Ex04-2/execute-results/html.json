{
  "hash": "3c35da3ce62e27ecfd0ecc82cc778abc",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 4 - Part 2\"\nsubtitle: \"Visual Statistical Analysis\"\ndate: \"11 January 2024\"\ndate-modified: \"last-modified\"\nauthor: \"Teo Suan Ern\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n*Note: Last modified to include author’s details.*\n\n# 1. Getting Started: Visual Statistical Analysis with ggstatsplot\n\nThis hands-on exercise 4 is split into four segments:\n\n1.  Visualising Distribution\n\n2.  Visual Statistical Analysis\n\n3.  Visualising Uncertainty\n\n4.  Building Funnel Plot with R\n\n::: callout-note\n## Visual Statistical Analysis with ggstatsplot\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/) is an extension of [ggplot2](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n    -   To provide alternative statistical inference methods by default.\n\n    -   To follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting. For example, here are results from a robust t-test:\n:::\n\n## 1.1 Install and launch R packages\n\nFor the purpose of this exercise, the following R packages will be used, they are:\n\n-   **tidyverse**, a family of R packages for data MATHS process,\n\n-   **ggstatsplot**, a ggplot2 extension specially designed for creating statistical graphics.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n\n## 1.2 Importing the data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n## 1.3 Overview of the data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nsummary(exam)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n```\n:::\n:::\n\n\n# 2. Visual Statistical Analysis with ggstatsplot\n\n::: panel-tabset\n### \\[One-sample test: gghistostats()\\]\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary. gghistostats() is used to to build an visual of one-sample test on English scores.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### \\[Two-sample mean test: ggbetweenstats()\\]\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary. `ggbetweenstats()` is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### \\[Oneway ANOVA Test: ggbetweenstats()\\]\n\n`ggbetweenstats()` is used to build a visual for One-way ANOVA test on English score by race.\n\n“ns” → only non-significant\n\n“s” → only significant\n\n“all” → everything\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### \\[Significant Test of Correlation: ggscatterstats()\\]\n\n`ggscatterstats()` is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### \\[Significant Test of Association (Depedence) : ggbarstats()\\]\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using `cut()` and `ggbarstats()` is used to build a visual for Significant Test of Association.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n:::\n\n# 3. Getting Started: Visualising Models\n\n::: callout-note\n## Case Study: Toyota Corolla\n\nTo build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n:::\n\n## 3.1 Install and launch R packages\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true}\" code-summary=\"Show code\"}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n\n## 3.2 Importing the data\n\nFor the purpose of this exercise, `ToyotaCorolla.xls` workbook will be imported into R.\n\nNotice that the output object `car_resale` is a tibble data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,436 × 38\n      Id Model          Price Age_08_04 Mfg_Month Mfg_Year    KM Fuel_Type    HP\n   <dbl> <chr>          <dbl>     <dbl>     <dbl>    <dbl> <dbl> <chr>     <dbl>\n 1     1 TOYOTA Coroll… 13500        23        10     2002 46986 Diesel       90\n 2     2 TOYOTA Coroll… 13750        23        10     2002 72937 Diesel       90\n 3     3  TOYOTA Corol… 13950        24         9     2002 41711 Diesel       90\n 4     4 TOYOTA Coroll… 14950        26         7     2002 48000 Diesel       90\n 5     5 TOYOTA Coroll… 13750        30         3     2002 38500 Diesel       90\n 6     6 TOYOTA Coroll… 12950        32         1     2002 61000 Diesel       90\n 7     7  TOYOTA Corol… 16900        27         6     2002 94612 Diesel       90\n 8     8 TOYOTA Coroll… 18600        30         3     2002 75889 Diesel       90\n 9     9  TOYOTA Corol… 21500        27         6     2002 19700 Petrol      192\n10    10  TOYOTA Corol… 12950        23        10     2002 71138 Diesel       69\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Met_Color <dbl>, Color <chr>, Automatic <dbl>, CC <dbl>,\n#   Doors <dbl>, Cylinders <dbl>, Gears <dbl>, Quarterly_Tax <dbl>,\n#   Weight <dbl>, Mfr_Guarantee <dbl>, BOVAG_Guarantee <dbl>,\n#   Guarantee_Period <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n```\n:::\n:::\n\n\n## 3.3 Overview of the data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show code\"}\nsummary(car_resale)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM          Fuel_Type        \n Min.   : 1.000   Min.   :1998   Min.   :     1   Length:1436       \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   Class :character  \n Median : 5.000   Median :1999   Median : 63390   Mode  :character  \n Mean   : 5.549   Mean   :2000   Mean   : 68533                     \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021                     \n Max.   :12.000   Max.   :2004   Max.   :243000                     \n       HP          Met_Color         Color             Automatic      \n Min.   : 69.0   Min.   :0.0000   Length:1436        Min.   :0.00000  \n 1st Qu.: 90.0   1st Qu.:0.0000   Class :character   1st Qu.:0.00000  \n Median :110.0   Median :1.0000   Mode  :character   Median :0.00000  \n Mean   :101.5   Mean   :0.6748                      Mean   :0.05571  \n 3rd Qu.:110.0   3rd Qu.:1.0000                      3rd Qu.:0.00000  \n Max.   :192.0   Max.   :1.0000                      Max.   :1.00000  \n       CC            Doors         Cylinders     Gears       Quarterly_Tax   \n Min.   : 1300   Min.   :2.000   Min.   :4   Min.   :3.000   Min.   : 19.00  \n 1st Qu.: 1400   1st Qu.:3.000   1st Qu.:4   1st Qu.:5.000   1st Qu.: 69.00  \n Median : 1600   Median :4.000   Median :4   Median :5.000   Median : 85.00  \n Mean   : 1577   Mean   :4.033   Mean   :4   Mean   :5.026   Mean   : 87.12  \n 3rd Qu.: 1600   3rd Qu.:5.000   3rd Qu.:4   3rd Qu.:5.000   3rd Qu.: 85.00  \n Max.   :16000   Max.   :5.000   Max.   :4   Max.   :6.000   Max.   :283.00  \n     Weight     Mfr_Guarantee    BOVAG_Guarantee  Guarantee_Period\n Min.   :1000   Min.   :0.0000   Min.   :0.0000   Min.   : 3.000  \n 1st Qu.:1040   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.: 3.000  \n Median :1070   Median :0.0000   Median :1.0000   Median : 3.000  \n Mean   :1072   Mean   :0.4095   Mean   :0.8955   Mean   : 3.815  \n 3rd Qu.:1085   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.: 3.000  \n Max.   :1615   Max.   :1.0000   Max.   :1.0000   Max.   :36.000  \n      ABS            Airbag_1         Airbag_2          Airco       \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8134   Mean   :0.9708   Mean   :0.7228   Mean   :0.5084  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Automatic_airco   Boardcomputer      CD_Player       Central_Lock   \n Min.   :0.00000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.00000   Median :0.0000   Median :0.0000   Median :1.0000  \n Mean   :0.05641   Mean   :0.2946   Mean   :0.2187   Mean   :0.5801  \n 3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.00000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Powered_Windows Power_Steering       Radio          Mistlamps    \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.000  \n 1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.000  \n Median :1.000   Median :1.0000   Median :0.0000   Median :0.000  \n Mean   :0.562   Mean   :0.9777   Mean   :0.1462   Mean   :0.257  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:1.000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.000  \n  Sport_Model     Backseat_Divider  Metallic_Rim    Radio_cassette  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :1.0000   Median :0.0000   Median :0.0000  \n Mean   :0.3001   Mean   :0.7702   Mean   :0.2047   Mean   :0.1455  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n    Tow_Bar      \n Min.   :0.0000  \n 1st Qu.:0.0000  \n Median :0.0000  \n Mean   :0.2779  \n 3rd Qu.:1.0000  \n Max.   :1.0000  \n```\n:::\n:::\n\n\n# 4. Visualising Models\n\n## **4.1 Multiple Regression Model using lm()**\n\nThe code chunk below is used to calibrate a multiple linear regression model by using `lm()` of Base Stats of R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n```\n:::\n:::\n\n\n## **4.2 Model Diagnostic**\n\n::: panel-tabset\n## Check for multicolinearity\n\nIn the code chunk, *`check_collinearity()`* of **performance** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Check normality assumption\n\nIn the code chunk, *`check_normality()`* of **performance** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_n <- check_normality(model1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(check_n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Check model for homogeneity of variances\n\nIn the code chunk, *check_heteroscedasticity()* of **performance** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(check_h)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## Complete check\n\nPerform the complete by using *`check_model()`*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n:::\n\n## 4.3 **Visualising Regression Parameters**\n\nIn the code below, `plot()` of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nIn the code below, *`ggcoefstats()`* of ggstatsplot package to visualise the parameters of a regression model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n# 5. References\n\n[10  Visual Statistical Analysis](https://r4va.netlify.app/chap10)\n",
    "supporting": [
      "Hands-on_Ex04-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
[
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-class Exercise 7",
    "section": "",
    "text": "In-class exercise 7 comprised of two parts on geospatial mapping with Tableau and R."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#install-and-launch-r-packages",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#install-and-launch-r-packages",
    "title": "In-class Exercise 7",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nThe key R packages installed are as follows:\n\n\n\n\n\n\nR packages installed\n\n\n\n\n\n\nterra: a replacement of the raster package that is similar (but simpler and faster) interface than raster.\ngstat: an R package used for spatial and spatio-temporal geostatistical modelling, prediction and simulation.\nautomap: an R package for performing automatic variogram modelling and kriging interpolation.\n\n\n\n\n\npacman::p_load(sf, terra, gstat, automap,\n               tmap, viridis, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#the-data",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#the-data",
    "title": "In-class Exercise 7",
    "section": "2.1 The data",
    "text": "2.1 The data\nThere are three dataset used in this in-class exercise:\n\nRainfallStation.csv provides location information of existing rainfall stations in Singapore. The data is downloaded from Meteological Service Singapore.\nDAILYDATA_202402.csv provides weather data are rainfall stations for the month February, 2024. The data is also downloaded from Meteological Service Singapore.\nMPSZ-2019 contains planning subzone boundary of URA Master Plan 2019. It is downloaded from data.gov.sg in its original data kml format."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-rainfall-station-data",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-rainfall-station-data",
    "title": "In-class Exercise 7",
    "section": "2.2 Import rainfall station data",
    "text": "2.2 Import rainfall station data\nCode chunk below uses read_csv() of readr package to import RainfallStation.csv.\n\nrfstations &lt;-\n  read_csv(\"data/aspatial/RainfallStation.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-rainfall-record-data",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-rainfall-record-data",
    "title": "In-class Exercise 7",
    "section": "2.3 Import rainfall record data",
    "text": "2.3 Import rainfall record data\nCode chunk below uses read_csv() of readr package to import DAILYDATA_202402.csv.\n\nrfdata &lt;-\n  read_csv(\"data/aspatial/DAILYDATA_202402.csv\") %&gt;%\n  select(c(1, 5)) %&gt;%\n  group_by(Station) %&gt;%\n  summarise(MONTHSUM = sum(`Daily Rainfall Total (mm)`)) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#convert-aspatial-data-into-geospatial-data",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#convert-aspatial-data-into-geospatial-data",
    "title": "In-class Exercise 7",
    "section": "2.4 Convert aspatial data into geospatial data",
    "text": "2.4 Convert aspatial data into geospatial data\nCode chunk below uses left_join() to combine rfdata dataset and rfstations dataset.\nNote: Station field is available in both data table of rfdata and rfstations, therefore, by() argument of left_join() is not required.\n\nrfdata &lt;-rfdata %&gt;%\n  left_join(rfstations)\n\nCode chunk below uses st_as_sf() to create geometry object based on longitude, latitude and crs 4326. It then pipe with st_transform() to transform to EPSG: 3414 (i.e. Singapore SVY21 Projected Coordinate).\n\nrfdata_sf &lt;- st_as_sf(rfdata,\n                      coords = c(\"Longitude\", \"Latitude\"),\n                      crs = 4326\n                      ) %&gt;%\n  st_transform(crs = 3414)\n\n\n\n\n\n\n\nLearning Points\n\n\n\n\ncoords argument is important to map the x-coordinates (i.e. Longitude) first, then follow by the y-coordinates (i.e. Latitude).\ncrs = 4326 indicates that the source data is in wgs84 coordinates system.\nst_transform() of sf package is then used to transform the source data from wgs84 to svy21 projected coordinates system.\nsvy21 is the official projected coordinates of Singapore. 3414 is the EPSG code of svy21."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-planning-subzone-boundary-data",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#import-planning-subzone-boundary-data",
    "title": "In-class Exercise 7",
    "section": "2.5 Import planning subzone boundary data",
    "text": "2.5 Import planning subzone boundary data\nCode chunk below uses st_read() of sf package is used to import MPSZ-2019 shapefile into R. The output is named mpsz2019. It is in polygon feature tibble data.frame format.\nNote: Given that the source data is in wgs84 coordinate system, st_transform() is used to transform the output of sf data.frame into svy21 project coordinates system.\n\nmpsz2019 &lt;- st_read(dsn = \"data/geospatial\",\n                    layer = \"MPSZ-2019\"\n                    ) %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\teoose\\ISSS608\\In-class_Ex\\In-class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gstat",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gstat",
    "title": "In-class Exercise 7",
    "section": "5.1 gstat",
    "text": "5.1 gstat\nThere are three parameters of gstat function:\n\nformula: The prediction “formula” specifying the dependent and the independent variables (co-variates)\ndata: The calibration data\nmodel: The variogram model\n\n\nres &lt;- gstat(formula = MONTHSUM ~ 1, \n             locations = rfdata_sf, \n             nmax = 3,\n             set = list(idp = 0))\n\nCode chunk below uses predict() to interpolate (calculate predicted values):\nThe predict function accepts:\n\nA raster—stars object, such as dem\nA model—gstat object, such as g\n\nThe raster serves two purposes:\n\nSpecify the locations for making predictions (in all methods), and\nSpecify covariate values (in Universal Kriging method only).\n\n\nresp &lt;- predict(res, coop)\n\n[inverse distance weighted interpolation]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\n\npred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\nCode chunk below interpolates surface by using tmap() function.\n\nn5 &lt;- tmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\nWith the purpose to understand how the final surface map will be affected by the different nmax values, different variation of spatial interpolation can be made by changing nmax argument.\n\nnmax = 3nmax = 5nmax = 10nmax = 15\n\n\n\n\nShow code\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\n\n\n\n\n\nShow code\nres5 &lt;- gstat(formula = MONTHSUM ~ 1, \n             locations = rfdata_sf, \n             nmax = 5,\n             set = list(idp = 0))\n\nresp5 &lt;- predict(res5, coop)\n\n\n[inverse distance weighted interpolation]\n\n\nShow code\nresp5$x &lt;- st_coordinates(resp5)[,1]\nresp5$y &lt;- st_coordinates(resp5)[,2]\nresp5$pred &lt;- resp5$var1.pred\n\npred5 &lt;- terra::rasterize(resp5, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred5) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\n\n\n\n\n\nShow code\nres10 &lt;- gstat(formula = MONTHSUM ~ 1, \n             locations = rfdata_sf, \n             nmax = 10,\n             set = list(idp = 0))\n\nresp10 &lt;- predict(res10, coop)\n\n\n[inverse distance weighted interpolation]\n\n\nShow code\nresp10$x &lt;- st_coordinates(resp10)[,1]\nresp10$y &lt;- st_coordinates(resp10)[,2]\nresp10$pred &lt;- resp10$var1.pred\n\npred10 &lt;- terra::rasterize(resp10, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred10) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\n\n\n\n\n\nShow code\nres15 &lt;- gstat(formula = MONTHSUM ~ 1, \n             locations = rfdata_sf, \n             nmax = 15,\n             set = list(idp = 0))\n\nresp15 &lt;- predict(res15, coop)\n\n\n[inverse distance weighted interpolation]\n\n\nShow code\nresp15$x &lt;- st_coordinates(resp15)[,1]\nresp15$y &lt;- st_coordinates(resp15)[,2]\nresp15$pred &lt;- resp10$var1.pred\n\npred15 &lt;- terra::rasterize(resp15, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred10) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n\n\nThe variations in nmax value revealed the following:\n\nFor maps with nmax values of 3 and 5, though both maps have the same mean range/ interval values, however, there is visible difference in their mapping.\nFor maps with nmax values of 10 and 15, both maps have the same mean range/ interval values with no/ little visible in their mapping.\n\n\n\n\n\n\n\n\n\n\nLearning Points\n\n\n\nA formula object is created using the ~ operator, which separates names of dependent variables (to the left of the ~ symbol) and independent variables (to the right of the ~ symbol). Writing 1 to the right of the ~ symbol, as in ~ 1, means that there are no independent variables38."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gstats",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gstats",
    "title": "In-class Exercise 7",
    "section": "6.1 gstats",
    "text": "6.1 gstats\nStep 1: Calculate and examine empirical variogram by using variogram() of gstat package.\nThe function requires two arguments:\n\nformula, the dependent variable and the covariates (same as in gstat in Section 5.1)\ndata, a point layer with the dependent variable and covariates as attributes\n\nCode chunk below shows Step 1 as described above.\n\nv &lt;- variogram(MONTHSUM ~ 1, \n               data = rfdata_sf)\nplot(v)\n\n\n\n\nStep 2: Comparison of the above plot with the theoretical models below:\n\n\n\nImage Source: ISSS608\n\n\nStep 3: Empirical variogram model will be fitted by using fit.variogram() of gstat package.\nCode chunk below shows Step 2 as described above.\n\nfv &lt;- fit.variogram(object = v,\n                    model = vgm(\n                      psill = 0.5, \n                      model = \"Sph\",\n                      range = 5000, \n                      nugget = 0.1))\nfv\n\n  model     psill    range\n1   Nug 0.1129190    0.000\n2   Sph 0.5292397 5213.396\n\n\nCode chunk below visualises how well the observed data fit the model by plotting fv.\n\nplot(v, fv)\n\n\n\n\nCode chunk below performs spatial interpolation by using the newly derived model.\n\nk &lt;- gstat(formula = MONTHSUM ~ 1, \n           data = rfdata_sf, \n           model = fv)\nk\n\ndata:\nvar1 : formula = MONTHSUM`~`1 ; data dim = 43 x 2\nvariograms:\n        model     psill    range\nvar1[1]   Nug 0.1129190    0.000\nvar1[2]   Sph 0.5292397 5213.396\n\n\nCode chunk below uses predict() to estimate the unknown grids.\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\nresp\n\nSimple feature collection with 314019 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2692.528 ymin: 15773.73 xmax: 56371.45 ymax: 50231.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   var1.pred  var1.var                  geometry        x        y     pred\n1   131.0667 0.6608399 POINT (25883.42 50231.33) 25883.42 50231.33 131.0667\n2   130.9986 0.6610337  POINT (25933.4 50231.33) 25933.40 50231.33 130.9986\n3   130.9330 0.6612129 POINT (25983.38 50231.33) 25983.38 50231.33 130.9330\n4   130.8698 0.6613782 POINT (26033.36 50231.33) 26033.36 50231.33 130.8698\n5   130.8092 0.6615303 POINT (26083.34 50231.33) 26083.34 50231.33 130.8092\n6   130.7514 0.6616697 POINT (26133.32 50231.33) 26133.32 50231.33 130.7514\n7   130.6965 0.6617971  POINT (26183.3 50231.33) 26183.30 50231.33 130.6965\n8   130.6446 0.6619131 POINT (26233.28 50231.33) 26233.28 50231.33 130.6446\n9   130.5958 0.6620184 POINT (26283.26 50231.33) 26283.26 50231.33 130.5958\n10  132.5484 0.6542154 POINT (25033.76 50181.32) 25033.76 50181.32 132.5484\n\n\nCode chunk below uses rasterize() of terra to create a raster surface data object.\nThe output object kpred is in SpatRaster object class with a spatial resolution of 50m x 50m. It consists of 1075 columns and 690 rows and in SVY21 projected coordinates system.\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")\nkpred\n\nclass       : SpatRaster \ndimensions  : 690, 1075, 1  (nrow, ncol, nlyr)\nresolution  : 49.98037, 50.01103  (x, y)\nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncoord. ref. : SVY21 / Singapore TM (EPSG:3414) \nsource(s)   : memory\nname        :      last \nmin value   :  72.77826 \nmax value   : 195.53284"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#mapping-the-interpolated-rainfall-raster",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#mapping-the-interpolated-rainfall-raster",
    "title": "In-class Exercise 7",
    "section": "6.2 Mapping the interpolated rainfall raster",
    "text": "6.2 Mapping the interpolated rainfall raster\nCode chunk below uses tmap() function to map the interpolated rainfall raster (i.e. kpred)\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(kpred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\",\n            title = \"Total monthly rainfall (mm)\") +\n  tm_layout(main.title = \"Distribution of monthly rainfall, Feb 2024\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#automatic-variogram-modelling",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#automatic-variogram-modelling",
    "title": "In-class Exercise 7",
    "section": "6.3 Automatic variogram modelling",
    "text": "6.3 Automatic variogram modelling\nCode chunk below uses autofirVariogram() of automap package can be used to perform varigram modelling.\n\nv_auto &lt;- autofitVariogram(MONTHSUM ~ 1, \n                           rfdata_sf)\nplot(v_auto)\n\n\n\n\n\nv_auto\n\n$exp_var\n   np      dist     gamma dir.hor dir.ver   id\n1  15  1957.436  311.9613       0       0 var1\n2  33  3307.349  707.7685       0       0 var1\n3  54  4861.368  848.1314       0       0 var1\n4 116  6716.531  730.3969       0       0 var1\n5 111  9235.708 1006.5381       0       0 var1\n6 120 11730.199 1167.5988       0       0 var1\n7 135 14384.636 1533.5903       0       0 var1\n\n$var_model\n  model    psill   range kappa\n1   Nug     0.00       0   0.0\n2   Ste 24100.71 1647955   0.3\n\n$sserr\n[1] 0.2178294\n\nattr(,\"class\")\n[1] \"autofitVariogram\" \"list\"            \n\n\n\nk &lt;- gstat(formula = MONTHSUM ~ 1, \n           model = v_auto$var_model,\n           data = rfdata_sf)\nk\n\ndata:\nvar1 : formula = MONTHSUM`~`1 ; data dim = 43 x 2\nvariograms:\n        model    psill   range kappa\nvar1[1]   Nug     0.00       0   0.0\nvar1[2]   Ste 24100.71 1647955   0.3\n\n\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\nNote\n\n\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "3.1 R Graphics VS ggplot",
    "text": "3.1 R Graphics VS ggplot\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-geometric-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-geometric-objects",
    "title": "Hands-on Exercise 1",
    "section": "3.2 Exploring Geometric Objects",
    "text": "3.2 Exploring Geometric Objects\n\ngeom_bargeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom objects combined\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()\n\n\n\n\n\n\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram. A useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()\n\n\n\n\n\n\ngeom_violin is designed for creating violin plot and is a useful way of comparing multiple data distributions (as the plots are placed side-by-side to each other). With ordinary density curves, it would be difficult to compare multiple distributions (at once) because the lines visually interfere with each other.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\ngeom_point() is especially useful for creating scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nY-scale in geom_dotplot might be misleading."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-geometric-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-geometric-objects",
    "title": "Hands-on Exercise 1",
    "section": "3.3 Modifying Geometric Objects",
    "text": "3.3 Modifying Geometric Objects\n\ngeom()aes()\n\n\nUse geom() function to change the following:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with #D1F2EB color, and\ncolor argument is used to change the outline colour of the bars in grey30\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"grey30\",      \n                 fill=\"#D1F2EB\")\n\n\n\n\n\n\nUse sub-group of aesthetic() - aes() to change the interior colour of histogram (i.e. fill).\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nadd lines with geom_vline or geom_hlineadd ablines with geom_vline & geom_hlineadd shapes with annotate()\n\n\nUse geom() function to change the following:\n\ngeom_vline is used to add vertical lines such as mean and median\ngeom_hline is used to add horizontal lines such as mean and median\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"#D1F2EB\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"grey30\", linewidth=1, linetype=\"dashed\") + \n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\")\n\n\n\n\n\n\nUse geom() function to change the following:\n\ngeom_vline is used to add vertical lines\ngeom_hline is used to add horizontal lines\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_vline(aes(xintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") + \n  geom_hline(aes(yintercept=50),\n               color=\"grey\", linewidth=0.8, linetype=\"dashed\") +\n  labs(x = \"Math Score\",\n       y = \"English Score\",\n       title = \"Correlation between English and Math Scores\")\n\np\n\n\n\n\n\n\nUse geom() function to change the following:\n\nannotate can be used as an alternative that can reduce the code length\n\n\n# Add rectangles\np + annotate(\"rect\", xmin=c(0,75), xmax=c(25,100), ymin=c(20,50) , ymax=c(55,100), alpha=0.2, color=\"blue\", fill=\"blue\")\n\n\n\n# Add segments\np + annotate(\"segment\", x = 0, xend = 100, y = 25, yend = 50, colour = \"purple\", size=3, alpha=0.6)\n\n\n\n# Add arrow\np + annotate(\"segment\", x = 0, xend = 100, y = 25, yend = 50, colour = \"pink\", size=3, alpha=0.6, arrow=arrow())"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1",
    "section": "3.4 Working with stat",
    "text": "3.4 Working with stat\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\nstat()stat_summary()geom()\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)\n\n\n\n\n\n\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-best-fit-curve-on-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-best-fit-curve-on-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "Adding best fit curve on scatterplot",
    "text": "Adding best fit curve on scatterplot\nThe interpretability of this graph can be improved by adding a best fit curve. geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet",
    "title": "Hands-on Exercise 1",
    "section": "3.5 Working with facet",
    "text": "3.5 Working with facet\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data.\n\nfacet_wrap()facet_grid\n\n\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nExample 1 Plotting trellis boxplot using facet_wrap() by GENDER\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           y = MATHS)) +\n  geom_boxplot() +\n  facet_wrap(~ GENDER)\n\n\n\n\n\n\nfacet_grid() forms a matrix of panels defined by row and column faceting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nExample 2 Plotting trellis boxplot using facet_grid() by GENDER\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           y = MATHS)) +\n  geom_boxplot() +\n  facet_grid(~GENDER)\n\n\n\n\nExample 3 Plotting trellis boxplot using facet_grid() by GENDER (stacked horizontal)\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           y = MATHS)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ .)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "3.6 Working with coordinates",
    "text": "3.6 Working with coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n-   [`coord_cartesian()`](https://ggplot2.tidyverse.org/reference/coord_cartesian.html): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out). \n-   [`coord_flip()`](https://ggplot2.tidyverse.org/reference/coord_flip.html): a cartesian system with the x and y flipped. \n-   [`coord_fixed()`](https://ggplot2.tidyverse.org/reference/coord_fixed.html): a cartesian system with a \"fixed\" aspect ratio (e.g. 1.78 for a \"widescreen\" plot). \n-   [`coord_quickmap()`](https://ggplot2.tidyverse.org/reference/coord_map.h\n\ndefaultcoord_flip()coord_cartesian()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "3.7 Working with theme",
    "text": "3.7 Working with theme\n\ntheme_gray()theme_bw()theme_classic()theme_minimal()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 2",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nThe code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R.\n\n\n\n\n\n\nTip\n\n\n\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, \n               hrbrthemes, tidyverse, \n               ggdist, ggridges, ggforce)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overview-of-the-data",
    "title": "Hands-on Exercise 2",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "2.1 Working with ggrepel",
    "text": "2.1 Working with ggrepel\n\n\n\n\n\n\nCaution\n\n\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points. ggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in the example tab (ggrepel).\n\n\n\ndefaultggrepel\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nSimply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customising-themes",
    "title": "Hands-on Exercise 2",
    "section": "2.2 Customising themes",
    "text": "2.2 Customising themes\nggplot2 comes with eight built-in themes: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\nRefer to link for more ggplot2 Themes\n\nggtheme (built-in) package\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_gray()\n\n\n\n\n\n\nggtheme package\nOther ‘ggplot2’ themes example: fivethirtyeight.com, stata, The Economist and Wall Street Journal.\n\nfivethirtyeight.comStataThe EconomistWall Street Journal\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_fivethirtyeight()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_stata()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  theme_wsj()\n\n\n\n\n\n\n\n\n\nhbrthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nDefaultWith Elements\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "2.3 Creating beyond single graph",
    "text": "2.3 Creating beyond single graph\n\nCreating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\nCreating Composite Graphics: pathwork methods\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"Math Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of Math Scores\")\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  labs(x = \"English Scores\",\n       y = \"No. of Students\",\n       title = \"Distribution of English Scores\") \n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\nCombining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork +\n\np1 + p2\n\n\n\n\n\n\nCombining three ggplot2 graphs\nMore complex composite can be plotted by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\nCreating composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\nCreating figure with inset\ninset_element() of patchwork enable having one or several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\nCreating composite figure by using patchwork & ggtheme\nExample below combined patchwork and the ggthemes packages discussed earlier.\n\nfivethirtyeight.comStataThe EconomistWall Street Journal\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_fivethirtyeight() +\n  theme(plot.title=element_text(size =8),\n                                        axis.title.y=element_text(size = 7),\n                                        axis.title.x=element_text(size = 7))\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_stata() +\n  theme(plot.title=element_text(size =8),\n                                        axis.title.y=element_text(size = 7),\n                                        axis.title.x=element_text(size = 7))\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist() +\n  theme(plot.title=element_text(size =8),\n                                        axis.title.y=element_text(size = 7),\n                                        axis.title.x=element_text(size = 7))\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj() +\n  theme(plot.title=element_text(size =8),\n                                        axis.title.y=element_text(size = 5),\n                                        axis.title.x=element_text(size = 5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Note: First modified during in-class exercise 4 on Section 2.1.1 Tooltip effect with tooltip aesthetic. Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 3",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\n\n\n\n\n\n\nGetting Started (Interactive Data Visualisation)\n\n\n\nFor [2. Interactive Data Visualisation]\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\n\n\n\n\n\n\n\nGetting Started (Animated Data Visualisation)\n\n\n\nFor 3. Animated Data Visualisation\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\n\n\n\nShow code\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse,\n               readxl, gifski, gapminder,\n               plotly, gganimate)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-the-data",
    "title": "Hands-on Exercise 3",
    "section": "1.2 Import the data",
    "text": "1.2 Import the data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nreadr is one of the tidyverse package.\nreadr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\n\nFor Interactive Data VisualisationFor Animated Data Visualisation\n\n\n\n\nShow code\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nData worksheet from GlobalPopulation Excel workbook will be used.\nBelow is a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\n\nShow code\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\nmutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#overview-of-the-data",
    "title": "Hands-on Exercise 3",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\nInteractive Data VisualisationAnimated Data Visualisation\n\n\n\n\nShow code\nsummary(exam_data)\n\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer.\n\n\n\nShow code\nsummary(globalPop)\n\n\n        Country          Year          Young             Old       \n Afghanistan:  28   Min.   :1996   Min.   : 15.50   Min.   : 1.00  \n Albania    :  28   1st Qu.:2010   1st Qu.: 25.70   1st Qu.: 6.90  \n Algeria    :  28   Median :2024   Median : 34.30   Median :12.80  \n Andorra    :  28   Mean   :2023   Mean   : 41.66   Mean   :17.93  \n Angola     :  28   3rd Qu.:2038   3rd Qu.: 53.60   3rd Qu.:25.90  \n Anguilla   :  28   Max.   :2050   Max.   :109.20   Max.   :77.10  \n (Other)    :6036                                                  \n   Population                Continent   \n Min.   :      3.3   Africa       :1568  \n 1st Qu.:    605.9   Asia         :1454  \n Median :   5771.6   Europe       :1344  \n Mean   :  34860.9   North America: 976  \n 3rd Qu.:  22711.0   Oceania      : 526  \n Max.   :1807878.6   South America: 336"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-ggiraph-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Working with ggiraph methods",
    "text": "2.1 Working with ggiraph methods\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\n\n2.1.1 Tooltip effect with tooltip aesthetic\nAn interactive statistical graph uses ggiraph package, which consists of two parts:\n\nggplot object will be created, and\ngirafe() of ggiraph will be used to create an interactive Scalable Vector Graphics (SVG) object.\n\n\n\nShow code\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nSummary\n\n\n\nThere are two steps involved in plotting an interactive statistical graph:\n\nAn interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph.\ngirafe() will be used to generate an svg object to be displayed on an html page.\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\n\n\n\n\n\nDisplaying multiple information on tooltip\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS,\n  \"\\n Race = \", exam_data$RACE)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\n\nSummary\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip.\nThe code populates text in ID, CLASS and RACE fields into the newly created field.\nThe newly created field is used as tooltip field as shown in the code of line 8.\n\n\n\n\n\nCustomising tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customise tooltip rendering by add css declarations. Background colour of tooltip is black and the font colour is white and bold.\n\n\nShow code\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nDisplaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nShow code\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  ggtitle(\"Maths scores of Primary by Race\")\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nTooltip effects\n\n[Default] Hover effect[Styling] Hover effectTooltip-cum-Hover effectClick effect\n\n\nCode chunk below shows the second interactive feature of ggiraph, namely data_id. Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. Note that the default value of the hover css is hover_css = “fill:orange;”.\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS, tooltip = exam_data$tooltip),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\n\n\n\nCode chunk below shows the second interactive feature of ggiraph, namely data_id. Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. Style tooltip by including opts_hover().\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n  \np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)\n\n\n\n\n\n\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web. The code chunk below shown an example of onclick.\nWeb document link with a data object will be displayed on the web browser upon mouse click.\n\n\nShow code\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)\n\n\n\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n\n\n\nCoordinated Multiple Views with ggiraph\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\n\n\n\n\n\n\n\n\n\n\n\n\nSteps to build a coordinate multiple view\n\n\n\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\n\n\n\nShow code\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.2 Working with plotly methods",
    "text": "2.2 Working with plotly methods\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n2.2.1 Interactive scatterplot: plot_ly() method\n\nplot_ly()[Styling] plot_ly()\n\n\nA basic interactive plot created by using plot_ly().\n\n\nShow code\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\ncolor argument is mapped to a qualitative visual variable (i.e. RACE).\n\n\nShow code\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n\n2.2.2 Interactive scatterplot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\nNotice that the only extra line you need to include in the code chunk is ggplotly().\n\n\nShow code\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n2.2.3 Coordinated Multiple Views with plotly\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\n\n\n\n\n\nSteps to build a coordinated linked plot\n\n\n\n\nhighlight_key() of plotly package is used as shared data.\nTwo scatterplots will be created by using ggplot2 functions.\nsubplot() of plotly package is used to place them next to each other side-by-side.\n\n\n\n\n\nShow code\nd &lt;- highlight_key(exam_data) # data to highlight\n\np1 &lt;- ggplot(data=d, # for coordinated link view, note that data highlighted here is to d instead of exam_data\n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, # for coordinated link view, note that data highlighted here is to d instead of exam_data\n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nsubplot(ggplotly(p1),  # to combine 2 ggplots together (note: this is diff from ggiraph)\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\n\nLearning Points\n\n\n\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nLearn more about crosstalk here."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.3 Working with crosstalk methods",
    "text": "2.3 Working with crosstalk methods\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n2.3.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n2.3.2 Linked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLearning Points\n\n\n\n\nhighlight() is a function of plotly package.\n\nIt sets a variety of options for brushing (i.e., highlighting) multiple plots designed mainly for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk.\n\nbscols() is a helper function of crosstalk package.\n\nIt enhances convenience to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "3.1 Working with gganimate methods",
    "text": "3.1 Working with gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nAnimated Bubble PlotStatic Bubble Plot\n\n\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\nShow code\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')\n\n\n\n\n\n\n\n\n\nShow code\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "3.2 Working with plotly",
    "text": "3.2 Working with plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\n\n\n\n\n\nLearning Points\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\n\n\nAnimated Bubble PlotStatic Bubble Plot\n\n\nUse plot_ly() method to create an animated bubble plot.\n\n\nShow code\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\n\n\n\n\n\n\n\n\n\nShow code\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data MATHS process,\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots, and\nggdist for visualising distribution and uncertainty.\n\n\n\nShow code\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#overview-of-the-data",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(exam)\n\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#visualising-distribution-with-ridgeline-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "2.1 Visualising Distribution with Ridgeline Plot",
    "text": "2.1 Visualising Distribution with Ridgeline Plot\nRidgeline plot (aka Joyplot) is a data visualisation technique used to show the distribution of a numeric value for several groups. Distribution can be represented using histograms or density plots, all aligned to the same horizontal scale and presented with a slight overlap.\n\n[Default][Varying colours][Mapping probabilities][+ quantile lines][+ custom quantile lines]\n\n\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\n\nShow code\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"MATHS grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\nA ridgelines plot shows the distribution of MATHS score by class.\n\n\nTo show varying colour (instead of solid colour), use either geom_ridgeline_gradient() or geom_density_ridges_gradient().\n\n\nShow code\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"MATHS grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\nggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of MATHS score.\nNOTE: It is important include the argument calc_ecdf = TRUE in stat_density_ridges().\n\n\nShow code\nggplot(exam,\n       aes(x = MATHS, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\nUse geom_density_ridges_gradient() to colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic.\n\n\nShow code\nggplot(exam,\n       aes(x = MATHS, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 1.5% and 98.5% tails to colour the ridgeline plot as shown in the figure below.\n\n\nShow code\nggplot(exam,\n       aes(x = MATHS, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.015, 0.985)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.015]\", \"(0.015, 0.985]\", \"(0.985, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#visualising-distribution-with-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-1.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4 - Part 1",
    "section": "2.2 Visualising Distribution with Raincloud Plot",
    "text": "2.2 Visualising Distribution with Raincloud Plot\nRaincloud Plot is a data visualisation techniques that produces a half-density to a distribution plot. The raincloud (half-density) plot enhances the traditional box-plot by highlighting multiple modalities (an indicator that groups may exist). The boxplot does not show where densities are clustered, but the raincloud plot does.\n\n[A-Half-eye graph][B-Add boxplot][C-Add dot plot][D-Finishing touch]\n\n\nPlot a Half-Eye graph by using stat_halfeye() of ggdist package. The plot contains a half-density and a slab-interval (half-eye visualisation).\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\nLearning point\n\n\n\nRemove the slab interval by setting .width = 0 and point_colour = NA.\n\n\n\n\nAdd the second geometry layer using geom_boxplot() of ggplot2 which produces a narrow boxplot. Here, we reduce the width and adjust the opacity.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\nAdd the third geometry layer using stat_dots() of ggdist package which produces a half-dotplot. This plot is similar to a histogram that indicates the number of samples (number of dots) in each bin. Here, we select side = “left” to indicate we want it on the left-hand side.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data MATHS process,\nggstatsplot, a ggplot2 extension specially designed for creating statistical graphics.\n\n\n\nShow code\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#overview-of-the-data",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(exam)\n\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#install-and-launch-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#install-and-launch-r-packages-1",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "3.1 Install and launch R packages",
    "text": "3.1 Install and launch R packages\n\n\nShow code\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#importing-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#importing-the-data-1",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "3.2 Importing the data",
    "text": "3.2 Importing the data\nFor the purpose of this exercise, ToyotaCorolla.xls workbook will be imported into R.\nNotice that the output object car_resale is a tibble data frame.\n\n\nShow code\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n\n# A tibble: 1,436 × 38\n      Id Model          Price Age_08_04 Mfg_Month Mfg_Year    KM Fuel_Type    HP\n   &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1     1 TOYOTA Coroll… 13500        23        10     2002 46986 Diesel       90\n 2     2 TOYOTA Coroll… 13750        23        10     2002 72937 Diesel       90\n 3     3  TOYOTA Corol… 13950        24         9     2002 41711 Diesel       90\n 4     4 TOYOTA Coroll… 14950        26         7     2002 48000 Diesel       90\n 5     5 TOYOTA Coroll… 13750        30         3     2002 38500 Diesel       90\n 6     6 TOYOTA Coroll… 12950        32         1     2002 61000 Diesel       90\n 7     7  TOYOTA Corol… 16900        27         6     2002 94612 Diesel       90\n 8     8 TOYOTA Coroll… 18600        30         3     2002 75889 Diesel       90\n 9     9  TOYOTA Corol… 21500        27         6     2002 19700 Petrol      192\n10    10  TOYOTA Corol… 12950        23        10     2002 71138 Diesel       69\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Met_Color &lt;dbl&gt;, Color &lt;chr&gt;, Automatic &lt;dbl&gt;, CC &lt;dbl&gt;,\n#   Doors &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Gears &lt;dbl&gt;, Quarterly_Tax &lt;dbl&gt;,\n#   Weight &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;, BOVAG_Guarantee &lt;dbl&gt;,\n#   Guarantee_Period &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#overview-of-the-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#overview-of-the-data-1",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "3.3 Overview of the data",
    "text": "3.3 Overview of the data\n\n\nShow code\nsummary(car_resale)\n\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM          Fuel_Type        \n Min.   : 1.000   Min.   :1998   Min.   :     1   Length:1436       \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   Class :character  \n Median : 5.000   Median :1999   Median : 63390   Mode  :character  \n Mean   : 5.549   Mean   :2000   Mean   : 68533                     \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021                     \n Max.   :12.000   Max.   :2004   Max.   :243000                     \n       HP          Met_Color         Color             Automatic      \n Min.   : 69.0   Min.   :0.0000   Length:1436        Min.   :0.00000  \n 1st Qu.: 90.0   1st Qu.:0.0000   Class :character   1st Qu.:0.00000  \n Median :110.0   Median :1.0000   Mode  :character   Median :0.00000  \n Mean   :101.5   Mean   :0.6748                      Mean   :0.05571  \n 3rd Qu.:110.0   3rd Qu.:1.0000                      3rd Qu.:0.00000  \n Max.   :192.0   Max.   :1.0000                      Max.   :1.00000  \n       CC            Doors         Cylinders     Gears       Quarterly_Tax   \n Min.   : 1300   Min.   :2.000   Min.   :4   Min.   :3.000   Min.   : 19.00  \n 1st Qu.: 1400   1st Qu.:3.000   1st Qu.:4   1st Qu.:5.000   1st Qu.: 69.00  \n Median : 1600   Median :4.000   Median :4   Median :5.000   Median : 85.00  \n Mean   : 1577   Mean   :4.033   Mean   :4   Mean   :5.026   Mean   : 87.12  \n 3rd Qu.: 1600   3rd Qu.:5.000   3rd Qu.:4   3rd Qu.:5.000   3rd Qu.: 85.00  \n Max.   :16000   Max.   :5.000   Max.   :4   Max.   :6.000   Max.   :283.00  \n     Weight     Mfr_Guarantee    BOVAG_Guarantee  Guarantee_Period\n Min.   :1000   Min.   :0.0000   Min.   :0.0000   Min.   : 3.000  \n 1st Qu.:1040   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.: 3.000  \n Median :1070   Median :0.0000   Median :1.0000   Median : 3.000  \n Mean   :1072   Mean   :0.4095   Mean   :0.8955   Mean   : 3.815  \n 3rd Qu.:1085   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.: 3.000  \n Max.   :1615   Max.   :1.0000   Max.   :1.0000   Max.   :36.000  \n      ABS            Airbag_1         Airbag_2          Airco       \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8134   Mean   :0.9708   Mean   :0.7228   Mean   :0.5084  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Automatic_airco   Boardcomputer      CD_Player       Central_Lock   \n Min.   :0.00000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.00000   Median :0.0000   Median :0.0000   Median :1.0000  \n Mean   :0.05641   Mean   :0.2946   Mean   :0.2187   Mean   :0.5801  \n 3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.00000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Powered_Windows Power_Steering       Radio          Mistlamps    \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.000  \n 1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.000  \n Median :1.000   Median :1.0000   Median :0.0000   Median :0.000  \n Mean   :0.562   Mean   :0.9777   Mean   :0.1462   Mean   :0.257  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:1.000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.000  \n  Sport_Model     Backseat_Divider  Metallic_Rim    Radio_cassette  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :1.0000   Median :0.0000   Median :0.0000  \n Mean   :0.3001   Mean   :0.7702   Mean   :0.2047   Mean   :0.1455  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n    Tow_Bar      \n Min.   :0.0000  \n 1st Qu.:0.0000  \n Median :0.0000  \n Mean   :0.2779  \n 3rd Qu.:1.0000  \n Max.   :1.0000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "4.1 Multiple Regression Model using lm()",
    "text": "4.1 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#model-diagnostic",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#model-diagnostic",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "4.2 Model Diagnostic",
    "text": "4.2 Model Diagnostic\n\nCheck for multicolinearityCheck normality assumptionCheck model for homogeneity of variancesComplete check\n\n\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\nIn the code chunk, check_normality() of performance package.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\n\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)\n\n\n\n\n\n\nPerform the complete by using check_model().\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#visualising-regression-parameters",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-2.html#visualising-regression-parameters",
    "title": "Hands-on Exercise 4 - Part 2",
    "section": "4.3 Visualising Regression Parameters",
    "text": "4.3 Visualising Regression Parameters\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))\n\n\n\n\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#overview-of-the-data",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(exam)\n\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#plotting-and-visualising-points-of-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#plotting-and-visualising-points-of-estimates",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "2.1 Plotting and Visualising points of estimates",
    "text": "2.1 Plotting and Visualising points of estimates\n\nSE bars of point estimatesCI of point estimatesInteractive error bars\n\n\nStandard error (SE) of bars of mean maths score by race.\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\nLearning points\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”.\n\n\n\n\n\nConfidence intervals (CI) of mean maths score by race.\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\nLearning points\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label.\n\n\n\n\n\nInteractive error bars for the 99% confidence interval of mean maths score by race.\n\n\nShow code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-3.html#getting-started-1",
    "title": "Hands-on Exercise 4 - Part 3",
    "section": "4.1 Getting Started",
    "text": "4.1 Getting Started\n\nStep 1: InstallationStep 2: Launch app in R\n\n\nInstall ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "1.2 Importing the data",
    "text": "1.2 Importing the data\nCOVID-19_DKI_Jakarta will be used\n\n\nShow code\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#overview-of-the-data",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(covid19)\n\n\n Sub-district ID                     City              District  \n Min.   :3.101e+09   JAKARTA BARAT     :56   TAMBORA       : 11  \n 1st Qu.:3.172e+09   JAKARTA PUSAT     :44   KEBAYORAN BARU: 10  \n Median :3.173e+09   JAKARTA SELATAN   :65   CIPAYUNG      :  8  \n Mean   :3.172e+09   JAKARTA TIMUR     :65   JATINEGARA    :  8  \n 3rd Qu.:3.174e+09   JAKARTA UTARA     :31   KEMAYORAN     :  8  \n Max.   :3.175e+09   KAB.ADM.KEP.SERIBU: 6   SETIA BUDI    :  8  \n                                             (Other)       :214  \n       Sub-district    Positive      Recovered        Death       \n ANCOL       :  1   Min.   :  72   Min.   :  69   Min.   :  0.00  \n ANGKE       :  1   1st Qu.:1644   1st Qu.:1578   1st Qu.: 24.50  \n BALE KAMBANG:  1   Median :2420   Median :2329   Median : 39.00  \n BALI MESTER :  1   Mean   :2572   Mean   :2477   Mean   : 40.99  \n BAMBU APUS  :  1   3rd Qu.:3372   3rd Qu.:3242   3rd Qu.: 55.00  \n BANGKA      :  1   Max.   :6231   Max.   :5970   Max.   :158.00  \n (Other)     :261"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#basic-derived-fields",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "3.1 Basic derived fields",
    "text": "3.1 Basic derived fields\n\n\nShow code\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#lower-upper-limits-95-99-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#lower-upper-limits-95-99-ci",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "3.2 Lower/ Upper Limits 95% & 99% CI",
    "text": "3.2 Lower/ Upper Limits 95% & 99% CI\n\n\nShow code\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#static-funnel-plot",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "3.3 Static funnel plot",
    "text": "3.3 Static funnel plot\n\n\nShow code\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-4.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4 - Part 4",
    "section": "3.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "3.4 Interactive Funnel Plot: plotly + ggplot2\nFunnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\n\nShow code\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html",
    "title": "Visual Creating Ternary Plot with R",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#install-and-launch-r-packages",
    "title": "Visual Creating Ternary Plot with R",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\nggtern, a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.\nPlotly R, an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js . The plotly R libary contains the ggplotly function, which will convert ggplot2 figures into a Plotly object.\n\n\npacman::p_load(plotly, ggtern, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#import-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#import-the-data",
    "title": "Visual Creating Ternary Plot with R",
    "section": "1.2 Import the data",
    "text": "1.2 Import the data\nThis exercise uses the dataset respopagsex2000to2018_tidy.csv from Singapore Residents by Planning AreaSubzone, Age Group, Sex and Type of Dwelling, June 2000-2018.\n\n\nShow code\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#overview-of-the-data",
    "title": "Visual Creating Ternary Plot with R",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(pop_data)\n\n\n      PA                 SZ                 AG                 Year     \n Length:108126      Length:108126      Length:108126      Min.   :2000  \n Class :character   Class :character   Class :character   1st Qu.:2004  \n Mode  :character   Mode  :character   Mode  :character   Median :2009  \n                                                          Mean   :2009  \n                                                          3rd Qu.:2014  \n                                                          Max.   :2018  \n   Population     \n Min.   :    0.0  \n 1st Qu.:    0.0  \n Median :  140.0  \n Mean   :  644.1  \n 3rd Qu.:  800.0  \n Max.   :14560.0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#preparing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-1.html#preparing-the-data",
    "title": "Visual Creating Ternary Plot with R",
    "section": "1.4 Preparing the data",
    "text": "1.4 Preparing the data\n\n\nShow code\n# Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive funnel plot,\ncorrplot for varied plotting options in visualisation method, graphic layout, colour, legend etc.\nggpubr for customising ggplot2-based graphs\n\n\npacman::p_load(corrplot, ggstatsplot, tidyverse,\n               ellipse, RColorBrewer)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#import-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#import-the-data",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "1.2 Import the data",
    "text": "1.2 Import the data\nThis exercise uses winequality-red.csv from Wine Quality Data Set of UCI Machine Learning Repository.\n\n\nShow code\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#overview-of-the-data",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(wine)\n\n\n fixed acidity    volatile acidity  citric acid     residual sugar  \n Min.   : 3.800   Min.   :0.0800   Min.   :0.0000   Min.   : 0.600  \n 1st Qu.: 6.400   1st Qu.:0.2300   1st Qu.:0.2500   1st Qu.: 1.800  \n Median : 7.000   Median :0.2900   Median :0.3100   Median : 3.000  \n Mean   : 7.215   Mean   :0.3397   Mean   :0.3186   Mean   : 5.443  \n 3rd Qu.: 7.700   3rd Qu.:0.4000   3rd Qu.:0.3900   3rd Qu.: 8.100  \n Max.   :15.900   Max.   :1.5800   Max.   :1.6600   Max.   :65.800  \n   chlorides       free sulfur dioxide total sulfur dioxide    density      \n Min.   :0.00900   Min.   :  1.00      Min.   :  6.0        Min.   :0.9871  \n 1st Qu.:0.03800   1st Qu.: 17.00      1st Qu.: 77.0        1st Qu.:0.9923  \n Median :0.04700   Median : 29.00      Median :118.0        Median :0.9949  \n Mean   :0.05603   Mean   : 30.53      Mean   :115.7        Mean   :0.9947  \n 3rd Qu.:0.06500   3rd Qu.: 41.00      3rd Qu.:156.0        3rd Qu.:0.9970  \n Max.   :0.61100   Max.   :289.00      Max.   :440.0        Max.   :1.0390  \n       pH          sulphates         alcohol         quality     \n Min.   :2.720   Min.   :0.2200   Min.   : 8.00   Min.   :3.000  \n 1st Qu.:3.110   1st Qu.:0.4300   1st Qu.: 9.50   1st Qu.:5.000  \n Median :3.210   Median :0.5100   Median :10.30   Median :6.000  \n Mean   :3.219   Mean   :0.5313   Mean   :10.49   Mean   :5.818  \n 3rd Qu.:3.320   3rd Qu.:0.6000   3rd Qu.:11.30   3rd Qu.:6.000  \n Max.   :4.010   Max.   :2.0000   Max.   :14.90   Max.   :9.000  \n     type          \n Length:6497       \n Class :character  \n Mode  :character"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#basic-plot",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "3.1 Basic Plot",
    "text": "3.1 Basic Plot\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nLearning Points\n\ncor.vars argument is used to compute the correlation matrix needed to build the corrgram.\nggcorrplot.args argument provide additional (mostly aesthetic) arguments that will be passed to ggcorrplot::ggcorrplot function. The list should avoid any of the following arguments since they are already internally being used: corr, method, p.mat, sig.level, ggtheme, colors, lab, pch, legend.title, digits."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#multiple-plots",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#multiple-plots",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "3.2 Multiple Plots",
    "text": "3.2 Multiple Plots\n\n\n\n\n\n\nNote\n\n\n\nFaceting is not available in ggcorrmat() but in grouped_ggcorrmat() of ggstatsplot.\n\n\n\nPlotting side-by-sidePlotting top-bottom\n\n\n\n\nShow code\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2), # change the no. of columns required\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  ),\n  ggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n)\n\n\n\n\n\n\n\n\n\nShow code\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 1), # change the no. of columns required\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  ),\n  ggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 10),\n      axis.text.y = element_text(size = 10)))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nLearning Points\n\nUse argument grouping.var to build a facet plot.\nBehind group_ggcorrmat(), patchwork package is used to create the multiplot. plotgrid.args argument provides a list of additional arguments passed to patchwork::wrap_plots, except for guides argument which is already separately specified earlier.\nannotation.args argument calls plot annotation arguments of patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#working-with-layout",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.1 Working with layout",
    "text": "4.1 Working with layout\ncorrplor() supports three layout types, namely: “full”, “upper” or “lower”. \n\nDefault plotCustomised plot\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\narguments diag and tl.col are used to turn off the diagonal cells and to change the axis text label colour to black colour respectively as shown in the code chunk and figure below.\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#working-with-mixed-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#working-with-mixed-layout",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.2 Working with mixed layout",
    "text": "4.2 Working with mixed layout\nCreate a coorgram with mixed layout, the corrplot.mixed(), a wrapped function for mixed visualisation style will be used.\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nLearning Points\n\n\n\nThe lower and upper are used to define the visualisation method used.\nIn this case ellipse is used to map the lower half of the corrgram and numerical matrix (i.e. number) is used to map the upper half of the corrgram.\nThe argument tl.pos, on the other, is used to specify the placement of the axis label. The diag argument is used to specify the glyph on the principal diagonal of the corrgram."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#combining-corrgram-with-the-significant-test",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#combining-corrgram-with-the-significant-test",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.3 Combining corrgram with the significant test",
    "text": "4.3 Combining corrgram with the significant test\nExample: Correlation between total sulfur dioxide and free surfur dioxide is statistically significant at significant level of 0.1 but not the pair between total sulfur dioxide and citric acid.\nUse the p.mat argument of corrplot function as shown in the code chunk below.\n\nwine.sig = cor.mtest(wine.cor, \n                     conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#reordering-a-corrgram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#reordering-a-corrgram",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.4 Reordering a corrgram",
    "text": "4.4 Reordering a corrgram\nMatrix reorder is very important for mining the hiden structure and pattern in a corrgram. By default, the order of attributes of a corrgram is sorted according to the correlation matrix (i.e. “original”). The default setting can be over-write by using the order argument of corrplot(). Currently, corrplot package support four sorting methods, they are:\n\n“AOE” is for the angular order of the eigenvectors. See Michael Friendly (2002) for details.\n“FPC” for the first principal component order.\n“hclust” for hierarchical clustering order, and “hclust.method” for the agglomeration method to be used.\n\n“hclust.method” should be one of “ward”, “single”, “complete”, “average”, “mcquitty”, “median” or “centroid”.\n\n“alphabet” for alphabetical order.\n\n“AOE”, “FPC”, “hclust”, “alphabet”. More algorithms can be found in seriation package.\n\n\nShow code\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#recordering-a-correlation-matrix-using-hclust",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#recordering-a-correlation-matrix-using-hclust",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.5 Recordering a correlation matrix using hclust",
    "text": "4.5 Recordering a correlation matrix using hclust\nIf using hclust, corrplot() can draw rectangles around the corrgram based on the results of hierarchical clustering.\n\n\nShow code\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#customising-the-correlogram-colour",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-2.html#customising-the-correlogram-colour",
    "title": "Hands-on Exercise 5 - Part 2",
    "section": "4.6 Customising the correlogram (colour)",
    "text": "4.6 Customising the correlogram (colour)\nAdjust correlation matrix method from ellipse to colour.\n\n\nShow code\ncol &lt;- colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\n\ncorrplot(wine.cor, method=\"color\", col=col(200), \n         type=\"upper\", order=\"hclust\", \n         addCoef.col = \"black\", # Add coeff of correlation\n         tl.col=\"black\", #Text label color\n         # hide correlation coeff on the main diagonal\n         diag=FALSE\n         )\n\n\n\n\n\nCombine correlation with confidence level (95%)/ significance level (0.05)\nUse insig = \"blank\" to exclude insignificant values.\n\n\nShow code\nwine.sig = cor.mtest(wine.cor, \n                     conf.level= .95)\n\ncol &lt;- colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\n\ncorrplot(wine.cor, method=\"color\", col=col(200), \n         type=\"upper\", order=\"hclust\", \n         addCoef.col = \"black\", # Add coeff of correlation\n         tl.col=\"black\", #Text label color\n         # Combine with significance\n         p.mat = wine.sig$p, sig.level = 0.05, insig = \"blank\",\n         # hide correlation coeff on the main diagonal\n         diag=FALSE\n         )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Application",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications webpage.\nThis course is taken as part of my Master of IT in Business (MITB) in Singapore Management University (SMU) and is taught by SMU Professor Dr. Kam.\nThe coursework prepared will use R programming as the main courseware and maintain using Quarto for the website.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nseriation for arranging objects in a linear order set,\ndendextend provides a set of functions for visualising dendrogram objects and compare trees of hierarchical clusterings,\nheatmaply for creating interactive heatmaps, and\nreadxl for reading excel spreadsheets.\n\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse, readxl)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#import-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#import-the-data",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "1.2 Import the data",
    "text": "1.2 Import the data\nThis exercise used the World Happiness 2018 report dataset.\n\n\nShow code\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#preparation-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#preparation-of-the-data",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "1.3 Preparation of the data",
    "text": "1.3 Preparation of the data\nRows were replaced with country name instead of row number by using the code chunk below.\n\n\nShow code\nrow.names(wh) &lt;- wh$Country"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#transform-data-frame-into-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#transform-data-frame-into-matrix",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "1.4 Transform data frame into matrix",
    "text": "1.4 Transform data frame into matrix\n\n\n\n\n\n\nNote\n\n\n\nData is usually loaded into a data frame. To make heatmap, data matrix is required.\nUse data.matrix() to tranform data frame into data matrix.\n\n\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#overview-of-the-data",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "1.5 Overview of the data",
    "text": "1.5 Overview of the data\n\n\nShow code\nsummary(wh)\n\n\n   Country             Region          Happiness score  Whisker-high  \n Length:156         Length:156         Min.   :2.905   Min.   :3.074  \n Class :character   Class :character   1st Qu.:4.454   1st Qu.:4.590  \n Mode  :character   Mode  :character   Median :5.378   Median :5.478  \n                                       Mean   :5.376   Mean   :5.479  \n                                       3rd Qu.:6.168   3rd Qu.:6.260  \n                                       Max.   :7.632   Max.   :7.695  \n  Whisker-low       Dystopia     GDP per capita   Social support \n Min.   :2.735   Min.   :0.292   Min.   :0.0000   Min.   :0.000  \n 1st Qu.:4.345   1st Qu.:1.654   1st Qu.:0.6162   1st Qu.:1.077  \n Median :5.285   Median :1.909   Median :0.9495   Median :1.262  \n Mean   :5.273   Mean   :1.923   Mean   :0.8874   Mean   :1.217  \n 3rd Qu.:6.051   3rd Qu.:2.270   3rd Qu.:1.1978   3rd Qu.:1.463  \n Max.   :7.569   Max.   :2.961   Max.   :1.6490   Max.   :1.644  \n Healthy life expectancy Freedom to make life choices   Generosity    \n Min.   :0.0000          Min.   :0.0000               Min.   :0.0000  \n 1st Qu.:0.4223          1st Qu.:0.3583               1st Qu.:0.1095  \n Median :0.6440          Median :0.4940               Median :0.1740  \n Mean   :0.5980          Mean   :0.4570               Mean   :0.1816  \n 3rd Qu.:0.7772          3rd Qu.:0.5800               3rd Qu.:0.2422  \n Max.   :1.0300          Max.   :0.7240               Max.   :0.5980  \n Perceptions of corruption\n Min.   :0.0000           \n 1st Qu.:0.0510           \n Median :0.0820           \n Mean   :0.1125           \n 3rd Qu.:0.1390           \n Max.   :0.4570"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#heatmap-of-r-stats",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#heatmap-of-r-stats",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "2.1 heatmap() of R Stats",
    "text": "2.1 heatmap() of R Stats\nUse heatmap() of Base Stats to plot static heatmap.\n\n\nShow code\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nBy default, heatmap() plots a cluster heatmap.\nThe arguments Rowv=NA and Colv=NA are used to switch off the option of plotting the row and column dendrograms.\nThe arguments cexRow and cexCol are used to define the font size used for y-axis and x-axis labels respectively.\nThe argument margins is used to ensure that the entire x-axis labels are displayed completely.\nThe argument scale can be used to normalise matrix (e.g. column-wise).\n\n\n\n\n\nShow code\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      #define font size for y-axis and x-axis labels\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      #margins ensure entire x-axis labels are displayed completely\n                      margins = c(10, 4)\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#data-transformation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#data-transformation",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "3.1 Data Transformation",
    "text": "3.1 Data Transformation\nTo ensure that all variables have comparable values, given that variables in the data set includes different types of measurement; data transformation is used before clustering.\nThree main data transformation methods are supported by heatmaply(), namely: scale, normalise and percentilse.\n\nScaling methodNormalizing methodPercentizing method\n\n\nFor variables with normal distribution:\n\nScaling (i.e. subtract the mean and divide by the standard deviation) would bring them all close to the standard normal distribution.\nEach value would reflect the distance from the mean in units of standard deviation.\nThe scale argument in heatmaply() supports column and row scaling.\n\n\n\nShow code\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\n\nFor variables with possibly different (and non-normal) distribution:\n\nNormalize function can be used to bring data to the 0 to 1 scale by subtracting the minimum and dividing by the maximum of all observations.\nThis preserves the shape of each variable’s distribution while making them easily comparable on the same “scale”.\n\nNote: Normalise method is performed on input data set (ie. wh_matrix), which is different from Scaling method.\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n\n\nSimilar to ranking the variables, but instead of keeping the rank values, divide them by the maximal rank.\nThis is done by using the ecdf of the variables on their own values, bringing each value to its empirical percentile.\nThe benefit of the percentize function is that each value has a relatively clear interpretation, it is the percent of observations that got that value or below it.\n\nNote: Percentize method is performed on input data set (ie. wh_matrix), which is similar to from Normalize method.\n\n\nShow code\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#clustering-alogrithm",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#clustering-alogrithm",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "3.2 Clustering alogrithm",
    "text": "3.2 Clustering alogrithm\nheatmaply supports a variety of hierarchical clustering algorithm. The main arguments provided are:\n\ndistfun: function used to compute the distance (dissimilarity) between both rows and columns. Defaults to dist. The options “pearson”, “spearman” and “kendall” can be used to use correlation-based clustering, which uses as.dist(1 - cor(t(x))) as the distance metric (using the specified correlation method).\nhclustfun: function used to compute the hierarchical clustering when Rowv or Colv are not dendrograms. Defaults to hclust.\ndist_method default is NULL, which results in “euclidean” to be used. It can accept alternative character strings indicating the method to be passed to distfun. By default distfun is “dist”” hence this can be one of “euclidean”, “maximum”, “manhattan”, “canberra”, “binary” or “minkowski”.\nhclust_method default is NULL, which results in “complete” method to be used. It can accept alternative character strings indicating the method to be passed to hclustfun. By default hclustfun is hclust hence this can be one of “ward.D”, “ward.D2”, “single”, “complete”, “average” (= UPGMA), “mcquitty” (= WPGMA), “median” (= WPGMC) or “centroid” (= UPGMC).\n\n\nManual approach vs Statistical approach\n\nManual approachStatistic approach\n\n\nIn the code chunk below, the heatmap is plotted by using hierachical clustering algorithm with “Euclidean distance” and “ward.D” method.\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\n\nUse dend_expend() and find_k() functions of dendextend package to determine the best clustering method and number of cluster.\n\nUse dend_expend() will be used to determine the recommended clustering method to be used.\n\n\n\nShow code\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\nThe output table shows that “average” method should be used because it gave the high optimum value.\n\nUse find_k() is used to determine the optimal number of cluster.\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\nFigure above shows that k=3 would be good.\n\nPrepare statistical analysis results.\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#seriation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#seriation",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "3.3 Seriation",
    "text": "3.3 Seriation\n\n\n\n\n\n\nProblem with hierarchical clustering\n\n\n\n\nDoes not place rows in a definite order, it merely constrains the space of possible ordering.\n\n\n\nheatmaply uses the seriation package to find an optimal ordering of rows and columns. Optimal means to optimise the Hamiltonian path length that is restricted by the dendrogram structure. It rotates the branches so that the sum of distances between each adjacent leaf (label) will be minimised.\nSeriation algorithm: Optimal Leaf Ordering (OLO). This algorithm starts with the output of an agglomerative clustering algorithm and produces a unique ordering, one that flips the various branches of the dendrogram around so as to minimise the sum of dissimilarities between adjacent leaves.\n\n“OLO” (Optimal leaf ordering) - default - optimises the above criterion (in O(n^4)).\n“GW” (Gruvaeus and Wainer) aims for the same goal but uses a potentially faster heuristic.\n“mean” gives the output (default from heatmap functions) in other packages such as gplots::heatmap.2.\n“none” gives us the dendrograms without any rotation that is based on the data matrix.\n\n\n[Default] “OLO” (Optimal leaf ordering)“GW” (Gruvaeus and Wainer)“mean”“none”\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#colour-palettes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-3.html#colour-palettes",
    "title": "Hands-on Exercise 5 - Part 3",
    "section": "3.4 Colour Palettes",
    "text": "3.4 Colour Palettes\nThere are 3 types of palettes:\n\nSequential palettes: Suitable for ordered data that progress from low to high.\nNote: Default colour palette uses by heatmaply is viridis. Click here to find out more on the different colour palettes.\nDiverging palettes: Place equal emphasis on mid-range critical values and extremes at both ends of the data range.\nQualitative palettes: Most suitable to representing nominal or categorical data, with no implied magnitude differences between legend classes, and hues are used to create the primary visual differences between classes.\n\n\n[Default] viridisBluesRdPu\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )\n\n\n\n\n\n\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )\n\n\n\n\n\n\n\n\n\n\nShow code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = RdPu,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )\n\n\n\n\n\n\n\n\n\nIn summary, the code chunk above used the following arguments:\n\ncolors is used to change the colour palette to ‘Blue’ and ‘Red to Purple’\nk_row is used to produce ‘5 groups’.\nmargins is used to change the top margin to ‘60’ and row margin to ‘200’.\nfontsizw_row and fontsize_col are used to change the font size for row and column labels to ‘4’.\nmain is used to write the main title of the plot.\nxlab and ylab are used to write the x-axis and y-axis labels respectively."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html",
    "title": "Hands-on Exercise 5 - Part 4",
    "section": "",
    "text": "Note: Last modified to include author’s details."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 5 - Part 4",
    "section": "1.1 Install and launch R packages",
    "text": "1.1 Install and launch R packages\nFor the purpose of this exercise, the following R packages will be used.\n\npacman::p_load(GGally, parallelPlot, tidyverse, RColorBrewer)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#import-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#import-the-data",
    "title": "Hands-on Exercise 5 - Part 4",
    "section": "1.2 Import the data",
    "text": "1.2 Import the data\nThis exercise used the World Happiness 2018 report dataset.\n\n\nShow code\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-4.html#overview-of-the-data",
    "title": "Hands-on Exercise 5 - Part 4",
    "section": "1.3 Overview of the data",
    "text": "1.3 Overview of the data\n\n\nShow code\nsummary(wh)\n\n\n   Country             Region          Happiness score  Whisker-high  \n Length:156         Length:156         Min.   :2.905   Min.   :3.074  \n Class :character   Class :character   1st Qu.:4.454   1st Qu.:4.590  \n Mode  :character   Mode  :character   Median :5.378   Median :5.478  \n                                       Mean   :5.376   Mean   :5.479  \n                                       3rd Qu.:6.168   3rd Qu.:6.260  \n                                       Max.   :7.632   Max.   :7.695  \n  Whisker-low       Dystopia     GDP per capita   Social support \n Min.   :2.735   Min.   :0.292   Min.   :0.0000   Min.   :0.000  \n 1st Qu.:4.345   1st Qu.:1.654   1st Qu.:0.6162   1st Qu.:1.077  \n Median :5.285   Median :1.909   Median :0.9495   Median :1.262  \n Mean   :5.273   Mean   :1.923   Mean   :0.8874   Mean   :1.217  \n 3rd Qu.:6.051   3rd Qu.:2.270   3rd Qu.:1.1978   3rd Qu.:1.463  \n Max.   :7.569   Max.   :2.961   Max.   :1.6490   Max.   :1.644  \n Healthy life expectancy Freedom to make life choices   Generosity    \n Min.   :0.0000          Min.   :0.0000               Min.   :0.0000  \n 1st Qu.:0.4223          1st Qu.:0.3583               1st Qu.:0.1095  \n Median :0.6440          Median :0.4940               Median :0.1740  \n Mean   :0.5980          Mean   :0.4570               Mean   :0.1816  \n 3rd Qu.:0.7772          3rd Qu.:0.5800               3rd Qu.:0.2422  \n Max.   :1.0300          Max.   :0.7240               Max.   :0.5980  \n Perceptions of corruption\n Min.   :0.0000           \n 1st Qu.:0.0510           \n Median :0.0820           \n Mean   :0.1125           \n 3rd Qu.:0.1390           \n Max.   :0.4570"
  }
]
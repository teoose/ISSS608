[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Application",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications webpage.\nThis course is taken as part of my Master of IT in Business (MITB) in Singapore Management University (SMU) and is taught by SMU Professor Dr. Kam.\nThe coursework prepared will use R programming as the main courseware and maintain using Quarto for the website.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven.\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven.\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- \n  read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- \n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Exercise 6: Time on the Horizon: ggHoriPlot methods",
    "section": "",
    "text": "The code chunk used is as follows:\n\n\nShow code\npacman::p_load(ggHoriPlot, ggthemes, tidyverse, RColorBrewer)\n\n\n\n\n\nThis in-class exercise uses dataset - Average Retail Prices Of Selected Consumer Items.\nUse the code chunk below to import the AVERP.csv file into R environment.\n\n\nShow code\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`)) # mutate date (from initial character format)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#loading-r-packages",
    "title": "In-class Exercise 6: Time on the Horizon: ggHoriPlot methods",
    "section": "",
    "text": "The code chunk used is as follows:\n\n\nShow code\npacman::p_load(ggHoriPlot, ggthemes, tidyverse, RColorBrewer)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-data",
    "title": "In-class Exercise 6: Time on the Horizon: ggHoriPlot methods",
    "section": "",
    "text": "This in-class exercise uses dataset - Average Retail Prices Of Selected Consumer Items.\nUse the code chunk below to import the AVERP.csv file into R environment.\n\n\nShow code\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`)) # mutate date (from initial character format)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3:",
    "section": "",
    "text": "In-class exercise 3 comprised of two parts:\n\nContinuation of Tableau practice (from in-class exercise 2), and\nCritique Figure 5\n\n\nExploring Tableau\nTwo datasets are used for the Tableau exercise: Superstore and Exam data. Click on the links to view from Tableau Public.\n\nBuilding a Tableau Dashboard (Superstore Sales & Profit Report)\nCreating a Tableau Story (Superstore Sales & Profit Report)\nBuilding a Tableau Dashboard (Maths vs English)\n\n\n\nCritique Figure 5\nFigure 5 below was retrieved from State of the Industry Survey.\n\n\n\n\n\nFigure 5 seems to fall under “Quadrant 4 - Confusing but Beautiful”\n\nSome Quick Observations\nThe figure contains two different charts. Top: Dual pie chart. Bottom: Bar chart\n\n Areas done well\n\nIn terms of Aesthetic\n\nColours used is clear and distinct, and able to distinguish the different employment types.\n\n\n\n\n Room for further improvement\n\nIn terms of Clarity\n\nAbsence of chart title, value labels, proper annotations\nLegends were not placed next to (beside) the respective charts, which would not be easy for readers to interpret and understand.\nEmployment categories could be confusing (e.g. “Employee”, “Employee + Other role(s)”, “Employee AND Freelance”).\n\nIn terms of Aesthetic\n\nThe two charts were placed too close to one another without proper demarcation. This could cause misinterpretation of the two separate charts as one chart.\nFill colour for missing values (skipped question) used was white (which could be easily mistaken as white space). Also, missing values could be filtered off for better analysis results.\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Note: In-class Exercise 4 is an exploratory extension from Hands-on Exercise 3 to include interactivity element (tool-tip) to existing scatter plots.\nShow code\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse,\n               readxl, gifski, gapminder,\n               plotly, gganimate)\nShow code\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#tooltip-effects",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#tooltip-effects",
    "title": "In-class Exercise 4",
    "section": "Tooltip effects",
    "text": "Tooltip effects\n\n[Default] Hover effect\nCode chunk below shows the second interactive feature of ggiraph, namely data_id. Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. Note that the default value of the hover css is hover_css = “fill:orange;”.\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS, tooltip = exam_data$tooltip),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\n\n\n\n[Styling] Hover effect\nCode chunk below shows the second interactive feature of ggiraph, namely data_id. Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. Style tooltip by including opts_hover().\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n  \np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)\n\n\n\n\n\n\n\n\nTooltip-cum-Hover effect\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\nShow code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In a BBC article (2016), OECD Education Director, Andreas Schleicher shared that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” Meanwhile, the slogan “Every School a Good School” began to popularise in 2011 by the then Singapore Education Minister, Mr Heng Swee Keat. However, many still believe the existence of disparities, especially between elite schools and neighbourhood schools, between the higher and lower socioeconomic status of students’ families, and between immigrant and non-immigrant families.\n\n\n\nThe Programme for International Student Assessment (PISA), is an international survey conducted every three years to assess the performance of 15-years-old students in reading, mathematics, and science. The latest data was released on 5 December 2022.\nThe objective of this project focuses on Singapore and aim to utilise Exploratory Data Analysis methods and ggplot2 functions to uncover interesting insights on the following:\n\nthe distribution of Singapore students’ performance in reading, mathematics, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\n\n\n\n\nflowchart LR\n  A(Students \\n-PISA Survey) -.-&gt; |\\nfilter| B{Students \\n-Singapore}\n  B --&gt; C(School)\n  B --&gt; D(Socioeconomic)\n  B --&gt; E(Gender)\n  C --&gt; |\\nany correlation?| F{Performance?}\n  D --&gt; |\\nany correlation?| F{Performance?}\n  E --&gt; |\\nany correlation?| F{Performance?}\n  F -.-&gt; G(Maths)\n  F -.-&gt; H(Reading)\n  F -.-&gt; I(Science)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-brief",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-brief",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In a BBC article (2016), OECD Education Director, Andreas Schleicher shared that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” Meanwhile, the slogan “Every School a Good School” began to popularise in 2011 by the then Singapore Education Minister, Mr Heng Swee Keat. However, many still believe the existence of disparities, especially between elite schools and neighbourhood schools, between the higher and lower socioeconomic status of students’ families, and between immigrant and non-immigrant families."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-objectives",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-objectives",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The Programme for International Student Assessment (PISA), is an international survey conducted every three years to assess the performance of 15-years-old students in reading, mathematics, and science. The latest data was released on 5 December 2022.\nThe objective of this project focuses on Singapore and aim to utilise Exploratory Data Analysis methods and ggplot2 functions to uncover interesting insights on the following:\n\nthe distribution of Singapore students’ performance in reading, mathematics, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\n\n\n\n\nflowchart LR\n  A(Students \\n-PISA Survey) -.-&gt; |\\nfilter| B{Students \\n-Singapore}\n  B --&gt; C(School)\n  B --&gt; D(Socioeconomic)\n  B --&gt; E(Gender)\n  C --&gt; |\\nany correlation?| F{Performance?}\n  D --&gt; |\\nany correlation?| F{Performance?}\n  E --&gt; |\\nany correlation?| F{Performance?}\n  F -.-&gt; G(Maths)\n  F -.-&gt; H(Reading)\n  F -.-&gt; I(Science)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launch-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launch-r-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Install and launch R packages",
    "text": "2.1 Install and launch R packages\nThe project uses p_load() of pacman package to check if the R packages are installed in the computer.\n\n\n\n\n\n\nR packages installed\n\n\n\n\n\n\ntidyverse: a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\nhaven: an R package that imports data formats in other statistical format (e.g. SAS, SPSS).\nknitr: an report generation tool.\nlabelled: an R package that provide functions to manipulate metadata.\nggrepel: an R package that provide geoms for ggplot2 to repel overlapping text labels.\ndplyr: an R tool for working with data frame (e.g. objects).\nggstatsplot: an extension of ggplot2 package for statistical visualisation and graphics creation.\nggdist: an R package that support visualisation of distribution and uncertainty.\nggridges: an R package that provide geoms, geom_ridgeline and geom_density_ridges.\nggthemes: an R package that provide extra themes, geoms and scales to ggplot2 package.\nperformance: an R package used for assessment, comparison and testing of statistical models.\nparameters: an R package used for processing parameters of various statistical models.\nRColorBrewer: an R package that provide various colour schemes and colour palettes.\npatchwork: an R package for preparing composite figure created using ggplot2.\nDT: an R interface to the JavaScript library DataTables that create interactive table on html page.\n\n\n\n\nThe following code chunk is used to install and launch the R packages.\n\n\nShow code\npacman::p_load(tidyverse, haven, knitr, labelled, ggrepel, dplyr, ggstatsplot,\n               qqplotr, ggdist, ggridges, performance, parameters, see, ggthemes,\n               RColorBrewer, patchwork, DT)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-pisa-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-pisa-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Import PISA data",
    "text": "2.2 Import PISA data\nThe dataset source is from PISA 2022 database which contain five data files. For this project, Student questionnaire data file (SAS format) is used.\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- \n  read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- \n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview-of-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview-of-the-data",
    "title": "Take-home Exercise 1",
    "section": "2.3 Overview of the data",
    "text": "2.3 Overview of the data\nThe final data (which focuses on students in Singapore) consists of 6,606 observations organised at student level. Each row describes the student’s performance in terms of their learning context and outcomes. The original dataset contains 1,279 columns.\n\nDataset StructureData Health\n\n\n\nChecking the structure of demo data using str():\n\nstr(stu_qqq_SG, 10)\n\nThere are a total of 6606 observations and 1279 variables.\n\n\n\n\nUsing duplicate() to check for duplicates:\n\nstu_qqq_SG[duplicated(stu_qqq_SG),]\n\n# A tibble: 0 × 1,279\n# ℹ 1,279 variables: CNT &lt;chr&gt;, CNTRYID &lt;dbl&gt;, CNTSCHID &lt;dbl&gt;, CNTSTUID &lt;dbl&gt;,\n#   CYC &lt;chr&gt;, NatCen &lt;chr&gt;, STRATUM &lt;chr&gt;, SUBNATIO &lt;chr&gt;, REGION &lt;dbl&gt;,\n#   OECD &lt;dbl&gt;, ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;, LANGTEST_COG &lt;dbl&gt;,\n#   LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;, Option_ICTQ &lt;dbl&gt;,\n#   Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;, Option_UH &lt;dbl&gt;,\n#   BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;, ST003D03T &lt;dbl&gt;,\n#   ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;, ST250Q03JA &lt;dbl&gt;, …\n\n\nThe above output shows that there are no duplicated rows found in the dataset.\n\n\nUsing sum(is.na()) to check for missing values:\n\nsum(is.na(stu_qqq_SG))\n\n[1] 4168500\n\n\nThe above output shows that there are 4,168,500 missing values across all columns.\n\n\nUse sum(is.na()) to check for missing values (student ID and school ID):\nGiven that there are missing values across columns, to ensure and check that the unique identifier (CNTSTUID) has no missing values.\n\nsum(is.na(stu_qqq_SG$CNTSTUID))\n\n[1] 0\n\n\n\nsum(is.na(stu_qqq_SG$CNTSCHID))\n\n[1] 0\n\n\nFrom the output, there are no missing values from the studentID and schoolID.\n\nDo you know?\nTo locate missing values, which(is.na()) could be used.\n\n\n\n\n\n\n\n\n\n\n\nSummary\n\n\n\nThere are a total of 6,606 observations and 1,279 variables. The output shows that there are 4,168,500 missing values across columns. Given that there are missing values across columns, checks were done to determine if there are missing values in the identifiers such as CNTSTUID and CNTSCHID before proceeding."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filter-data-columns",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filter-data-columns",
    "title": "Take-home Exercise 1",
    "section": "3.1 Filter data columns",
    "text": "3.1 Filter data columns\nWith the large dataset of 1,279 variables, it is essential to select the relevant variables to facilitate subsequent data analysis. Code chunk below reduced number of variables to 34 (from 1,279 variables) that pertains to analysing the distribution of Singapore students’ performance and the relationship between school, gender and socioeconomic status.\n\n\nShow code\nstud_sg_filt &lt;- stu_qqq_SG %&gt;%\n  select(CNTSCHID, CNTSTUID, ST004D01T, ESCS, ends_with(\"MATH\"), ends_with(\"SCIE\"), ends_with(\"READ\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#change-data-types",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#change-data-types",
    "title": "Take-home Exercise 1",
    "section": "3.2 Change data types",
    "text": "3.2 Change data types\n\nstudentID is classified as dbl, numerical continuous data. Use as.character() to cast as &lt;chr&gt; to be nominal data instead.\ngender is classified as dbl, numerical continuous data. Use as.factor() to cast as &lt;factors&gt; to be in categorical data instead.\n\n\n\nShow code\nrename_gender &lt;- c(stud_sg_filt$ST004D01T)\n\nstud_sg_filt_new &lt;- stud_sg_filt %&gt;%\n  rename(\n    # rename variables\n    \"schoolID\" = \"CNTSCHID\",\n    \"studentID\" = \"CNTSTUID\",\n    \"gender\" = \"ST004D01T\",\n  ) %&gt;%\n  mutate(\n    # change studentID to character\n    studentID = as.character(stud_sg_filt$CNTSTUID),\n    \n    # casting gender as factors  \n    gender = as.factor(stud_sg_filt$ST004D01T),\n    \n    # setting labels from \"1\" and \"2\" to \"Female\" and \"Male\"\n    gender = factor(rename_gender, labels = c(\"Female\", \"Male\"))\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#drop-missing-values-of-key-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#drop-missing-values-of-key-variables",
    "title": "Take-home Exercise 1",
    "section": "3.3 Drop missing values of key variables",
    "text": "3.3 Drop missing values of key variables\nFinal checks for missing values of key variables revealed ESCS variable with 47 missing observations in code chunk below. For complete case analysis, the final number of students (observations) used in this project will be reduced to 6,559 (i.e. all observations used with no missing values).\n\n\nShow code\ncolSums(is.na(stud_sg_filt_new)) \n\n\n schoolID studentID    gender      ESCS   PV1MATH   PV2MATH   PV3MATH   PV4MATH \n        0         0         0        47         0         0         0         0 \n  PV5MATH   PV6MATH   PV7MATH   PV8MATH   PV9MATH  PV10MATH   PV1SCIE   PV2SCIE \n        0         0         0         0         0         0         0         0 \n  PV3SCIE   PV4SCIE   PV5SCIE   PV6SCIE   PV7SCIE   PV8SCIE   PV9SCIE  PV10SCIE \n        0         0         0         0         0         0         0         0 \n  PV1READ   PV2READ   PV3READ   PV4READ   PV5READ   PV6READ   PV7READ   PV8READ \n        0         0         0         0         0         0         0         0 \n  PV9READ  PV10READ \n        0         0 \n\n\nna.omit() was used to remove missing values.\n\nstud_sg_filt_new &lt;- na.omit(stud_sg_filt_new)\n\n\nDT::datatable(stud_sg_filt_new, class= \"compact\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#create-dataframe-pivot-table",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#create-dataframe-pivot-table",
    "title": "Take-home Exercise 1",
    "section": "3.4 Create dataframe & pivot table",
    "text": "3.4 Create dataframe & pivot table\nTo have a quick summary of the dataset, dataframes and pivot table were created and computed the average (mean) of the 10 PVs of the three domains (i.e. mathematics, science and reading score).\n\n\nShow code\ndf_math &lt;- data.frame(PV1MATH = c(stud_sg_filt_new$PV1MATH),\n                      PV2MATH = c(stud_sg_filt_new$PV2MATH),\n                      PV3MATH = c(stud_sg_filt_new$PV3MATH),\n                      PV4MATH = c(stud_sg_filt_new$PV4MATH),\n                      PV5MATH = c(stud_sg_filt_new$PV5MATH),\n                      PV6MATH = c(stud_sg_filt_new$PV6MATH),\n                      PV7MATH = c(stud_sg_filt_new$PV7MATH),\n                      PV8MATH = c(stud_sg_filt_new$PV8MATH),\n                      PV9MATH = c(stud_sg_filt_new$PV9MATH),\n                      PV10MATH = c(stud_sg_filt_new$PV10MATH))\n\ndf_sci &lt;- data.frame(PV1SCIE = c(stud_sg_filt_new$PV1SCIE),\n                      PV2SCIE = c(stud_sg_filt_new$PV2SCIE),\n                      PV3SCIE = c(stud_sg_filt_new$PV3SCIE),\n                      PV4SCIE = c(stud_sg_filt_new$PV4SCIE),\n                      PV5SCIE = c(stud_sg_filt_new$PV5SCIE),\n                      PV6SCIE = c(stud_sg_filt_new$PV6SCIE),\n                      PV7SCIE = c(stud_sg_filt_new$PV7SCIE),\n                      PV8SCIE = c(stud_sg_filt_new$PV8SCIE),\n                      PV9SCIE = c(stud_sg_filt_new$PV9SCIE),\n                      PV10SCIE = c(stud_sg_filt_new$PV10SCIE))\n\ndf_read &lt;- data.frame(PV1READ = c(stud_sg_filt_new$PV1READ),\n                      PV2READ = c(stud_sg_filt_new$PV2READ),\n                      PV3READ = c(stud_sg_filt_new$PV3READ),\n                      PV4READ = c(stud_sg_filt_new$PV4READ),\n                      PV5READ = c(stud_sg_filt_new$PV5READ),\n                      PV6READ = c(stud_sg_filt_new$PV6READ),\n                      PV7READ = c(stud_sg_filt_new$PV7READ),\n                      PV8READ = c(stud_sg_filt_new$PV8READ),\n                      PV9READ = c(stud_sg_filt_new$PV9READ),\n                      PV10READ = c(stud_sg_filt_new$PV10READ))\n\nstud_sg_pivot &lt;- stud_sg_filt_new %&gt;%\n                reframe(\n                  schoolID, \n                  studentID, gender, ESCS,\n                  mean_math = rowMeans(df_math),\n                  mean_sci = rowMeans(df_sci),\n                  mean_read = rowMeans(df_read)\n                  )\n\n\n\nInteractive Data Table\n\nDT::datatable(stud_sg_pivot, class= \"compact\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#quick-visual-summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#quick-visual-summary",
    "title": "Take-home Exercise 1",
    "section": "4.1 Quick Visual Summary",
    "text": "4.1 Quick Visual Summary\n\n\nShow code\n# Calculate min, max and median values for annotations\nmin_math &lt;- round(min(stud_sg_pivot$mean_math),0)\nmax_math &lt;- round(max(stud_sg_pivot$mean_math),0)\nmn_math &lt;- round(mean(stud_sg_pivot$mean_math),0)\nq75_math &lt;- round(quantile(stud_sg_pivot$mean_math, 0.75))\nq25_math &lt;- round(quantile(stud_sg_pivot$mean_math, 0.25))\nmedian_math &lt;- round(median(stud_sg_pivot$mean_math),0)\n\nmin_sci &lt;- round(min(stud_sg_pivot$mean_sci),0)\nmax_sci &lt;- round(max(stud_sg_pivot$mean_sci),0)\nmn_sci &lt;- round(mean(stud_sg_pivot$mean_sci),0)\nq75_sci &lt;- round(quantile(stud_sg_pivot$mean_sci, 0.75))\nq25_sci &lt;- round(quantile(stud_sg_pivot$mean_sci, 0.25))\nmedian_sci &lt;- round(median(stud_sg_pivot$mean_sci),0)\n\nmin_read &lt;- round(min(stud_sg_pivot$mean_read),0)\nmax_read &lt;- round(max(stud_sg_pivot$mean_read),0)\nmn_read &lt;- round(mean(stud_sg_pivot$mean_read), 0)\nq75_read &lt;- round(quantile(stud_sg_pivot$mean_read, 0.75))\nq25_read &lt;- round(quantile(stud_sg_pivot$mean_read, 0.25))\nmedian_read &lt;- round(median(stud_sg_pivot$mean_read),0)\n\n\n# Plot visualisations\nvis_math &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(x = mean_math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"white\",\n    fill = \"#b3e2cd\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    limits = c(200,900) # Set same limits for both plots to ensure justification\n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"grey10\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mn_math),\n    colour=\"salmon\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  labs(\n    title = \"Mathematics\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n\nvis_sci &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(x = mean_sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"white\",\n    fill = \"#fed9a6\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    limits = c(200,900) # Set same limits for both plots to ensure justification\n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"grey10\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mn_sci),\n    colour=\"salmon\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  labs(\n    title = \"Science\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n\nvis_read &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(x = mean_read)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"white\",\n    fill = \"#cbd5e8\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    limits = c(100,900) # Set same limits for both plots to ensure justification\n  ) + \n  geom_vline(\n    aes(xintercept = median_read),\n    colour=\"grey10\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mn_read),\n    colour=\"salmon\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  labs(\n    title = \"Reading\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n\n\n\nvis_gen &lt;- ggplot(stud_sg_pivot, aes(x = gender)) +\n  geom_bar(\n    color = \"white\",\n    fill = \"grey30\"\n  ) +\n  labs(\n    title = \"Gender\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\nvis_sch &lt;- ggplot(stud_sg_pivot, aes(x = schoolID)) +\n  geom_dotplot(\n    binwidth = 1,\n    fill = \"grey30\",\n    dotsize = 0.2\n  ) +\n  labs(\n    title = \"School\",\n    x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\nvis_escs &lt;- ggplot(stud_sg_pivot, aes(x = ESCS)) +\n  geom_dotplot(\n    fill = \"grey30\",\n    stackratio = 1.2,\n    stackdir = \"up\",\n    color = NA,\n    dotsize = 0.2\n  ) +\n  labs(\n    title = \"Socioeconomic Status\",\n    x = NULL,\n    y = NULL\n  ) +\n  coord_cartesian(xlim=c(-4,4),\n                  ylim=c(0, 8000)) + \n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(), \n    panel.grid.major = element_blank()\n  )\n\n\n\n\nShow code\n# Patch all summary plots\n\n# performance in mathematics, science and reading\nrel_patch &lt;- (vis_math + vis_gen) / (vis_sci + vis_escs) / (vis_read + vis_sch) +\n              plot_annotation(\n                title = \"Summary Statistics of PISA 2022 results (Singapore)\",\n                tag_levels = \"I\", \n                caption = \"Data Source: OECD, 2022\")\n\nrel_patch & \n  theme(\n  # Remove y axis\n  axis.text.y = element_blank(), \n  # Remove lines in panel background for cleaner design\n  panel.grid.major = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nInitial Summary Insights\n\n\n\n\nSeemly normal distribution of students in their performance across performance domains (i.e. Mathematics, Science and Reading)\nFairly even distribution across socio-economic status, with peaks between ESCS value of -2 and 2.\nRelatively uneven distribution across schools, with multiple peaks and troughs in the dotplot."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#check-for-normality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#check-for-normality",
    "title": "Take-home Exercise 1",
    "section": "4.2 Check for normality",
    "text": "4.2 Check for normality\nThere are 10 Plausible Values for each performance domain (i.e. Mathematics, Science and Reading) for the multivariate distribution.\nTo visualise the fit of normal distribution, test for normality is conducted on the students’ performance in the respective domains. check_normality() calls stats::shapiro.test and checks the standardised residuals (and for mixed-effects model, studentised residual) for normal distribution. Normal distribution tend to fall closely along the fitted straight line.\nP-value &lt; 0.05 indicates statistical significance while p-value &gt; 0.05 fails to reject null hypothesis for statistical difference.\nNote: shapiro.test() function is only suitable for sample size no larger than 5,000.\nNormality Hypothesis:\nH0: The students’ performance (in all three domains) is normally distributed.\nH1: The students’ performance (in all three domains) is not normally distributed.\nResults revealed that the performance distribution is significantly different from normal distribution.\n\nMathematicsScienceReading\n\n\n\n\nShow code\n# Mathematics\nmodel_m &lt;- lm(PV10MATH ~ PV1MATH + PV2MATH + PV3MATH + PV4MATH + PV5MATH + PV6MATH + PV7MATH + PV8MATH + PV9MATH, \n            data = stud_sg_filt_new)\n\ncheck_m &lt;- check_normality(model_m)\nplot(check_m)\n\n\n\n\n\nShow code\nmodel_m\n\n\n\nCall:\nlm(formula = PV10MATH ~ PV1MATH + PV2MATH + PV3MATH + PV4MATH + \n    PV5MATH + PV6MATH + PV7MATH + PV8MATH + PV9MATH, data = stud_sg_filt_new)\n\nCoefficients:\n(Intercept)      PV1MATH      PV2MATH      PV3MATH      PV4MATH      PV5MATH  \n    5.05837      0.08767      0.11023      0.11040      0.10411      0.11453  \n    PV6MATH      PV7MATH      PV8MATH      PV9MATH  \n    0.10398      0.10353      0.13240      0.12590  \n\n\n\n\n\n\nShow code\n# Science\nmodel_s &lt;- lm(PV10SCIE ~ PV1SCIE + PV2SCIE + PV3SCIE + PV4SCIE + PV5SCIE + PV6SCIE + PV7SCIE + PV8SCIE + PV9SCIE, \n            data = stud_sg_filt_new)\ncheck_s &lt;- check_normality(model_s)\nplot(check_s)\n\n\n\n\n\nShow code\nmodel_s\n\n\n\nCall:\nlm(formula = PV10SCIE ~ PV1SCIE + PV2SCIE + PV3SCIE + PV4SCIE + \n    PV5SCIE + PV6SCIE + PV7SCIE + PV8SCIE + PV9SCIE, data = stud_sg_filt_new)\n\nCoefficients:\n(Intercept)      PV1SCIE      PV2SCIE      PV3SCIE      PV4SCIE      PV5SCIE  \n   15.36559      0.11959      0.11743      0.11715      0.11222      0.09978  \n    PV6SCIE      PV7SCIE      PV8SCIE      PV9SCIE  \n    0.10928      0.13310      0.08514      0.07838  \n\n\n\n\n\n\nShow code\n# Reading\nmodel_r &lt;- lm(PV10READ ~ PV1READ + PV2READ + PV3READ + PV4READ + PV5READ + PV6READ + PV7READ + PV8READ + PV9READ, \n            data = stud_sg_filt_new)\ncheck_r &lt;- check_normality(model_r)\nplot(check_r)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-performance-distribution-across-mathematics-science-and-reading",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-performance-distribution-across-mathematics-science-and-reading",
    "title": "Take-home Exercise 1",
    "section": "4.3 The performance distribution across Mathematics, Science and Reading",
    "text": "4.3 The performance distribution across Mathematics, Science and Reading\nThere are 164 schools, of which 6,606 students who studied in Singapore have taken the PISA survey in 2022. The first study examined the distribution of students’ performance. Students’ performance in the respective domains will be analysed across different variables such as school, gender and socioeconomic status in the subsequent studies.\n\n\n\n\n\n\nVisual Consideration\n\n\n\n\ngeom_histogram() was used to display distribution counts and skewness.\ngeom_boxplot() was patched then with geom_histogram() to visualise the summary statistics (mean, median, outliers, two-whiskers) in greater details.\n\n\n\n\nMathematicsScienceReading\n\n\n\n\nShow code\n# Histogram of math performance\nh_m &lt;- vis_math +\n  annotate(\n    geom = \"text\", \n    x = median_math + 200, \n    y = 700,\n    label = paste0(\"Median Performance: \\n\", median_math),\n    color = \"grey10\"\n  ) +\n  annotate(\n    geom = \"text\",\n    x = mn_math - 150, \n    y = 700,\n    label = paste0(\"Mean Performance: \\n\", mn_math),\n    color = \"salmon\"\n  ) +\n  labs(\n    title = \"Slightly left-skewed distribution in Mathematics performance\",\n    subtitle = \"Presence of few outliers (i.e. Mean score is still relatively close to Median score).\",\n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n#Boxplot of math performance\nbox_m &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(y = mean_math)\n  ) + \n  geom_boxplot(\n    colour = \"grey10\",\n    fill = \"#b3e2cd\",\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    # Annotate values on boxplot\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_math,\n    label = paste0(\"Min: \", min_math),\n    color = \"grey20\"\n  ) + \n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_math,\n    label = paste0(\"Max: \", max_math),\n    color = \"grey20\"\n  ) + \n  labs(\n    y = \"\", \n    x = \"\",\n    caption = \"Data Source: OECD, 2022\"\n    ) + \n   scale_y_continuous(\n    limits = c(200,900)\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\nhbox_m &lt;- (h_m / box_m) + \n        plot_layout(heights = c(2.0, 0.8))\n\nhbox_m\n\n\n\n\n\n\n\n\n\nShow code\n# Histogram of math performance\nh_s &lt;- vis_sci + \n  annotate(\n    geom = \"text\", \n    x = median_sci + 200, \n    y = 800,\n    label = paste0(\"Median Performance: \\n\", median_sci),\n    color = \"grey10\"\n  ) +\n  annotate(\n    geom = \"text\",\n    x = mn_sci - 150, \n    y = 800,\n    label = paste0(\"Mean Performance: \\n\", mn_sci),\n    color = \"salmon\"\n  ) +\n  labs(\n    title = \"Slightly left-skewed distribution in Science performance\",\n    subtitle = \"Presence of multiple outliers which pulled down Mean score (i.e.below Median score).\",    \n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n#Boxplot of science performance\nbox_s &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(y = mean_sci)\n  ) + \n  geom_boxplot(\n    colour = \"grey10\",\n    fill = \"#fdcdac\",\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    # Annotate values on boxplot\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_sci,\n    label = paste0(\"Min: \", min_sci),\n    color = \"grey20\"\n  ) + \n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_sci,\n    label = paste0(\"Max: \", max_sci),\n    color = \"grey20\"\n  ) + \n  labs(\n    y = \"\", \n    x = \"\",\n    caption = \"Data Source: OECD, 2022\"\n    ) + \n   scale_y_continuous(\n    limits = c(200,900)\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\nhbox_s &lt;- (h_s / box_s) + \n        plot_layout(heights = c(2.0, 0.8))\n\nhbox_s\n\n\n\n\n\n\n\n\n\nShow code\n# Histogram of math performance\nh_r &lt;- vis_read +\n  annotate(\n    geom = \"text\", \n    x = median_read + 200, \n    y = 800,\n    label = paste0(\"Median Performance: \\n\", median_read),\n    color = \"grey10\"\n  ) +\n  annotate(\n    geom = \"text\",\n    x = mn_read - 150, \n    y = 800,\n    label = paste0(\"Mean Performance: \\n\", mn_read),\n    color = \"salmon\"\n  ) +\n  labs(\n    title = \"Slightly left-skewed distribution in Reading performance\",\n    subtitle = \"Presence of multiple outliers which pulled down Mean score (i.e.below Median score).\",   \n    x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\n#Boxplot of math performance\nbox_r &lt;- \n  ggplot(\n    stud_sg_pivot, \n    aes(y = mean_read)\n  ) + \n  geom_boxplot(\n    colour = \"grey10\",\n    fill = \"#cbd5e8\",\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    # Annotate values on boxplot\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_read,\n    label = paste0(\"Min: \", min_read),\n    color = \"grey20\"\n  ) + \n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_read,\n    label = paste0(\"Max: \", max_read),\n    color = \"grey20\"\n  ) + \n  labs(\n    y = \"\", \n    x = \"\",\n    caption = \"Data Source: OECD, 2022\"\n    ) + \n   scale_y_continuous(\n    limits = c(100,900)\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank()\n  )\n\nhbox_r &lt;- (h_r / box_r) + \n        plot_layout(heights = c(2.0, 0.8))\n\nhbox_r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Insights from Histograms and Boxplots\n\n\n\n\nHistogram Plots [Mathematics, Science and Reading]\n\nThe histogram plots revealed slightly left-skewed distribution, with median score greater than mean score.\n\nBoxplots [Mathematics, Science and Reading]\n\nThe boxplots revealed relatively equal proportions around median values and dispersion of dataset. Presence of multiple outliers sighted, especially in science and reading performance."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-effect-of-socioeconomic-status-on-student-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-effect-of-socioeconomic-status-on-student-performance",
    "title": "Take-home Exercise 1",
    "section": "4.4 The effect of socioeconomic status on student performance",
    "text": "4.4 The effect of socioeconomic status on student performance\nThe second study hoped to find out if there is any specific relationship between the performances and the socioeconomic status of the students. In other words, whether lower or higher ESCS value perform better (worse, or no difference) in mathematics, science and reading.\n\n\n\n\n\n\nInitial Visual Insights from Correlation Matrix\n\n\n\n\nPositive correlation between students’ performance.\nSeemly no correlation between socioeconomic status across students’ performance.\n\n\n\n\n\nShow code\npairs(stud_sg_pivot[,4:7], \n      upper.panel = NULL,\n      col = \"#4477AA\",\n      main = \"Correlation between students performance and respective domains\",\n      labels = c('Socioeconomic', 'Mathematics', 'Science', 'Reading')\n      )\n\n\n\n\n\n\nBinning of Socioeconomic Status into Groups\nInitial visual insights from the above correlation matrix revealed no correlation between socioeconomic status across students’ performance. The relatively even distribution with peak values ranging between ESCS value of -2 and 2, is considerably large given the small ordinal scale (continuous).\nTo ascertain whether students’ performance are affected by their high and low socioeconomic status of students’ families, binning of ESCS into five quantile groups (Lowest ESCS, Low ESCS, Average ESCS, High ESCS, Highest ESCS) were made.\n\n\n\n\n\n\nVisual Consideration\n\n\n\n\npairs() was used to plot correlation matrix for a quick visual summary of the correlation between performance and socioeconomic status.\nstat_density_ridges, a stat function from ggridges package for plotting ridgeline plot.\nDensity ridges will reveal distribution of the subset (variation) of socioeconomic status for the respective domains. To identify potential differences in the distribution within ESCS and to identify potential relationships.\nCut points of 2.5% and 97.5% tails were used to colour the ridgeline plot as well as to represent the empirical cumulative density function for the distribution of the respective domains.\n\n\n\n\n\nShow code\nbinning &lt;- stud_sg_pivot %&gt;%\n  mutate(\n    # binning ESCS into 5 groups\n    ESCSGroup = (quantile_Rank=ntile(stud_sg_pivot$ESCS,5)),\n    \n    # renaming bin ESCS labels\n    ESCSGroup = factor(ESCSGroup, labels = c(\"Lowest ESCS\", \"Low ESCS\", \"Average ESCS\", \"High ESCS\", \"Highest ESCS\"))\n    )\n\n\n\n\nShow code\ndens_m &lt;- ggplot(binning,\n       aes(x = mean_math, \n           y = ESCSGroup, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) + \n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"salmon\", \"#A0A0A0A0\", \"#4477AA\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\ndens_s &lt;- ggplot(binning,\n       aes(x = mean_sci, \n           y = ESCSGroup, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"salmon\", \"#A0A0A0A0\", \"#4477AA\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\ndens_r &lt;- ggplot(binning,\n       aes(x = mean_read, \n           y = ESCSGroup, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"salmon\", \"#A0A0A0A0\", \"#4477AA\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\nMathematicsScienceReading\n\n\n\n\nShow code\npdens_m &lt;- dens_m +\n\n  labs(\n    title = \"Distribution relationship of Mathematics Performance \\nacross socioeconomic status\",\n    subtitle = \"Higher probability of performing better with higher ESCS value\",\n    x = \"Mathematics\", y = \"Socioeconomic status\",\n    caption = \"Data Source: OECD, 2022\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 500, y = 1.5,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 3\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 650, y = 6.2,\n    label = \"Highest ESCS \\ngroup recorded \\nhigher performance score\",\n    size = 3\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 7),\n    panel.grid.major = element_blank()\n  )\n\npdens_m\n\n\n\n\n\n\n\n\n\nShow code\npdens_s &lt;- dens_s +\n\n  labs(\n    title = \"Distribution relationship of Science Performance \\nacross Socioeconomic status\",\n    subtitle = \"Higher probability of performing better with higher ESCS value\",\n    x = \"Science\", y = \"Socioeconomic status\",\n    caption = \"Data Source: OECD, 2022\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 500, y = 1.5,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 3\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 400, y = 6.2,\n    label = \"Highest ESCS group recorded \\nhigher performance score\",\n    size = 3\n  ) +\n  annotate(\n    \"segment\", \n    x = 520, xend = 580,\n    y = 6.2, yend = 6.2,\n    size = 0.5\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 7),\n    panel.grid.major = element_blank()\n  )\n\npdens_s\n\n\n\n\n\n\n\n\n\nShow code\npdens_r &lt;- dens_r +\n\n  labs(\n    title = \"Distribution relationship of Reading Performance \\nacross Socioeconomic status\",\n    subtitle = \"Higher probability of performing better with higher ESCS value\",\n    x = \"Science\", y = \"Socioeconomic status\",\n    caption = \"Data Source: OECD, 2022\"\n    ) +\n  annotate(\n    geom = \"text\", \n    x = 480, y = 1.5,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 3\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 400, y = 6.2,\n    label = \"Highest ESCS group recorded \\nhigher performance score\",\n    size = 3\n  ) +\n  annotate(\n    \"segment\", \n    x = 520, xend = 580,\n    y = 6.2, yend = 6.2,\n    size = 0.5\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 7),\n    panel.grid.major = element_blank()\n  )\n\npdens_r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Insight from Density Ridge Plots\n\n\n\n\nDensity Ridge Plots [Mathematics, Science and Reading]\nBinning of ESCS variable (socioeconomic status) revealed the following:\n\nHigher probability of students performing better with higher ESCS value.\nRelatively lower performance of students with lower socioeconomic status."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-effect-of-school-on-student-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-effect-of-school-on-student-performance",
    "title": "Take-home Exercise 1",
    "section": "4.5 The effect of school on student performance",
    "text": "4.5 The effect of school on student performance\nThe third study aimed to ascertain if there is any specific relationship between schools and their respective performances in the three performance domains. In other words, whether all schools are indeed good schools.\n\n\n\n\n\n\nVisual Consideration\n\n\n\n\nstat_pointinterval() is a combination of stat_sample_slabinterval() and geom_slabinterval() that summarise using a point_interval() function.\nVisual sense of point estimates of each school and their respective performance domain would better serve its purpose, given that there are 164 schools that the students studied in.\n\n\n\n\nMathematicsScienceReading\n\n\n\n\nShow code\n#Base ggplot\nstats_point_m &lt;- ggplot(\n  data = stud_sg_pivot,\n  aes(x = schoolID,\n      y = mean_math)) +\n  \n  #Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"salmon\",\n    point_size = 1,\n    show.legend = FALSE) +\n\n  annotate(\n    \"rect\", \n    xmin=c(70200000), xmax=c(70200005), \n    ymin=c(620) , ymax=c(850), \n    alpha=0.5, color=\"#b3e2cd\", fill=\"#b3e2cd\"\n  ) +  \n\n  annotate(\n    \"rect\", \n    xmin=c(70200113), xmax=c(70200117), \n    ymin=c(280) , ymax=c(480), \n    alpha=0.5, color=\"#b3e2cd\", fill=\"#b3e2cd\"\n  ) +  \n  \n  annotate(\n    \"rect\", \n    xmin=c(70200147), xmax=c(70200152), \n    ymin=c(280) , ymax=c(480), \n    alpha=0.5, color=\"#b3e2cd\", fill=\"#b3e2cd\"\n  ) +  \n\n  geom_hline(aes(yintercept=q75_math),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q75_sci, label = \"75 Quantile\", \n                vjust = -1, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=q25_math),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q25_sci, label = \"25 Quantile\", \n                vjust = 1, font_size = 7)) +\n\n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"grey\", \"grey40\"),\n    aesthetics = \"interval_color\") +\n\n  #Title, subtitle, and caption\n  labs(title = 'Two schools performed exceptionally well while \\ntwo schools performed exceptionally poor in Mathematics',\n  subtitle = 'Visualising uncertainty in median estimates & quantiles intervals (95% and 99%) of Mathematics performance by school',\n  caption = \"Data Source: OECD, 2022\",\n  x = \"Schools\",\n  y = \"Mathematics Performance\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 7),\n        axis.text.x = element_blank())\n\nstats_point_m\n\n\n\n\n\n\n\n\n\nShow code\n#Base ggplot\nstats_point_s &lt;- ggplot(\n  data = stud_sg_pivot,\n  aes(x = schoolID,\n      y = mean_sci)) +\n  \n  #Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"salmon\",\n    point_size = 1,\n    show.legend = FALSE) +\n\n  annotate(\n    \"rect\", \n    xmin=c(70200000), xmax=c(70200005), \n    ymin=c(620) , ymax=c(850), \n    alpha=0.5, color=\"#fed9a6\", fill=\"#fed9a6\"\n  ) +  \n\n  annotate(\n    \"rect\", \n    xmin=c(70200113), xmax=c(70200117), \n    ymin=c(280) , ymax=c(480), \n    alpha=0.5, color=\"#fed9a6\", fill=\"#fed9a6\"\n  ) +  \n  \n  annotate(\n    \"rect\", \n    xmin=c(70200147), xmax=c(70200152), \n    ymin=c(280) , ymax=c(480), \n    alpha=0.5, color=\"#fed9a6\", fill=\"#fed9a6\"\n  ) +  \n  \n  geom_hline(aes(yintercept=q75_sci),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q75_sci, label = \"75 Quantile\", \n                vjust = -0.5, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=q25_sci),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q25_sci, label = \"25 Quantile\", \n                vjust = 1, font_size = 7)) +\n\n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"grey\", \"grey40\"),\n    aesthetics = \"interval_color\") +\n\n  #Title, subtitle, and caption\n  labs(title = 'Two schools performed exceptionally well while \\ntwo schools performed exceptionally poor in Science',\n  subtitle = 'Visualising uncertainty in median estimates & quantiles intervals (95% and 99%) of Science performance by school',\n  caption = \"Data Source: OECD, 2022\",\n  x = \"Schools\",\n  y = \"Science Performance\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 7),\n        axis.text.x = element_blank())\n\nstats_point_s\n\n\n\n\n\n\n\n\n\nShow code\n#Base ggplot\nstats_point_r &lt;- ggplot(\n  data = stud_sg_pivot,\n  aes(x = schoolID,\n      y = mean_read)) +\n  \n  #Using stat_pointinterval to plot the points and intervals\n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = median,\n    .interval = qi,\n    point_color = \"salmon\",\n    point_size = 1,\n    show.legend = FALSE) +\n\n  geom_hline(aes(yintercept=q75_read),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q75_read, label = \"75 Quantile\", \n                vjust = -0.5, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=q25_read),\n            color=\"red\", linewidth=0.8, linetype=\"solid\") +\n  geom_text(aes(70200003, q25_read, label = \"25 Quantile\", \n                vjust = 1, font_size = 7)) +\n\n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"grey\", \"grey40\"),\n    aesthetics = \"interval_color\") +\n\n  #Title, subtitle, and caption\n  labs(title = 'General performance of schools in Reading',\n  subtitle = 'Visualising uncertainty in median estimates & quantiles intervals (95% and 99%) of Reading performance by school',\n  caption = \"Data Source: OECD, 2022\",\n  x = \"Schools\",\n  y = \"Reading Performance\") +\n  \n  theme_hc() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 7),\n        axis.text.x = element_blank())\n\nstats_point_r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Insights from Interval Plots\n\n\n\n\nInterval Plots [Mathematics, Science and Reading]\n\nMajority of the schools performed well within the quantile interval of 25 and 75 across all three performance domains.\n\nInterval Plots [Mathematics and Science]\n\nOut of the 164 schools, two schools performed exceptionally well while two other schools performed exceptionally poor in Mathematics and Science domains."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-gender-differences-and-its-impact-on-students-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-gender-differences-and-its-impact-on-students-performance",
    "title": "Take-home Exercise 1",
    "section": "4.6 The gender differences and its impact on students’ performance",
    "text": "4.6 The gender differences and its impact on students’ performance\nThe final study aimed to find out if there is any specific relationship on gender and the respective performances in the three performance domains. In other words, whether female students are smarter than male students.\n\n\n\n\n\n\nVisual Consideration\n\n\n\n\nggbetweenstats() is a combination of box and violin plots that include statistical details.\nTo build a visual for two-sample mean test of performance by gender.\n\n\n\nTwo-sample t-test Hypothesis:\nH0: The mean performance of female students is the same as the male students (𝜇F = 𝜇M).\nH1: The mean performance of female students is not the same as the male students (𝜇F ≠ 𝜇M).\n\n\nShow code\n# Mathematics\np1 &lt;- ggbetweenstats(\n  data = stud_sg_pivot,\n  x = gender, \n  y = mean_math,\n  ylab = \"Mathematics\", # label for y-axis\n  xlab = \"Gender\", # label for y-axis\n  title = \"Statistical significant difference in performance between gender\",\n  type = \"np\",\n  palette = \"Pastel1\",\n  messages = FALSE\n)\n\n# Science\np2 &lt;- ggbetweenstats(\n  data = stud_sg_pivot,\n  x = gender, \n  y = mean_sci,\n  ylab = \"Science\", # label for y-axis\n  xlab = \"Gender\", # label for y-axis\n  title = \"Statistical significant difference in performance between gender\",\n  type = \"np\",\n  palette = \"Pastel1\",\n  messages = FALSE\n)\n\n# Reading\np3 &lt;- ggbetweenstats(\n  data = stud_sg_pivot,\n  x = gender, \n  y = mean_read,\n  ylab = \"Reading\", # label for y-axis\n  xlab = \"Gender\", # label for y-axis\n  title = \"Statistical significant difference in performance between gender\",\n  type = \"np\",\n  palette = \"Pastel1\",\n  messages = FALSE\n)\n\n\n\nMathematicsScienceReading\n\n\n\n\nShow code\ncbox_m &lt;- p1  +\n        plot_annotation(\n          title = \"Male students perform slightly better than female students in Mathematics\",\n          caption = \"Data Source: OECD, 2022\"\n        ) \ncbox_m\n\n\n\n\n\n\n\n\n\nShow code\ncbox_s &lt;- p2  +\n        plot_annotation(\n          title = \"Male students perform slightly better than female students in Science\",\n          caption = \"Data Source: OECD, 2022\"\n        ) \ncbox_s\n\n\n\n\n\n\n\n\n\nShow code\ncbox_r &lt;- p3  +\n        plot_annotation(\n          title = \"Female students perform slightly better than male students in Reading\",\n          caption = \"Data Source: OECD, 2022\"\n        ) \ncbox_r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Insights from Box/ Violin Plots\n\n\n\n\nBox/ Violin Plots [Mathematics and Science]\n\nThe Box/ Violin Plots revealed relatively equal proportions around median values and dispersion of dataset. Presence of multiple outliers sighted, especially in science and reading performance.\n\nTwo-sample Means Test\n\nStatistical significant difference in performance between gender across all three performance domains.\nMale students perform slightly better than female students in Mathematics and Science.\nFemale students perform slightly better than male students in Reading."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "National Climate Change Secretariat Singapore’s website quoted an infographic prepared by Ministry of Sustainability and the Environment (MSE) and stated some of the following insights in the infographic below.\n\nThe daily mean temperature are projected to increase by 1.4 to 4.6.\nThe difference between the wet months (November to January) and the dry month (February and June to September) is expected to be more noticeable.\n\n\n\n\nImage Source: Ministry of Sustainability and the Environment (MSE)\n\n\n\n\n\nThe objective of this project focuses on the insights on climate change in Singapore and aims to explore visual interactivity and visualising uncertainty methods to validate the abovementioned claims by:\n\nexamining either daily temperature or rainfall records of a month of the year 1983, 1993, 2003, 2013 and 2023, and\ncreating an analytics-driven data visualisation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#project-brief",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#project-brief",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "National Climate Change Secretariat Singapore’s website quoted an infographic prepared by Ministry of Sustainability and the Environment (MSE) and stated some of the following insights in the infographic below.\n\nThe daily mean temperature are projected to increase by 1.4 to 4.6.\nThe difference between the wet months (November to January) and the dry month (February and June to September) is expected to be more noticeable.\n\n\n\n\nImage Source: Ministry of Sustainability and the Environment (MSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#project-objectives",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#project-objectives",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "The objective of this project focuses on the insights on climate change in Singapore and aims to explore visual interactivity and visualising uncertainty methods to validate the abovementioned claims by:\n\nexamining either daily temperature or rainfall records of a month of the year 1983, 1993, 2003, 2013 and 2023, and\ncreating an analytics-driven data visualisation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#install-and-launch-r-packages",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#install-and-launch-r-packages",
    "title": "Take-home Exercise 3",
    "section": "2.1 Install and launch R packages",
    "text": "2.1 Install and launch R packages\nThe project uses p_load() of pacman package to check if the R packages are installed in the computer.\nThe following code chunk is used to install and launch the R packages.\n\n\nShow code\npacman::p_load(tidyverse, readr, knitr, dplyr, ggplot2, plotly, ggiraph, gganimate, GGally,\n               crosstalk, ggdist, ggthemes, patchwork, DT, ungeviz, scales, lubridate)\n\n\n\n\n\n\n\n\nR packages installed\n\n\n\n\n\n\ntidyverse: a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\nreadr: a R package for importing csv files into R.\ndplyr: a R package of grammar for data manipulation.\nknitr: an report generation tool.\nlabelled: an R package that provides functions to manipulate metadata.\ndplyr: an R tool for working with data frame (e.g. objects).\nggdist: an R package that support visualisation of distribution and uncertainty.\nggthemes: an R package that provides extra themes, geoms and scales to ggplot2 package.\npatchwork: an R package for preparing composite figure created using ggplot2.\nDT: an R interface to the JavaScript library DataTables that create interactive table on html page.\nplotly: an R package for creating interactive charts.\ngganimate: a ggplot extension for creating animated charts.\nggiraph: a tool to create dynamice ggplots [interactive Scalable Vector Graphics (SVG) object].\nGGally: an extension of ggplot2 that helps to reduce the complexity of combining geoms.\ncrosstalk: an add-on to the htmlwidgets package for implementing cross-widget interactions (such as linked brushing and filtering).\nscales: an scale package used for controlling axis and legend labels.\nlubridate: an R package that facilitates to use of dates and time elements."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#import-and-merge-weather-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#import-and-merge-weather-data",
    "title": "Take-home Exercise 3",
    "section": "2.2 Import and Merge Weather Data",
    "text": "2.2 Import and Merge Weather Data\nThe dataset source obtained is from Meteorological Service Singapore. There are five data files (in .csv format): January of 1983, 1993, 2003, 2013 and 2023, used for this project to examine the temperature over the “five decades” for Changi Weather Station.\nThe code chunk below uses guess_encoding() to check the .csv file encoding to prepare for merging of the five datasets.\n\n\nShow code\n# check .csv file encoding\nguess_encoding(\"data/DAILYDATA_S24_202301.csv\")\n\n\n# A tibble: 3 × 2\n  encoding   confidence\n  &lt;chr&gt;           &lt;dbl&gt;\n1 UTF-8            0.8 \n2 ISO-8859-1       0.48\n3 ISO-8859-2       0.27\n\n\nThe code chunk below uses list.files() and map() to read .csv files. bind_rows() is then used to combine the five datasets into one data frame.\n\n\nShow code\n# set file path to extract .csv files\nfiles &lt;- list.files(path = \"data/\", pattern = \".csv\", full.names = TRUE)\n\n# read csv files with encoding\nread_csv_with_encoding &lt;- function(file, encoding) {\n  readr::read_csv(file, locale = readr::locale(encoding = encoding), show_col_types = FALSE)\n}\n\n# read all CSV files into a list\ndata_list &lt;- map(files, ~ read_csv_with_encoding(.x, encoding = \"ISO-8859-1\")) \n\n# combine into 1 df\ncombined_data &lt;- bind_rows(data_list)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#overview-of-the-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#overview-of-the-data",
    "title": "Take-home Exercise 3",
    "section": "2.3 Overview of the data",
    "text": "2.3 Overview of the data\nThe combined data consists of 155 observations and 19 variables. Each row describes the daily weather in terms of its rainfall, temperature and windspeed.\n\nDataset Structure\n\nUse str() to check the structure of the combined data.\n\nstr(combined_data, 10)\n\nspc_tbl_ [155 × 19] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Station                      : chr [1:155] \"Changi\" \"Changi\" \"Changi\" \"Changi\" ...\n $ Year                         : num [1:155] 1983 1983 1983 1983 1983 ...\n $ Month                        : num [1:155] 1 1 1 1 1 1 1 1 1 1 ...\n $ Day                          : num [1:155] 1 2 3 4 5 6 7 8 9 10 ...\n $ Daily Rainfall Total (mm)    : num [1:155] 0.3 0.4 2.9 0 0 0 22.3 0 0 8.3 ...\n $ Highest 30 Min Rainfall (mm) : chr [1:155] \"\\u0097\" \"\\u0097\" \"\\u0097\" \"\\u0097\" ...\n $ Highest 60 Min Rainfall (mm) : chr [1:155] \"\\u0097\" \"\\u0097\" \"\\u0097\" \"\\u0097\" ...\n $ Highest 120 Min Rainfall (mm): chr [1:155] \"\\u0097\" \"\\u0097\" \"\\u0097\" \"\\u0097\" ...\n $ Mean Temperature (°C)        : num [1:155] 26.5 26.8 27 27.3 27.1 27.2 26.1 27 27.3 26.9 ...\n $ Maximum Temperature (°C)     : num [1:155] 28.7 30.6 31.3 30.8 31.8 32.1 31.1 31.9 32 30.7 ...\n $ Minimum Temperature (°C)     : num [1:155] 25.1 24.8 24.5 25 23.7 23.7 24.3 24.1 24.1 24.1 ...\n $ Mean Wind Speed (km/h)       : num [1:155] 5.5 9.4 10.7 12.6 10.3 8.4 9.8 11.4 11.2 12.5 ...\n $ Max Wind Speed (km/h)        : num [1:155] 29.9 43.2 42.8 42.1 34.6 32.4 38.5 40 35.6 48.6 ...\n $ Highest 30 min Rainfall (mm) : num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n $ Highest 60 min Rainfall (mm) : num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n $ Highest 120 min Rainfall (mm): num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n $ Mean Temperature (Â°C)       : num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n $ Maximum Temperature (Â°C)    : num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n $ Minimum Temperature (Â°C)    : num [1:155] NA NA NA NA NA NA NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Station = col_character(),\n  ..   Year = col_double(),\n  ..   Month = col_double(),\n  ..   Day = col_double(),\n  ..   `Daily Rainfall Total (mm)` = col_double(),\n  ..   `Highest 30 Min Rainfall (mm)` = col_character(),\n  ..   `Highest 60 Min Rainfall (mm)` = col_character(),\n  ..   `Highest 120 Min Rainfall (mm)` = col_character(),\n  ..   `Mean Temperature (°C)` = col_double(),\n  ..   `Maximum Temperature (°C)` = col_double(),\n  ..   `Minimum Temperature (°C)` = col_double(),\n  ..   `Mean Wind Speed (km/h)` = col_double(),\n  ..   `Max Wind Speed (km/h)` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nHowever, the combined dataset reveals additional (duplicated) columns were created when combining the five datasets.\n\n\nUse duplicate() to check for duplicates:\n\ncombined_data[duplicated(combined_data),]\n\n# A tibble: 0 × 19\n# ℹ 19 variables: Station &lt;chr&gt;, Year &lt;dbl&gt;, Month &lt;dbl&gt;, Day &lt;dbl&gt;,\n#   Daily Rainfall Total (mm) &lt;dbl&gt;, Highest 30 Min Rainfall (mm) &lt;chr&gt;,\n#   Highest 60 Min Rainfall (mm) &lt;chr&gt;, Highest 120 Min Rainfall (mm) &lt;chr&gt;,\n#   Mean Temperature (°C) &lt;dbl&gt;, Maximum Temperature (°C) &lt;dbl&gt;,\n#   Minimum Temperature (°C) &lt;dbl&gt;, Mean Wind Speed (km/h) &lt;dbl&gt;,\n#   Max Wind Speed (km/h) &lt;dbl&gt;, Highest 30 min Rainfall (mm) &lt;dbl&gt;,\n#   Highest 60 min Rainfall (mm) &lt;dbl&gt;, Highest 120 min Rainfall (mm) &lt;dbl&gt;, …\n\n\nThe above output shows that there is no duplicated rows found in the dataset."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#replace-na-values-for-columns",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#replace-na-values-for-columns",
    "title": "Take-home Exercise 3",
    "section": "3.1 Replace NA values for columns",
    "text": "3.1 Replace NA values for columns\nThe code chunk below creates na_indices to resolve the issue of duplicated column and NA values issue from merging of the five .csv files.\n\n\nShow code\n# Replace NA values for columns\nna_indices &lt;- which(is.na(combined_data$`Highest 30 Min Rainfall (mm)`))\ncombined_data$`Highest 30 Min Rainfall (mm)`[na_indices] &lt;- combined_data$`Highest 30 min Rainfall (mm)`[na_indices]\n\nna_indices &lt;- which(is.na(combined_data$`Highest 60 Min Rainfall (mm)`))\ncombined_data$`Highest 60 Min Rainfall (mm)`[na_indices] &lt;- combined_data$`Highest 60 min Rainfall (mm)`[na_indices]\n\nna_indices &lt;- which(is.na(combined_data$`Highest 120 Min Rainfall (mm)`))\ncombined_data$`Highest 120 Min Rainfall (mm)`[na_indices] &lt;- combined_data$`Highest 120 min Rainfall (mm)`[na_indices]\n\nna_indices &lt;- which(is.na(combined_data$`Mean Temperature (°C)`))\ncombined_data$`Mean Temperature (°C)`[na_indices] &lt;- combined_data$`Mean Temperature (Â°C)`[na_indices]\n\nna_indices &lt;- which(is.na(combined_data$`Maximum Temperature (°C)`))\ncombined_data$`Maximum Temperature (°C)`[na_indices] &lt;- combined_data$`Maximum Temperature (Â°C)`[na_indices]\n\nna_indices &lt;- which(is.na(combined_data$`Minimum Temperature (°C)`))\ncombined_data$`Minimum Temperature (°C)`[na_indices] &lt;- combined_data$`Minimum Temperature (Â°C)`[na_indices]"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#filter-data-columns",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#filter-data-columns",
    "title": "Take-home Exercise 3",
    "section": "3.2 Filter data columns",
    "text": "3.2 Filter data columns\nThe code chunk below selects the variables intended to be used for this project.\n\n\nShow code\nweather &lt;- combined_data %&gt;%\n  select(Year, Month, Day, `Daily Rainfall Total (mm)`, `Mean Temperature (°C)`, `Maximum Temperature (°C)`, \n         `Minimum Temperature (°C)`, `Mean Wind Speed (km/h)`,  `Max Wind Speed (km/h)`)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#create-new-variables",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#create-new-variables",
    "title": "Take-home Exercise 3",
    "section": "3.3 Create new variables",
    "text": "3.3 Create new variables\nThe code chunk below creates a new variable date by using mutate() and make_date().\n\n\nShow code\nweather &lt;- weather %&gt;%\n  mutate(Date = make_date(Year, Month, Day)\n  )\n\n\n\n\nShow calculation code\n# calculate min, max, median for annotation\nmin_temp &lt;- round(min(weather$`Minimum Temperature (°C)`), 0)\nmax_temp &lt;- round(max(weather$`Maximum Temperature (°C)`), 0)\nmean_temp &lt;- round(mean(weather$`Mean Temperature (°C)`), 0)\nmed_temp &lt;- round(median(weather$`Mean Temperature (°C)`), 0)\nq75_temp &lt;- round(quantile(weather$`Mean Temperature (°C)`, 0.75))\nq25_temp &lt;- round(quantile(weather$`Mean Temperature (°C)`, 0.25))\n\nmean_temp1983 &lt;- round(mean(na.omit(weather$`Mean Temperature (°C)`)[weather$Year == 1983], 0))\nmin_temp1983 &lt;- round(min(na.omit(weather$`Minimum Temperature (°C)`)[weather$Year == 1983], 0))\nmax_temp1983 &lt;- round(max(na.omit(weather$`Maximum Temperature (°C)`)[weather$Year == 1983], 0))\n\nmean_temp1993 &lt;- round(mean(na.omit(weather$`Mean Temperature (°C)`)[weather$Year == 1993], 0))\nmin_temp1993 &lt;- round(min(na.omit(weather$`Minimum Temperature (°C)`)[weather$Year == 1993], 0))\nmax_temp1993 &lt;- round(max(na.omit(weather$`Maximum Temperature (°C)`)[weather$Year == 1993], 0))\n\nmean_temp2003 &lt;- round(mean(na.omit(weather$`Mean Temperature (°C)`)[weather$Year == 2003], 0))\nmin_temp2003 &lt;- round(min(na.omit(weather$`Minimum Temperature (°C)`)[weather$Year == 2003], 0))\nmax_temp2003 &lt;- round(max(na.omit(weather$`Maximum Temperature (°C)`)[weather$Year == 2003], 0))\n\nmean_temp2013 &lt;- round(mean(na.omit(weather$`Mean Temperature (°C)`)[weather$Year == 2013], 0))\nmin_temp2013 &lt;- round(min(na.omit(weather$`Minimum Temperature (°C)`)[weather$Year == 2013], 0))\nmax_temp2013 &lt;- round(max(na.omit(weather$`Maximum Temperature (°C)`)[weather$Year == 2013], 0))\n\nmean_temp2023 &lt;- round(mean(na.omit(weather$`Mean Temperature (°C)`)[weather$Year == 2023], 0))\nmin_temp2023 &lt;- round(min(na.omit(weather$`Minimum Temperature (°C)`)[weather$Year == 2023], 0))\nmax_temp2023 &lt;- round(max(na.omit(weather$`Maximum Temperature (°C)`)[weather$Year == 2023], 0))\n\n\nThe code chunk below calculates two new variables (temp_dod and tempdiff_since1983) on temperature changes.\n\nDay-on-day temperature change\nTemperature baseline reference as 1 January 1983\n\n\n\nShow code\n# 1 Jan 1983 temperature\nfirst_record &lt;- weather %&gt;%\n  summarize(first_temp = weather$`Mean Temperature (°C)`[1])\n\ndod &lt;- weather %&gt;%\n  arrange(Year, Day) %&gt;%\n  group_by(Year) %&gt;%\n  mutate(tempdiff_since1983 = \n           lag(`Mean Temperature (°C)`, 0) - first_record$first_temp,\n         tempdiff_since1983_cat = ifelse(tempdiff_since1983 &gt;= 0, \"Temperature Increase\", \"Temperature Decrease\"))\n  \n# Day-on-day changes\ndod &lt;- dod %&gt;%\n  arrange(Year, Day) %&gt;%\n  group_by(Year) %&gt;%\n  mutate(temp_dod = \n           `Mean Temperature (°C)` - lag(`Mean Temperature (°C)`),\n         temp_dod_cat = ifelse(temp_dod &gt;= 0, \"Temperature Increase\", \"Temperature Decrease\"))\n\ndod$temp_dod &lt;- round(dod$temp_dod, digits = 2)\n\ndod$tempdiff_since1983 &lt;- round(dod$tempdiff_since1983, digits = 2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#check-for-na-values",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#check-for-na-values",
    "title": "Take-home Exercise 3",
    "section": "3.4 Check for NA values",
    "text": "3.4 Check for NA values\nFinal checks for missing values of the weather dataset revealed two missing observations from variables Mean Wind Speed and Max Wind Speed are not the main part of the project analysis, the two observations will be kept.\nThe code chunk below uses colSums(is.na()) to check for missing values for all columns.\n\ncolSums(is.na(dod)) \n\n                     Year                     Month                       Day \n                        0                         0                         0 \nDaily Rainfall Total (mm)     Mean Temperature (°C)  Maximum Temperature (°C) \n                        0                         0                         0 \n Minimum Temperature (°C)    Mean Wind Speed (km/h)     Max Wind Speed (km/h) \n                        0                         0                         0 \n                     Date        tempdiff_since1983    tempdiff_since1983_cat \n                        0                         0                         0 \n                 temp_dod              temp_dod_cat \n                        5                         5"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#static-data-visualisation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#static-data-visualisation",
    "title": "Take-home Exercise 3",
    "section": "4.1 Static Data Visualisation",
    "text": "4.1 Static Data Visualisation\nAn analytics-driven data visualisation prepared below shows the temperature changes in Singapore, particularly Changi weather station at 10-years interval. Given the objective of this project, various appropriate interactive techniques will be explored to enhance user experience in data discovery and storytelling with data visualisation.\n\n\nShow code\n# patchwork - data visualisation\nc / (b | heat) / (p1 | p2) / (gg_point1 | gg_point2) + \n  plot_annotation(tag_levels = 'A') +\n  plot_layout(widths = c(2,2),\n              heights = c(4,3,3,3))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interactive-data-table",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interactive-data-table",
    "title": "Take-home Exercise 3",
    "section": "4.2 Interactive Data Table",
    "text": "4.2 Interactive Data Table\nBefore proceeding with data visualisation, it is essential to be able to navigate the dataset of 155 observations with ease. This segment will help users identify or navigate through the dataset observations instead of scrolling through each observation one-by-one. The interactive datatable is created using DT package.\n\n\n\n\n\n\nDesign Features - Interactive Data Table\n\n\n\n\nDisplay number of observations by selecting the dropdown (5, 10, 25, 50, 100 entries). This ensure that the observations will not span across the entire webpage.\nView other pages of observations with “previous” or “next” button.\nSearch specific observations with the search bar for the occurence of a string/ numercial value in any column of an observation\nFilter observations with the filter bar directly below column headers.\nColumn visibility allows user to select the columns that they are interested to view and hide the rest\nExcel, CSV, Print buttons allow user to either download or print the dataset.\n\n\n\n\n\nShow code\ndod1 &lt;- dod %&gt;%\n  select(Year, Month, Day, Date, `Mean Temperature (°C)`, `Maximum Temperature (°C)`, `Minimum Temperature (°C)`,\n         `Baseline Temperature Change (°C)` = tempdiff_since1983, `Daily Temperature Change (°C)` = temp_dod\n         ) %&gt;%\n  mutate(Year = as.factor(Year),\n         Day = as.factor(Day)\n  )\n  \nDT::datatable(dod1, class= \"compact\",\n              filter = \"top\", # filter individual column is diff from search entire table function\n              extensions = c(\"Buttons\"),\n              options = list(pageLength = 5,\n                             columnDefs = list(list(targets = \"_all\", className = \"dt-center\")), # text align center\n                             buttons = c(\"colvis\", \"excel\", \"csv\", \"print\"),\n                             dom = \"Bpiltf\"),\n              caption = \"Table 1: Daily Temperature Records (1983, 1993, 2003, 2013, 2023)\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visual-summary-of-dataset",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visual-summary-of-dataset",
    "title": "Take-home Exercise 3",
    "section": "4.3 Visual Summary of Dataset",
    "text": "4.3 Visual Summary of Dataset\nBelow is a quick visual summary method into the distribution and correlation between the respective variables, before delving deep into the respective visualisations.\n\n\n\n\n\n\nDesign Features - Interactive Correlation Matrix\n\n\n\n\nggpairs() is used to plot correlation matrix for a quick visual summary of the correlation between respective variables. ggpairs() is part of GGally package. The correlation matrix, ggpairs() can replace the individual correlation plot as well as the patchwork.\nClick on specific barchart, boxplot, scatterplot. Ideal for exploration phase such as identification of outliers.\n\n\n\n\n\nShow code\ndodcorr &lt;- weather %&gt;%\n  mutate(Year = as.factor(Year),\n         Day = as.factor(Day)\n  )\n\ncorr &lt;- dodcorr[, c(1, 4, 5, 8)]\n\na &lt;- ggpairs(corr, \n             mapping = aes(color = corr$Year),\n             title = \"Correlation of Weather Dataset Variables\",\n             rowLabels = c('Year', 'Rainfall', 'Temperature', 'Wind'),\n             columnLabels = c('Year', 'Rainfall', 'Temperature', 'Wind'),\n             upper = list(continuous = \"density\", combo = wrap(\"box_no_facet\", alpha = 0.4)),\n             lower = list(continuous = \"points\", combo = wrap(\"dot_no_facet\", alpha = 0.4)))\n      \nggplotly(a) + \n  scale_fill_manual(values = c(\"#a2798f\", \"#d6c7c7\", \"#8caba8\",\n                               \"#ddadad\", \"#9fb9bf\"), name = \"Year\")\n\n\nNULL\n\n\n\n\n\n\n\n\nQuick Visual Insights\n\n\n\n\nThe temperature density/ box plots revealed the following insights:\n\n1983: Two density peaks and relatively equal proportion around median values\n1993: Relatively normal distribution with outliers sighted\n2003: Left-skewed distribution with a dispersion of dataset\n2013: Abnormally high peak in density as compared to the other years. However, boxplot revealed a narrow dispersion of dataset with multiple outliers slighted\n2023: Left-skewed distribution with a wide dispersion of dataset"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#weather-distribution-in-january",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#weather-distribution-in-january",
    "title": "Take-home Exercise 3",
    "section": "4.4 Weather Distribution in January",
    "text": "4.4 Weather Distribution in January\nWeather distribution of Changi Weather Station will be studied across the “five-decades” with the use of:\n\nInteractive Raincloud Plot\nInteractive Barchart\n\n\nInteractive Raincloud Plot\nThis segment will allow users to explore the distribution of January’s daily temperatures by Year (at 10-years interval).\n\n\n\n\n\n\nDesign Features - Interactive Raincloud Plot\n\n\n\n\nplot_ly(type = 'violin') plots violin plot that provide statistical information such as minimum, maximum, mean, median, first-and-third-quantile values when hover-over.\n\n\n\n\nInteractive ChartStatic Chart Code Chunk\n\n\n\n\nShow code\nb1 &lt;- weather %&gt;%\n  plot_ly(type = 'violin',\n    color = ~as.factor(Year),\n    colors = yearly_color) %&gt;%\n  add_trace(\n    x = ~Year,\n    y = ~`Mean Temperature (°C)`,\n    side = 'positive',\n    box = list(\n      visible = T\n    ),\n    meanline = list(\n      visible = T\n    ),\n    points = 'all',\n    pointpos = ~`Mean Temperature (°C)`,\n    jitter = 0,\n    scalemode = 'count',\n    meanline = list(\n      visible = T\n    ),\n    marker = list(\n      line = list(\n        width = 1\n      ),\n      symbol = 'line-ns'\n    )\n    ) %&gt;%\n  # add horizontal line\n  add_segments(\n    x = 1980, xend = 2025, y = mean_temp, yend = mean_temp,  \n    line = list(\n      color = \"black\", alpha = 0.5, width = 0.25\n    ),\n    showlegend = FALSE\n  ) %&gt;%\n  layout(\n    title = \"Temperature Distribution (10-years interval)\",\n    plot.title = element_text(hjust = 0.5),\n    xaxis = list(\n      title = \"Year\",\n      tickvals = list(\"1983\", \"1993\", \"2003\", \"2013\", \"2023\")\n    ),\n    yaxis = list(\n      title = \"Temperature °C\"\n    ),\n    violingap = 5, violingroupgap = 10, violinmode = 'overlay',\n    \n    # add caption\n    annotations = list(\n      text = \"Data Source: MSE (2023)\", xref = \"paper\", yref = \"paper\",\n      x = 1.2, y = -0.1, showarrow = FALSE, font = list(size = 10)\n      ) \n  )\nb1\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nThe violin plots revealed the following insights:\n\n1983: Two density peaks and relatively equal proportion around median values\n1993: Relatively normal distribution with outliers sighted\n2003: Left-skewed distribution with a dispersion of dataset\n2013: Adnormally high peak in density as compared to the other years. However, boxplot revealed a narrow dispersion of dataset with multiple outliers slighted\n2023: Left-skewed distribution with a wide dispersion of dataset\n\n\n\n\n\n\n\n# Raincloud Plot\nb &lt;- ggplot(weather, aes(x = as.factor(Year), y = `Mean Temperature (°C)`, \n                          fill = as.factor(Year))) +\n  \n  stat_halfeye(\n    adjust = 0.5,\n    justification = -0.2,\n    .width = 0,\n    point_colour = NA,\n    alpha = 0.5) +\n  \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"lightcoral\",\n              outlier.shape=16,\n              outlier.size=0.05,\n              outlier.alpha = 0.5) + \n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"grey20\") +\n  \n  stat_summary(fun = mean, geom = \"text\", \n               aes(label = paste(\"Mean\", round(after_stat(y), ))),\n               position = position_nudge(x = 0.05), vjust = -0.5, size=2.2,\n               colour = \"grey20\") +\n  \n  scale_fill_manual(values = c(\"#a2798f\", \"#d6c7c7\", \"#8caba8\",\n                               \"#ddadad\", \"#9fb9bf\"), name = \"Year\") +\n  \n  geom_hline(aes(yintercept= mean_temp),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n\n  labs(title = \"January's Temperature Distribution (10-years interval)\",\n       y = \"Temperature °C\", x = \"Year\",\n       caption = \"Data Source: MSE (2023)\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(22, 30)) +\n  theme(plot.title = element_text(size = 12),\n        panel.grid = element_blank(),\n        axis.line.x = element_line(),\n        axis.line.y = element_line(),\n        legend.position = \"right\")\n\n\n\n\n\n\nInteractive Barchart\nThis segment will display the trend (and fluctuation) of daily temperatures at 10-years interval.\n\n\n\n\n\n\nDesign Features - Interactive Barchart\n\n\n\n\nTooltip is customised to show the different information such that when users hover-over the upper segment (i.e. above mean temperature), maximum temperature and mean temperature values will be displayed. Likewise, when users hover-over the lower segment (i.e. below mean temperature), minimum temperature and mean temperature will be displayed instead.\nHorizontal line of mean temperature by each year is included to aid users for identifying days that temperatures fall above/ below mean temperature of the January (Year).\n\n\n\n\nInteractive ChartStatic Chart Code Chunk\n\n\n\n\nShow code\nci &lt;- ggplotly(c, tooltip = \"text\") %&gt;%\n  layout(\n    margin = list( l = 50, r = 50, b = 100, t = 50),\n    # add caption\n    annotations = list(\n      text = \"Data Source: MSE (2023)\", xref = \"paper\", yref = \"paper\",\n      x = 1, y = -0.1, showarrow = FALSE, font = list(size = 10)))\nci\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nGradual increase in temperature on a 10-years interval (26°C to 27°C), with an increase of 1°C first sighted between Year 1993 and Year 2003.\nYear 2013’s temperature saw a significant dipped in its two-days observations.\nTemperature fluctuations in Year 2023 observed a more erratic weather pattern as compared to the other years.\n\n\n\n\n\n\n# Bar chart\ntooltip_max &lt;- paste(\"&lt;b&gt;\", weather$Date, \"&lt;/b&gt;\", \n                     \"\\nMax Temp : \", weather$`Maximum Temperature (°C)`, \"°C\", \n                     \"\\nMean Temp : \", weather$`Mean Temperature (°C)`, \"°C\")\n\ntooltip_min &lt;- paste(\"&lt;b&gt;\", weather$Date, \"&lt;/b&gt;\", \n                     \"\\nMean Temp : \", weather$`Mean Temperature (°C)`, \"°C\",\n                     \"\\nMin Temp : \", weather$`Minimum Temperature (°C)`, \"°C\")\n\ntooltip_mean &lt;- paste(\"&lt;b&gt;\", weather$Date, \"&lt;/b&gt;\", \n                     \"\\nMax Temp : \", weather$`Maximum Temperature (°C)`, \"°C\", \n                     \"\\nMean Temp : \", weather$`Mean Temperature (°C)`, \"°C\",\n                     \"\\nMin Temp : \", weather$`Minimum Temperature (°C)`, \"°C\")\n\nc &lt;- ggplot(weather) +\n  \n  geom_hline(aes(\n    yintercept = ifelse(Year == \"1983\", mean_temp1983, NA),\n    color=\"lightcoral\", linetype=\"solid\")) +\n\n  geom_hline(aes(\n    yintercept = ifelse(Year == \"1993\", mean_temp1993, NA),\n    color=\"lightcoral\", linetype=\"solid\")) +\n  \n  geom_hline(aes(\n    yintercept = ifelse(Year == \"2003\", mean_temp2003, NA),\n    color=\"lightcoral\", linetype=\"solid\")) +\n\n  geom_hline(aes(\n    yintercept = ifelse(Year == \"2013\", mean_temp2013, NA),\n    color=\"lightcoral\", linetype=\"solid\")) +\n  \n  geom_hline(aes(\n    yintercept = ifelse(Year == \"2023\", mean_temp2023, NA),\n    color=\"lightcoral\", linetype=\"solid\")) +\n  \n  geom_segment(data = weather,\n               aes(x = Day, y = `Mean Temperature (°C)`,\n                   xend=weather$Day, yend = weather$`Maximum Temperature (°C)`,\n                   text = tooltip_max),\n               color= \"#556681\", size = 1) +\n  \n  geom_segment(data = weather,\n               aes(x = Day, y = `Mean Temperature (°C)`,\n                   xend=weather$Day, yend = weather$`Minimum Temperature (°C)`,\n                   text = tooltip_min),\n               color= \"#556681\", size = 1, alpha = 0.7) +\n\n  \n  geom_point(aes(x = Day, y = `Mean Temperature (°C)`), size = 0.5, color=\"white\", show.legend = TRUE) + \n  \n  labs(title = \"Gradual increase in January's temperature from 26°C to 27°C \\nwith an increase of 1°C first sighted between Year 1993 and Year 2003\",\n       subtitle = \"January's Daily Temperature at 10-years interval\", \n       x = \"Year 1983 to 2023 \\n(10-years interval)\", y = \"Temperature °C\", \n       color = \"Annual Mean \\nTemp°C Ruler\",\n       caption = \"Data Source: MSE (2023)\") +\n  theme_minimal() +\n  theme(panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_blank(),\n        axis.title.x = element_text(size = 8)) +\n facet_wrap(vars(Year), ncol = 5)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#warm-days-vs-cool-days-in-january",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#warm-days-vs-cool-days-in-january",
    "title": "Take-home Exercise 3",
    "section": "4.5 Warm Days vs Cool Days in January",
    "text": "4.5 Warm Days vs Cool Days in January\nThis segment allow users to visualise time-series data displayed over a date dimension to identify patterns or anomalies.\n\n\n\n\n\n\nDesign Features - Interactive Calendar Heatmap\n\n\n\n\nDifferent colours used to differentiate the temperature in varying intensity of “red-tones” and “blue-tones” respectively.\nTooltip is customised to show the different information such that when users hover-over the different day of the calendar year. Date, minimum, maximum and mean temperature values will be displayed.\n\n\n\n\nInteractive ChartStatic Chart Code Chunk\n\n\n\n\nShow code\n# Convert ggplot to plotly (to include custom tooltip)\nheat_plotly &lt;- ggplotly(heat, tooltip = \"text\")\n\n# Add caption\nheat_plotly &lt;- heat_plotly %&gt;% layout(\n  annotations = list(\n    text = \"Data Source: MSE (2023)\",\n    x = 1.1,\n    y = -0.2,\n    showarrow = FALSE,\n    xref = \"paper\",\n    yref = \"paper\"\n  )\n)\n\nheat_plotly\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\nNote: This chart could be used to visualise temperatures across different months (e.g. February to September) to identify warm/ cool months.\n\n2023 observed more cool days as compared to the other years.\nHighest mean temperature of 29.1°C observed on 7 January 2013.\n\n\n\n\n\n\n# calendar heatmap\ntooltip_main &lt;- paste(\"&lt;b&gt;\", weather$Date, \"&lt;/b&gt;\", \n                      \"\\nMax Temp : \", weather$`Maximum Temperature (°C)`, \"°C\", \n                      \"\\nMean Temp : \", weather$`Mean Temperature (°C)`, \"°C\",\n                      \"\\nMin Temp : \", weather$`Minimum Temperature (°C)`, \"°C\")\n\nheat &lt;- ggplot(weather, \n               aes(x = Day, y = Year, fill = `Mean Temperature (°C)`)) + \n  theme_tufte(base_family = \"Helvetica\") + \n  scale_fill_gradient(name = \"Temperature (°C)\",\n                      low = \"sky blue\", \n                      high = \"lightcoral\") +\n  \n  geom_tile(color = \"white\", size = 1, aes(text = tooltip_main)) + \n  labs(x = \"Days\", \n       y = \"Year\", \n       title = \"More warm days than cool days in January\",\n       subtitle = \"with 2023 observing more cool days compared to the others\",\n       caption = \"Data Source: MSE (2023)\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6)) +\n  scale_y_continuous(breaks = seq(min(weather$Year), max(weather$Year), by = 10),\n                     labels = seq(min(weather$Year), max(weather$Year), by = 10)) +\n  scale_x_continuous(breaks = seq(min(weather$Day), max(weather$Day), by = 2),\n                     labels = seq(min(weather$Day), max(weather$Day), by = 2))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#temperature-trends-in-january",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#temperature-trends-in-january",
    "title": "Take-home Exercise 3",
    "section": "4.6 Temperature Trends in January",
    "text": "4.6 Temperature Trends in January\nTo gain further insights on the temperature data collected at Changi Weather Station, two new variables are created by calculating the daily temperature changes over the “five-decades”:\n\nDay-on-day temperature change (daily mean temperature minus previous day temperature)\nTemperature baseline reference as 1 January 1983 (daily mean temperature minus 1 January 1983’s mean temperature)\n\nThe code chunk below calculates two new variables (temp_dod and tempdiff_since1983) on temperature changes.\n\n\nShow code\n# 1 Jan 1983 temperature\nfirst_record &lt;- weather %&gt;%\n  summarize(first_temp = weather$`Mean Temperature (°C)`[1])\n\ndod &lt;- weather %&gt;%\n  arrange(Year, Day) %&gt;%\n  group_by(Year) %&gt;%\n  mutate(tempdiff_since1983 = \n           lag(`Mean Temperature (°C)`, 0) - first_record$first_temp,\n         tempdiff_since1983_cat = ifelse(tempdiff_since1983 &gt;= 0, \"Temperature Increase\", \"Temperature Decrease\"))\n  \n# Day-on-day changes\ndod &lt;- dod %&gt;%\n  arrange(Year, Day) %&gt;%\n  group_by(Year) %&gt;%\n  mutate(temp_dod = \n           `Mean Temperature (°C)` - lag(`Mean Temperature (°C)`),\n         temp_dod_cat = ifelse(temp_dod &gt;= 0, \"Temperature Increase\", \"Temperature Decrease\"))\n\ndod$temp_dod &lt;- round(dod$temp_dod, digits = 2)\n\ndod$tempdiff_since1983 &lt;- round(dod$tempdiff_since1983, digits = 2)\n\n\n\nDaily Temperature Fluctuation\nThis segment show the trend of temperature changes (day-on-day and baseline reference temperature) over the “five-decades”.\n\n\n\n\n\n\nDesign Features - Interactive Barchart (Coordinated)\n\n\n\n\nCoordinated multiple views by using ggiraph \nTooltip is customised to show the different information such that when users hover-over the different day of the calendar year. In addition to the date, minimum, maximum and mean temperature values displayed, values on Day-on-day temperature change and Temperature baseline reference as 1 January 1983 are included in the tooltip for users.\nDifferent colour is used to differentiate the temperature change (i.e. increase and decrease in temperatures) in varying intensity of “lightcoral-tones” and “blue-tones” respectively.\n\n\n\n\nInteractive ChartStatic Chart Code Chunk\n\n\n\n\nShow code\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nDay-on-day temperature increase may not result in an increase in temperature change (based on baseline reference temperature). In fact, decrease in temperature changes (based on baseline reference temperature) were observed in some of the observations.\n\n\n\n\n\n\n# barchart - temp difference\ntooltip_full &lt;- paste(\"&lt;b&gt;\", dod$Date, \"&lt;/b&gt;\", \n                     \"\\nMax Temp : \", dod$`Maximum Temperature (°C)`, \"°C\", \n                     \"\\nMean Temp : \", dod$`Mean Temperature (°C)`, \"°C\",\n                     \"\\nMin Temp : \", dod$`Minimum Temperature (°C)`, \"°C\",\n                     \"\\nDaily Temp Change : \", dod$temp_dod, \"°C\",\n                     \"\\nTemp Diff since 1983: \", dod$tempdiff_since1983, \"°C\")\n\n\n# Daily temperature change (DOD)\np1 &lt;- ggplot(dod) +\n aes(x = as.factor(Date), y = temp_dod, fill = temp_dod) +\n geom_col_interactive(\n   aes(tooltip = tooltip_full, data_id = Date)\n ) +\n scale_fill_gradient2(low = \"#3D85C6\", mid = \"grey\", high = \"#ff6666\", midpoint = 0) +\n theme_minimal() +\n theme(panel.grid = element_blank(),\n       axis.line.x = element_line(),\n       axis.line.y = element_line(),\n       plot.title = element_text(size = 10),\n       plot.subtitle = element_text(size = 8),\n       legend.title = element_text(size = 8),\n       legend.text = element_text(size = 8),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8),\n        axis.text.x = element_blank(),\n        axis.title.x = element_text(size = 8)) +\n  theme(legend.position=\"none\") +\n  labs(title = \"[I] Day-on-Day\", \n       subtitle = \"Daily Temperature Change\", \n       x = \"Year 1983 to 2023 \\n(10-years interval)\", y = \"Temperature Changes °C\")\n\n# Daily temperature change (DOD) since 1983 (baseline comparison 1 Jan 1983)\np2 &lt;- ggplot(dod) +\n aes(x = as.factor(Date), y = tempdiff_since1983, fill = tempdiff_since1983) +\n geom_col_interactive(\n   aes(tooltip = tooltip_full, data_id = Date)\n ) +\n scale_fill_gradient2(low = \"#3D85C6\", mid = \"grey\", high = \"#ff6666\", midpoint = 0) +\n theme_minimal() +\n theme(panel.grid = element_blank(),\n       axis.line.x = element_line(),\n       axis.line.y = element_line(),\n       plot.title = element_text(size = 10),\n       plot.subtitle = element_text(size = 8),\n       legend.title = element_text(size = 7),\n       legend.text = element_text(size = 3),\n       legend.position = \"bottom\",\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank(), \n        axis.text.x = element_blank(),\n        axis.title.x = element_text(size = 8)) +\n  labs(title = \"[II] Baseline Reference: 1 January 1983\", \n       subtitle = \"Daily Temperature Change\", \n       fill = \"Temperature \\nChange °C\",\n       x = \"Year 1983 to 2023 \\n(10-years interval)\", y = NULL,\n       caption = \"Data Source: MSE (2023)\") +\n  guides(color = guide_legend(override.aes = list(size = 0))) \n\n\n\n\n\n\nDistribution of Temperature Baseline Changes\nThis segment allows users to explore distribution in temperature change of baseline reference (1 January 1983) by Year.\n\n\n\n\n\n\nDesign Features - Interactive Barchart (Coordinated)\n\n\n\n\nplot_ly(type = 'violin') plots violin plot that provide statistical information such as minimum, maximum, mean, median, first-and-third-quantile values when hover-over.\nObservations with positive temperature changes will be categorised as “Temperature Increase” while “Temperature Decrease” will represent observations with a drop in temperature as compared to baseline temperature in 1 January 1983. This will allow users to have clear visualisation of the distribution of the temperature changes of the two segments.\n\n\n\n\n\nShow code\nfig2 &lt;- dod %&gt;%\n  plot_ly(type = 'violin',\n    color = ~as.factor(Year),\n    colors = yearly_color) \n\nfig2 &lt;- fig2 %&gt;%\n  add_trace(\n    x = ~Year[dod$tempdiff_since1983_cat == 'Temperature Increase'],\n    y = ~tempdiff_since1983[dod$tempdiff_since1983_cat == 'Temperature Increase'],\n    legendgroup = 'Temperature Increase',\n    scalegroup = 'Temperature Increase',\n    name = 'Temperature Increase',\n    side = 'positive',\n    box = list(\n      visible = T\n    ),\n    meanline = list(\n      visible = T\n    ),\n    color = I(\"lightcoral\")\n  ) %&gt;%\n  add_trace(\n    x = ~Year[dod$tempdiff_since1983_cat == 'Temperature Decrease'],\n    y = ~tempdiff_since1983[dod$tempdiff_since1983_cat == 'Temperature Decrease'],\n    legendgroup = 'Temperature Decrease',\n    scalegroup = 'Temperature Decrease',\n    name = 'Temperature Decrease',\n    side = 'negative',\n    box = list(\n      visible = T\n    ),\n    meanline = list(\n      visible = T\n    ),\n    color = I(\"sky blue\")\n  ) %&gt;%\n  layout(\n    title = \"Weather Distribution at 10-years interval \\nscaled by temperature difference \\n(baseline reference as 1 January 1983)\",\n    xaxis = list(title = \"Year\", range = c(1975, 2030)),\n    yaxis = list(title = \"Temperature Changes °C\", zeroline = F),\n    violingap = 0, violingroupgap = 0, violinmode = 'overlay',\n    # add caption\n    annotations = list(\n      text = \"Data Source: MSE (2023)\", xref = \"paper\", yref = \"paper\",\n      x = 1, y = -0.35, showarrow = FALSE, font = list(size = 10)\n      ),  \n    legend = list(\n      tracegroupgap = 0, orientation = \"h\", # adjust legend position\n      x = 0.2, y = -0.2\n  )\n)\n\nfig2\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nThe violin plots revealed the following insights:\n\n1983: Distribution of Temperature Increase and Temperature Decrease are relatively close to each other. Both have relatively high peak in its density distribution.\n1993: Relatively normal distribution for Temperature Increase, however, potential outliers discussed earlier seemed to be attributed from Temperature Decrease.\n2003: Skewed distribution seemed to be attributed from Temperature Decrease.\n2013: Wide dispersion of Temperature Decrease data with relatively flat density. Temperature Increase has an extreme outlier.\n2023: Density of Temperature Increase and Temperature Decrease have a distinct contrast (i.e. peak density and relatively flat density respectively).\n\n\n\n\n\n\nTemperature Variability in 1983, 1993, 2003, 2013 & 2023\nThis segment allows users to interact with the chart which the charts could show potential relationship with a third dimension for comparison. The third dimension is to visualise the scale of difference in terms of size and colour.\n\n\n\n\n\n\nDesign Features - Interactive Bubble Plot\n\n\n\n\nMenu selection option of temperature changes based on Day-on-Day calculation or Baseline reference (1 January 1983) calculation allow users to navigate and visualise the different temperature changes.\nKey frame animation through the frame argument/aesthetic allows users with smooth transitions between objects with same id over selected time period.\n\n\n\n\n\nShow code\nplot_ly(data = dod,\n        x = ~`Mean Temperature (°C)`,\n        y = ~temp_dod,\n        size = ~`Mean Temperature (°C)`,\n        sizes = c(2, 50),\n        color = ~temp_dod_cat,\n        colors = c(\"#3D85C6\", \"grey\", \"#ff6666\"),\n        frame = ~factor(Year),\n        hovertemplate = ~paste(Date,\n                              \"&lt;br&gt;Daily Temperature:\", `Mean Temperature (°C)`, \"°C\", \n                               \"&lt;br&gt;Changes - Day-on-Day:\", temp_dod, \"°C\",\n                               \"&lt;br&gt;Changes - Since 1983-01-01:\", tempdiff_since1983, \"°C\"),\n        type = 'scatter',\n        mode = 'markers',\n        marker = list(opacity = 0.6,\n                      sizemode = 'diameter',\n                      line = list(width = 0.2, color = 'white'))) |&gt; \n\n\n  layout(title = \"Temperature Variability in 1983, 1993, 2003, 2013 & 2023\",\n         xaxis = list(title = \"Mean Temperature °C\"),\n         yaxis = list(title = \"Temperature Changes °C\"),\n         text = \"Data Source: MSE (2023)\", xref = \"paper\", yref = \"paper\",\n      x = 1.2, y = -0.1,\n         updatemenus = list(list(type = \"dropdown\",\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 yanchor = \"top\",\n                                 x = 0.04,\n                                 y = 0.95,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(\n                                          list(y = list(dod$temp_dod)),\n                                          list(color = dod$temp_dod_cat),\n                                          list(yaxis = list(\n                                            title = \"Temperature Changes °C - Day-on-Day\"))),\n                                            label = \"Temperature Changes °C - Day-on-Day\"),\n                                   list(method = \"update\",\n                                        args = list(\n                                          list(y = list(dod$tempdiff_since1983)),\n                                          list(color = dod$tempdiff_since1983_cat),\n                                          list(yaxis = list(\n                                            title = \"Temperature Changes °C - Baseline Reference\"))),\n                                            label = \"Temperature Changes °C - Baseline Reference\")\n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nPeriods of higher daily temperature seem to result in higher temperature difference in the next day, and vice versa."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interactive-error-bars",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interactive-error-bars",
    "title": "Take-home Exercise 3",
    "section": "Interactive Error Bars",
    "text": "Interactive Error Bars\nError bar is a line through a point on a graph, parallel to one of the axes (in this case, parallel to y-axis). These bars reveals the uncertainty of data in terms of the value variation from the true error free value. Shorter error bars indicate that values are concentrated and the plotted values are more likely in a reported measurement. Longer error bars will mean that it is less reliable (i.e. error or uncertainty in reported measurement). Confidence interval is set at 99% for this analysis.\n\nInteractive ChartStatic Chart Code Chunk\n\n\n\n\nShow code\ngirafe(code = print(gg_point1 + gg_point2), \n       width_svg = 10,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Visual Insights\n\n\n\n\nChart [II] revealed longer error bars with baseline reference temperature as temperature change, as compared to the error bars in Chart [I] on day-on-day temperature change.\nYear 2023 observed a day-on-day temperature change of 0.01°C, which is significantly lower, but has a longer error bar, as compared to the other years.\nJanuary’s recorded highest of 0.16°C day-on-day temperature increase in 1993 and the highest baseline reference temperature decrease of 0.29°C from 1 January 1983’s mean temperature.\n\n\n\n\n\n\n# error bar\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Daily Temperature Changes:\", mean, \"°C \\n(+/-\", sem, \"°C)\")\n}\n\ngg_point1 &lt;- ggplot(data=dod, \n                   aes(x = as.factor(Year)),\n) +\n  stat_summary(aes(y = temp_dod, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill =\"lightcoral\"\n  ) +\n  stat_summary(aes(y = temp_dod),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) + \n ylim(-0.5, 0.75) +\n theme_minimal() +\n theme(panel.grid = element_blank(),\n       axis.line.x = element_line(),\n       axis.line.y = element_line(),\n       plot.title = element_text(size = 10),\n       plot.subtitle = element_text(size = 8),\n       legend.title = element_text(size = 7),\n       legend.text = element_text(size = 5),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_text(size = 8),\n        axis.title.x = element_text(size = 8)) +\n  theme(legend.position=\"none\") +\n  labs(title = \"[I] January 1993 recorded highest increase of 0.16°C\", \n       subtitle = \"99% Confidence Interval of Day-on-Day Temperature Change (10-years interval)\", \n       x = \"Year\", y = \"Temperature Changes °C\")\n\ngg_point2 &lt;- ggplot(data=dod, \n                   aes(x = as.factor(Year)),\n) +\n  stat_summary(aes(y = tempdiff_since1983, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = c(\"lightblue\", \"lightblue\", \"lightcoral\", \"lightcoral\", \"lightcoral\")\n  ) +\n  stat_summary(aes(y = tempdiff_since1983),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) + \n theme_minimal() +\n theme(panel.grid = element_blank(),\n       axis.line.x = element_line(),\n       axis.line.y = element_line(),\n       plot.title = element_text(size = 10),\n       plot.subtitle = element_text(size = 8),\n       legend.title = element_text(size = 7),\n       legend.text = element_text(size = 5),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_text(size = 8),\n        axis.title.x = element_text(size = 8)) +\n  theme(legend.position=\"none\") +\n  labs(title = \"[II] January 2013 recorded highest increase of 0.55°C\", \n       subtitle = \"99% Confidence Interval of Baseline Reference Temperature Change: 1 January 1983 \\n(10-years interval)\", \n       x = \"Year\", y = \"Temperature Changes °C\",\n       caption = \"Data Source: MSE (2023)\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "This project is a continuation from Take-take Exercise 1. The objective is to analyse the charts by applying the data visualisation design principles and best practices, and to improve on one of the submissions prepared by a fellow classmate."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-students-scores-for-maths-reading-and-science",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-students-scores-for-maths-reading-and-science",
    "title": "Take-home Exercise 2",
    "section": "3.1 Distribution of Students’ Scores for Maths, Reading and Science",
    "text": "3.1 Distribution of Students’ Scores for Maths, Reading and Science\n\nOriginal Visual #1\nRidgeline plot, stat_density_ridges(), a stat function from ggridges package was used.\n\n\nShow original code\nggplot(stu2s, \n       aes(x = scores,\n           y = subj,\n           fill = factor(stat(quantile)))) + \n  #geom_text(aes(label = med_math), color = \"black\") + \n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE,\n                      quantiles = c(0.025, 0.975)) +\n  scale_fill_manual(name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")) + \n  theme_ridges()+\n  labs(title = \"Distribution of Average Subject Scores\", caption = \"Data from PISA 2022\",\n       x= \"Scores\", y = \"Subjects\") + theme_minimal()\n\n\n\n\n\nVisual 1 seems to fall under “Quadrant IV - Beautiful but Confusing”\n\n\n\n\n\n\nObservations from Visual 1 [Ridgeline Plots]\n\n\n\n\n Areas done well\n\nIn terms of Clarity\n\nGraph is well labelled with graph title, axes-labels, legend with caption to show data source.\nDensity ridges will reveal distribution of the subset (variation), i.e. performance of Mathematics, Reading and Science scores.\n\nIn terms of Aesthetic\n\nColours used is clear and distinct, and easily readable.\nMajor gridlines are used to provide easy reference and visibility of scores across the three performance domains.\n\n\n\n\n Room for further improvement\n\nIn terms of Clarity\n\nColors are similar across the three subjects with probabilities of 2.5% and 97.5% highlighted in red and blue respectively.\nMean values were explained as part of observations, however, the ridgeline plot with probability was used with no reference or interpretation made in relation to the plot. Annotations of values could be included to aid focus with contextual highlights (e.g. mean or median values).\nAnnotations could be included to explain significant findings (e.g. Relatively close mean values with wide range of scores in students’ performances).\nAlternative chart option would be to use both density plot and boxplot to better reveal distribution. Box plot could be used to visualise the summary statistics (mean, median, outliers, two-whiskers) in greater details.\n\nIn terms of Aesthetic\n\nAxes-labels could be renamed to better reflect the variables (e.g. Science, Reading and Mathematics) instead of using the existing variable names (AVG_PVSCI, AVG_PVREAD, AVG_PVMATH).\n\n\n\n\n\n\n\nSuggested Sketch #1\nFrom the original visual, it seemed that the original author wanted to compare the three subjects and their mean values. This might be the reason for using ridgeline plot, as the design is in a stacked version of density plot. One method to recreate the visual is to use density plot and boxplot for each subject and do patchwork of the three subjects together.\nA rough sketch of the proposed design is shown below.\n\n\n\nSketch by: TSE (2024)\n\n\n\n\nVisual Makeover #1\nThis visual is created using patchwork to patch the three plots (subjects) of geom_density() and geom_boxplot() together. This will put the density-boxplot creating a ridgeline version that allow comparison of different subjects sharing the same x-axis.\n\n\nShow suggested code\nP1 &lt;- ggplot(data = stu2,\n       aes(x = AVG_PVSCI)) +\n  geom_density(color = \"#459397\", size = 0.6, fill= \"#459397\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  \n  geom_vline(aes(xintercept = mean(AVG_PVSCI)),\n             color = \"#4d5887\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 420, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu2$AVG_PVSCI, na.rm=T), 2)),\n           color = \"#4d5887\", size = 3) +\n  annotate(\n    geom = \"curve\", x = 490, xend = 570, y = 0.0035, yend = 0.004, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#4d5887\") +\n\n  geom_vline(aes(xintercept = median(AVG_PVSCI)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu2$AVG_PVSCI, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +  \n  annotate(\n    geom = \"curve\", x = 730, xend = 575, y = 0.0035, yend = 0.0035, \n    curvature = .1, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey50\") +\n\n  geom_boxplot(width = 0.0005, fill = \"#459397\", alpha = 0.5,\n               position = position_nudge(y = -0.0005),\n               outlier.colour=\"salmon\", \n               outlier.shape=16,\n               outlier.size=1, ) +\n\n  theme_minimal() +\n  labs(title=\"Science\", y = NULL) +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title = element_text(size= 12),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text = element_text(size= 8),\n        panel.grid.major = element_blank()) \n\n\nP2 &lt;- ggplot(data = stu2,\n       aes(x = AVG_PVREAD)) +\n  geom_density(color = \"#f6af6b\", size = 0.6, fill= \"#f6af6b\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  geom_vline(aes(xintercept = mean(AVG_PVREAD)),\n             color = \"#4d5887\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 400, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu2$AVG_PVREAD, na.rm=T), 2)),\n           color = \"#4d5887\", size = 3) +\n  \n  annotate(\n    geom = \"curve\", x = 470, xend = 542, y = 0.0030, yend = 0.0035, \n    curvature = -.2, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#4d5887\") +\n  annotate(\n    geom = \"curve\", x = 730, xend = 560, y = 0.0035, yend = 0.0035, \n    curvature = .1, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey50\") +\n  \n  geom_vline(aes(xintercept = median(AVG_PVREAD)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu2$AVG_PVREAD, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +\n\n  geom_boxplot(width = 0.0005, fill = \"#f6af6b\", alpha = 0.5,\n               position = position_nudge(y = -0.0005),\n               outlier.colour=\"salmon\", \n               outlier.shape=16,\n               outlier.size=1, ) +\n  theme_minimal()+\n  labs(title=\"Reading\", y = NULL) +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title = element_text(size= 12),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text = element_text(size= 8),\n        panel.grid.major = element_blank()) \n\n\nP3 &lt;- ggplot(data = stu2,\n       aes(x = AVG_PVMATH)) +\n  geom_density(color = \"#73b2c2\", size = 0.6, fill= \"#73b2c2\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  geom_vline(aes(xintercept = mean(AVG_PVMATH)),\n             color = \"#4d5887\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 400, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu2$AVG_PVMATH, na.rm=T), 2)),\n           color = \"#4d5887\", size = 3) +\n  \n  annotate(\n    geom = \"curve\", x = 470, xend = 570, y = 0.0030, yend = 0.0035, \n    curvature = -.2, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#4d5887\") +\n  annotate(\n    geom = \"curve\", x = 730, xend = 590, y = 0.0035, yend = 0.0035, \n    curvature = .1, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey50\") +\n  \n  geom_vline(aes(xintercept = median(AVG_PVMATH)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu2$AVG_PVMATH, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +  \n  geom_boxplot(width = 0.0005, fill = \"#73b2c2\", alpha = 0.5,\n               position = position_nudge(y = -0.0005),\n               outlier.colour=\"salmon\", \n               outlier.shape=16,\n               outlier.size=1) +\n  theme_minimal()+\n  labs(title=\"Mathematics\", y = NULL) +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title = element_text(size= 12),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text = element_text(size= 8),\n        panel.grid.major = element_blank()) \n\n\n# Patch plots together\npatch &lt;- P1 / P2 / P3 \n\npatch +\n  labs(x= \"Scores\") + \n  plot_annotation(\n                title = \"Slightly left-skewed distribution in students' performance\",\n                subtitle = \"Relatively close mean values with wide range of scores in students' performances\",\n                tag_levels = \"I\",\n                caption = \"Data Source: OECD (2022)\")+\n  theme_minimal() +\n  theme(axis.ticks = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank())\n\n\n\n\n\n\n\n\n\n\n\nMake-over with Density-Boxplot\n\n\n\n\nAchieved in terms of Clarity\n\nDensity-boxplots provide a visual summary of the distribution of values and allow comparison across the different performance groups as well. Boxplots also allow visualisation of outlier values.\nGraph title is added to highlight the performance distribution. Sub-title is added to provide more context and explanation on the findings.\nMedian and Mean values are annotated to enhance interpretation of distribution while serve as reference points. The values allow quick visualisation of the central tendency and skewness of distribution.\n\nAchieved in terms of Aesthetic\n\nDifferent colours are used to represent the three domains (i.e. mathematics, reading and science).\nOutliers are demarcated in a different and distinct colour to better differentiate them."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-scores-by-gender",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-scores-by-gender",
    "title": "Take-home Exercise 2",
    "section": "3.2 Distribution of Scores By Gender",
    "text": "3.2 Distribution of Scores By Gender\n\nOriginal Visual #2\nA combination of density plot and boxplot with the use of stat_halfeye()and geom_boxplot() was used for this visual. Visual 2 contains individual subject plots and a patchwork.\n\nMathematicsReadingScience\n\n\n\n\nShow original code\n# Mathematics\ng1 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVMATH, fill = Gender)) +\n  stat_halfeye(adjust = 0.5,\n               width = 0.3, \n               justification = -0.1,\n               point_color = NA,\n               scale = 1.5) +\n  geom_boxplot(width = 0.05,\n               outlier.shape = NA) + coord_flip() +\n   stat_summary(fun = median, geom = \"text\", aes(label = round(after_stat(y), )),\n               position = position_nudge(x = 0.05), vjust = -0.5,size=3) +  \n  labs(title = \"Distribution of Maths Scores\",\n       y = \"Scores\", x = \"Gender\") +\n  theme_minimal() + scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10))\n\ng1\n\n\n\n\n\n\n\n\n\nShow original code\n# Science\ng2 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVREAD, fill = Gender)) +\n  stat_halfeye(adjust = 0.5,\n               width = 0.3, \n               justification = -0.1,\n               point_color = NA,\n               scale = 1.5) +\n  geom_boxplot(width = 0.05,\n               outlier.shape = NA) + coord_flip() +\n   stat_summary(fun = median, geom = \"text\", aes(label = round(after_stat(y), )),\n               position = position_nudge(x = 0.05), vjust = -0.5,size=3) +  \n labs(title = \"Distribution of Reading Scores\",\n       y = \"Scores\", x = \"Gender\") + theme_minimal()+\n  scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10))\n\ng2\n\n\n\n\n\n\n\n\n\nShow original code\ng3 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVSCI, fill=Gender)) +\n  stat_halfeye(adjust = 0.5,\n               width = 0.3, \n               justification = -0.1,\n               point_color = NA,\n               scale = 1.5) +\n  geom_boxplot(width = 0.05,\n               outlier.shape = NA) +coord_flip() +\n stat_summary(fun = median, geom = \"text\", aes(label = round(after_stat(y), )),\n               position = position_nudge(x = 0.05), vjust = -0.5,size=3) +  \n labs(title = \"Distribution of Science Scores\",\n       y = \"Scores\", x = \"Gender\") + theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10))\n\ng3\n\n\n\n\n\n\n\n\n\n\nShow original code\npatch1 &lt;- g1 /  g2 / g3\npatch1+ plot_layout(guides = \"collect\") \n\n\n\n\n\nVisual 2 seems to fall under “Quadrant IV - Beautiful but Confusing”\n\n\n\n\n\n\nObservations from Visual 2 [Density-Boxplots]\n\n\n\n\n Areas done well\n\nIn terms of Clarity\n\nIndividual graphs and patchwork are well labelled with graph title, axes-labels, legend with caption to show data source.\n\nIn terms of Aesthetic\n\nColours used is clear and distinct, and easy to distinguish between male and female.\n\n\n\n\n Room for further improvement\n\nIn terms of Clarity\n\nPatchwork shows repetitive axes (i.e. y-axis for Gender, x-axis for Scores) across Mathematics, Reading and Science which can be distracting and confusing to readers.\nUncertainty in values annotated as they do not have any labels/ explanation on the representation of values (e.g. values 597 and 580 annotated in chart - ‘Distribution of Maths Scores’. Readers have to make their own interpretation of the values based on reading the chart. However, the original author did note under the observation on the difference in median values.\nAnnotations could be included to explain significant findings (e.g. wide range of scores for each subject with presence of outliers).\nAnnotation “tags” could be added to differentiate the different charts and for a more professional visual aspect.\nAlternative visual is to flip the chart axes (i.e. y-axis for Scores, x-axis for Gender) for a more user-friendly reading mode. The three subjects would share a common y-axis which could allow ease of comparison of scores.\n\n\n\n\n\n\n\nSuggested Sketch #2\nFrom the original visual, it seemed that the original author wanted to compare the three subjects and their values by gender with the use of patchwork. However, the patchwork shows repetitive axes (i.e. y-axis for Gender, x-axis for Scores) across Mathematics, Reading and Science which can be distracting and confusing to readers as coord_flip() was added to the ggplots. One method to recreate the visual is without coord_flip() and patch the three subject plots together so that they can share the same x- and y-axis line.\nA rough sketch of the proposed design is shown below.\n\n\n\nSketch by: TSE (2024)\n\n\n\n\nVisual Makeover #2\nThis visual is created using patchwork to patch the three plots (subjects) of stat_halfeye(), geom_point() and geom_boxplot() together.\n\n\nShow suggested code\n# Patch plots together\npatch &lt;- (a_g1 | a_g2 | a_g3) \n\npatch +\n  plot_annotation(\n                title = \"Male students performed slightly better than female students in Math and Science\",\n                subtitle = \"Wide range of scores for each subject with presence of outliers\",\n                tag_levels = \"I\",\n                caption = \"Data Source: OECD (2022)\") +\n  theme_minimal() +\n  theme(axis.ticks = element_blank(),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        legend.position = 'none')\n\n\n\n\n\n\nMathematicsReadingScience\n\n\n\n\nShow suggested code\n# Mathematics\na_g1 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVMATH, fill=Gender)) +\n  \n  stat_halfeye(aes(fill = Gender, \n                      justification = ifelse(Gender == \"Female\", 1.2, 0),\n                      side = ifelse(Gender == \"Female\", \"left\", \"right\")),\n              position = position_nudge(x = 0.1, y = 0), \n              adjust = 1.2,\n              .width = 0,\n              trim = FALSE,\n              point_color = NA,\n              alpha = 0.5,\n              orientation = ) +\n  geom_point(aes(x = Gender, y = AVG_PVMATH, color=Gender),\n             position = position_jitter(width = 0.05),\n             size = 0.25,\n             shape = 20,\n             alpha = 0.5) + \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"grey20\", \n              outlier.shape=16,\n              outlier.size=1,\n              outlier.alpha = 0.5) +\n  \n  stat_summary(fun = mean, geom = \"text\", aes(label = paste(\"Mean\", round(after_stat(y), ))), position = position_nudge(x = ifelse(stu2$Gender == \"Female\", -0.15, 0.15)), vjust = 1,size=2.2, color =\"#A64D79\") +\n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  labs(y = \"Score\", x = NULL) + theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10)) +\n  \n  geom_hline(aes(yintercept=mean(AVG_PVMATH)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", x = 1.5, y = mn_math - 80,\n      label = paste0(\"Overall Mean: \", mn_math),\n      color = \"#E3A857\", size = 2.5\n    )  +\n  \n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.2, y = 515, yend = 560, \n    curvature = -.4, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.3, y = 650, yend = 600, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey20\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVMATH)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 1.5, \n      y = med_math + 80,\n      label = paste0(\"Overall Median: \", med_math),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  theme(\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n\na_g1 +\n  plot_annotation(\n                title = \"Male students performed slightly better than female students in Mathematics\",\n                subtitle = \"Wide range of scores for each subject with presence of outliers\",\n                caption = \"Data Source: OECD (2022)\") +\n  theme_minimal() +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nShow suggested code\n# Reading\na_g2 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVREAD, fill=Gender)) +\n  \n  stat_halfeye(aes(fill = Gender, \n                      justification = ifelse(Gender == \"Female\", 1.2, 0),\n                      side = ifelse(Gender == \"Female\", \"left\", \"right\")),\n              position = position_nudge(x = 0.1, y = 0), \n              adjust = 1.2,\n              .width = 0,\n              trim = FALSE,\n              point_color = NA,\n              alpha = 0.5,\n              orientation = ) +\n  geom_point(aes(x = Gender, y = AVG_PVREAD, color=Gender),\n             position = position_jitter(width = 0.05),\n             size = 0.25,\n             shape = 20,\n             alpha = 0.5) + \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"grey20\", \n              outlier.shape=16,\n              outlier.size=1,\n              outlier.alpha = 0.5) +\n  stat_summary(fun = mean, geom = \"text\", aes(label = paste(\"Mean\", round(after_stat(y), ))), position = position_nudge(x = ifelse(stu2$Gender == \"Female\", -0.15, 0.15)), vjust = 1.5,size=2.2, color =\"#A64D79\") +\n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  labs(y = \"Score\", x = NULL) + theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10)) +\n  \n  geom_hline(aes(yintercept=mean(AVG_PVREAD)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", x = 1.5, y = mn_read - 80,\n      label = paste0(\"Overall Mean: \", mn_read),\n      color = \"#E3A857\", size = 2.5\n    )  +\n  \n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.2, y = 525, yend = 565, \n    curvature = -.4, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.3, y = 610, yend = 555, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey20\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVREAD)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 1.5, \n      y = med_read + 80,\n      label = paste0(\"Overall Median: \", med_read),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  theme(\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n\na_g2 +\n  plot_annotation(\n                title = \"Female students performed slightly better than male students in Reading\",\n                subtitle = \"Wide range of scores for each subject with presence of outliers\",\n                caption = \"Data Source: OECD (2022)\") +\n  theme_minimal() +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nShow suggested code\n# Science\na_g3 &lt;- ggplot(stu2, aes(x = Gender, y = AVG_PVSCI, fill=Gender)) +\n  \n  stat_halfeye(aes(fill = Gender, \n                      justification = ifelse(Gender == \"Female\", 1.2, 0),\n                      side = ifelse(Gender == \"Female\", \"left\", \"right\")),\n              position = position_nudge(x = 0.1, y = 0), \n              adjust = 1.2,\n              .width = 0,\n              trim = FALSE,\n              point_color = NA,\n              alpha = 0.5,\n              orientation = ) +\n  geom_point(aes(x = Gender, y = AVG_PVSCI, color=Gender),\n             position = position_jitter(width = 0.05),\n             size = 0.25,\n             shape = 20,\n             alpha = 0.5) + \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"grey20\", \n              outlier.shape=16,\n              outlier.size=1,\n              outlier.alpha = 0.5) +\n\n  stat_summary(fun = mean, geom = \"text\", aes(label = paste(\"Mean\", round(after_stat(y), ))), position = position_nudge(x = ifelse(stu2$Gender == \"Female\", -0.15, 0.15)), vjust = 1.5,size=2.2, color =\"#A64D79\") +\n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  labs(y = \"Score\", x = NULL) + theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + theme(plot.title = element_text(size = 10)) +\n  \n  geom_hline(aes(yintercept=mean(AVG_PVSCI)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", x = 1.5, y = mn_sci - 80,\n      label = paste0(\"Overall\\nMean\\n\", mn_sci),\n      color = \"#E3A857\", size = 2.5\n    )  +\n  \n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.2, y = 535, yend = 575, \n    curvature = -.4, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  annotate(\n    geom = \"curve\", x = 1.3, xend = 1.3, y = 630, yend = 580, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"grey20\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVSCI)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 1.5, \n      y = med_sci + 80,\n      label = paste0(\"Overall\\nMedian\\n\", med_sci),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  theme(\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n\na_g3 +\n  plot_annotation(\n                title = \"Male students performed slightly better than female students in Science\",\n                subtitle = \"Wide range of scores for each subject with presence of outliers\",\n                caption = \"Data Source: OECD (2022)\") +\n  theme_minimal() +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake-over with Density-Boxplot\n\n\n\n\nAchieved in terms of Clarity\n\nGraph title is added to contrast the difference between male and female performance.\nSub-title is added to provide more context and explanation on the significant findings.\nCaption is added to show data source.\nLegend is placed at the bottom of the chart (along x-axis).\nOverall Median and Mean values are annotated to enhance interpretation of distribution while serve as reference points. The values allow quick visualisation of the central tendency and skewness of distribution.\nSubject mean values are also added to aid in explanation of data, and hightlighted in a distinct colour that tie in with box-plot “mean dot” value.\nCharts are flipped (i.e. y-axis for Scores, x-axis for Gender) to enhance reading mode with a common y-axis.\nAnnotation “tags” are included to differentiate the different charts and for a more professional visual aspect.\n\nAchieved in terms of Aesthetic\n\nOutliers are highlighted to better differentiate them."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#differences-in-subject-scores-among-schools",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#differences-in-subject-scores-among-schools",
    "title": "Take-home Exercise 2",
    "section": "3.3 Differences in Subject Scores Among Schools",
    "text": "3.3 Differences in Subject Scores Among Schools\n\nOriginal Visual #3\nRange Plot was used for visual 3, where minimum, maximum and differences in each subject scores were calculated by school level.\n\n\nShow original code\nmath_sch &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVMATH), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\nread_sch &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVREAD), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\nsci_sch &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVSCI), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\n\n\nMathematicsReadingReading\n\n\n\n\nShow original code\n# Mathematics\nmath_sch_high5 &lt;- math_sch %&gt;% slice_max(maxscore, prop = 0.05)\n\n\nmath_sch_min &lt;- math_sch_high5 %&gt;%\n  select(-maxscore)\n\n\nmath_sch_max &lt;- math_sch_high5%&gt;%\n  select(-minscore)\n\n\nmath_long &lt;- math_sch_high5%&gt;% \n  select(-difference)%&gt;%\n  pivot_longer(-SCHOOL) \n\n\nh1 &lt;- ggplot(math_long) +\n  geom_segment(data = math_sch_min,\n               aes(x = minscore, y = SCHOOL,\n                   yend = math_sch_max$SCHOOL, xend=math_sch_max$maxscore),\n               color= \"#aeb6bf\",\n               size = 4,\n               alpha = 0.5) +\n  geom_point(aes(x = value, y = SCHOOL, color = name), size = 4, show.legend = TRUE) + \n  labs(title = \"Differences in Students Scores for Top 5% Schools in Maths\", x = \"Maths Scores\", y = \"School\", color = \"Min/Max Scores\") +\n  geom_text(data = math_sch_min,\n            aes(label= paste(\"Diff: \", difference), x= minscore+100, y= SCHOOL),\n             color = \"black\",\n             size = 2.5)+ theme_minimal()+\n  theme(panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank(), \n        axis.ticks.x = element_line(color = \"#4a4e4d\"),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_text(size = 8),\n        axis.title.x = element_text(size = 8))\n\nh1\n\n\n\n\n\n\n\n\n\nShow original code\n# Reading\nread_sch_high5 &lt;- read_sch %&gt;% slice_max(maxscore, prop = 0.05)\n\nread_sch_min &lt;- read_sch_high5 %&gt;%\n  select(-maxscore)\n\nread_sch_max &lt;- read_sch_high5%&gt;%\n  select(-minscore)\n\nread_long &lt;- read_sch_high5%&gt;% \n  select(-difference)%&gt;%\n  pivot_longer(-SCHOOL) \n\nh2 &lt;- ggplot(read_long) +\n  geom_segment(data = read_sch_min,\n               aes(x = minscore, y = SCHOOL,\n                   yend = read_sch_max$SCHOOL, xend=read_sch_max$maxscore),\n               color= \"#aeb6bf\",\n               size = 4,\n               alpha = 0.5) +\n  geom_point(aes(x = value, y = SCHOOL, color = name), size = 4, show.legend = TRUE) + \n  labs(title = \"Differences in Students Scores for Top 5% Schools in Reading\", x = \"Reading Scores\", y = \"School\", color = \"Min/Max Scores\") +\n  geom_text(data = read_sch_min,\n            aes(label= paste(\"Diff: \", difference), x= minscore+100, y= SCHOOL),\n             color = \"black\",\n             size = 2.5)+ theme_minimal()+\n  theme(panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank(), \n        axis.ticks.x = element_line(color = \"#4a4e4d\"),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_text(size = 8),\n        axis.title.x = element_text(size = 8))\n\nh2\n\n\n\n\n\n\n\n\n\nShow original code\n# Science\nsci_sch_high5 &lt;- sci_sch %&gt;% slice_max(maxscore, prop = 0.05)\n\nsci_sch_min &lt;- sci_sch_high5 %&gt;%\n  select(-maxscore)\n\nsci_sch_max &lt;- sci_sch_high5%&gt;%\n  select(-minscore)\n\nsci_long &lt;- sci_sch_high5%&gt;% \n  select(-difference)%&gt;%\n  pivot_longer(-SCHOOL) \n\nh3 &lt;- ggplot(sci_long) +\n  geom_segment(data = sci_sch_min,\n               aes(x = minscore, y = SCHOOL,\n                   yend = sci_sch_max$SCHOOL, xend=sci_sch_max$maxscore),\n               color= \"#aeb6bf\",\n               size = 4,\n               alpha = 0.5) +\n  geom_point(aes(x = value, y = SCHOOL, color = name), size = 4, show.legend = TRUE) + \n  labs(title = \"Differences in Students Scores for Top 5% Schools in Science\", caption = \"Data from PISA 2022 Study\", x = \"Science Scores\", y = \"School\", color = \"Min/Max Scores\") +\n  geom_text(data = sci_sch_min,\n            aes(label= paste(\"Diff: \", difference), x= minscore+100, y= SCHOOL),\n             color = \"black\",\n             size = 2.5) + theme_minimal()+\n  theme(panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank(), \n        axis.ticks.x = element_line(color = \"#4a4e4d\"), \n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        axis.text.x = element_text(size = 8),\n        axis.title.x = element_text(size = 8))\n\nh3\n\n\n\n\n\n\n\n\n\n\nShow original code\n# patch\nh1+ h2 + h3 + plot_layout(nrow = 3, guides = \"collect\")\n\n\n\n\n\nVisual 3 seems to fall under “Quadrant IV - Beautiful but Confusing”\n\n\n\n\n\n\nObservations from Visual 3 [Range Plot]\n\n\n\n\n Areas done well\n\nIn terms of Clarity\n\nIndividual graphs and patchwork are well labelled with graph title, axes-labels, axis-ticks, and legend with caption to show data source.\nValue difference for top 5% of schools are labelled clearly and properly.\n\nIn terms of Aesthetic\n\nColours used is clear and distinct, and easy to distinguish between minimum and maximum score, and score differences.\nMajor x- and y-axis gridlines are used as guide for readers to identify respective schools and their scores.\nAxes range did not start from zero given that the minimum score is above 300. This removed unwanted whitespace as the scale would not be affected by it.\n\n\n\n\n Room for further improvement\n\nIn terms of Clarity\n\nPatchwork shows repetitive axes (i.e. y-axis for School, x-axis for Scores) across Mathematics, Reading and Science which can be distracting and confusing to readers.\nLinear range plot might be hard to visualise the scale of difference. In addition, there was no specific order sequence (e.g. ascending or descending order of the Top 5%) in terms of mean values (i.e. minimum, maximum or differences).\nAnnotation “tags” could be added to differentiate the different charts and for a more professional visual aspect.\nThe intended focus was unclear as the original author wanted to focus on exploring the score difference of both Top 10% and Bottom 10% performing schools for each subject. However, the original code chunk prepared and charts created were done on the Top 5% of schools only. This inconsistency could confuse and mislead readers.\n\n\n\n\n\n\n\nSuggested Sketch #3\nFrom the original visual, it seemed that the original author wanted to focus on the differences in score among Top 10% and Bottom 10% performing schools for each subject. A linear range plot was used, however, it might be hard to visualise the scale of difference. An alternative visual design to show potential relationship would be the use of bubble plot, which allow a third dimension comparison, in this case (score difference).\nA rough sketch of the proposed design is shown below.\n\n\n\nSketch by: TSE (2024)\n\n\n\n\nVisual Makeover #3\nNew data values were prepared and calculated for this makeover. The code chunk below uses intsvy package to calculate the mean scores from the 10 Plausible Values by using pisa.mean.pv() function. The function also allow sub-grouping of variables i.e. School ID.\n\n\nShow suggested code\nlibrary(intsvy)\n\nsch_mnpv_math &lt;- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"MATH\"), by = \"CNTSCHID\", data = stu_qqq_SG)\n\nsch_mnpv_math &lt;- sch_mnpv_math %&gt;%\n  rename(\n    # rename variables\n    \"SCHOOL\" = \"CNTSCHID\",\n  )\n\nsch_mnpv_sci &lt;- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"SCIE\"), by = \"CNTSCHID\", data = stu_qqq_SG)\n\nsch_mnpv_sci &lt;- sch_mnpv_sci %&gt;%\n  rename(\n    # rename variables\n    \"SCHOOL\" = \"CNTSCHID\",\n  )\n\nsch_mnpv_read &lt;- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"READ\"), by = \"CNTSCHID\", data = stu_qqq_SG)\n\nsch_mnpv_read &lt;- sch_mnpv_read %&gt;%\n  rename(\n    # rename variables\n    \"SCHOOL\" = \"CNTSCHID\",\n  )\n\n\nThe code chunk (adapted from original author’s version) below identify the Top 10% and Bottom 10% performing schools.\n\n\nShow suggested code\n# extract top 10%\nmath_sch_top10 &lt;- sch_mnpv_math %&gt;% \n  top_n(n = floor(0.1 * n()), wt = Mean) \n\nsci_sch_top10 &lt;- sch_mnpv_sci %&gt;% \n  top_n(n = floor(0.1 * n()), wt = Mean) \n\nread_sch_top10 &lt;- sch_mnpv_read %&gt;% \n  top_n(n = floor(0.1 * n()), wt = Mean) \n\n\n# extract bottom 10%\nmath_sch_bot10 &lt;- sch_mnpv_math %&gt;% \n  top_n(n = floor(-0.1 * n()), wt = Mean)\n\nsci_sch_bot10 &lt;- sch_mnpv_sci %&gt;% \n  top_n(n = floor(-0.1 * n()), wt = Mean)\n\nread_sch_bot10 &lt;- sch_mnpv_read %&gt;% \n  top_n(n = floor(-0.1 * n()), wt = Mean)\n\n\n# calculate difference by school\nmath_sch_diff &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVMATH), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\nsci_sch_diff &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVSCI), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\nread_sch_diff &lt;- stu2 %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise_at(vars(AVG_PVREAD), \n               list(minscore = min, maxscore = max)) %&gt;%\n  mutate(difference = maxscore - minscore)\n\n\nThe code chunk below calculates the score differences and thereafter combines the tables for Mathematics, Reading and Science respectively.\n\n\nShow suggested code\n# round values to 2 d.p\nmath_sch_diff$difference &lt;- round(math_sch_diff$difference, digits = 2)\nmath_sch_diff$minscore &lt;- round(math_sch_diff$minscore, digits = 2)\nmath_sch_diff$maxscore &lt;- round(math_sch_diff$maxscore, digits = 2)\n\nsci_sch_diff$difference &lt;- round(sci_sch_diff$difference, digits = 2)\nsci_sch_diff$minscore &lt;- round(sci_sch_diff$minscore, digits = 2)\nsci_sch_diff$maxscore &lt;- round(sci_sch_diff$maxscore, digits = 2)\n\nread_sch_diff$difference &lt;- round(read_sch_diff$difference, digits = 2)\nread_sch_diff$minscore &lt;- round(read_sch_diff$minscore, digits = 2)\nread_sch_diff$maxscore &lt;- round(read_sch_diff$maxscore, digits = 2)\n\n# merge tables\njoin_math_scht &lt;- merge(x=math_sch_diff, y = math_sch_top10, by = \"SCHOOL\")\njoin_math_schb &lt;- merge(x=math_sch_diff, y = math_sch_bot10, by = \"SCHOOL\")\n\njoin_sci_scht &lt;- merge(x=sci_sch_diff, y = sci_sch_top10, by = \"SCHOOL\")\njoin_sci_schb &lt;- merge(x=sci_sch_diff, y = sci_sch_bot10, by = \"SCHOOL\")\n\njoin_read_scht &lt;- merge(x=read_sch_diff, y = read_sch_top10, by = \"SCHOOL\")\njoin_read_schb &lt;- merge(x=read_sch_diff, y = read_sch_bot10, by = \"SCHOOL\")\n\n\n\n\nShow suggested code\n# add rows\njoin_math_sch &lt;- rbind(join_math_scht, join_math_schb)\n\njoin_sci_sch &lt;- rbind(join_sci_scht, join_sci_schb)\n\njoin_read_sch &lt;- rbind(join_read_scht, join_read_schb)\n\n\n# rename columns\njoin_math_sch &lt;- join_math_sch %&gt;%\n  rename(\n    # rename variables\n    \"School\" = \"SCHOOL\",\n    \"Difference\" = \"difference\",\n    \"Max\" = \"maxscore\",\n    \"Min\" = \"minscore\"\n  )\n\njoin_sci_sch &lt;- join_sci_sch %&gt;%\n  rename(\n    # rename variables\n    \"School\" = \"SCHOOL\",\n    \"Difference\" = \"difference\",\n    \"Max\" = \"maxscore\",\n    \"Min\" = \"minscore\"\n  )\n\njoin_read_sch &lt;- join_read_sch %&gt;%\n  rename(\n    # rename variables\n    \"School\" = \"SCHOOL\",\n    \"Difference\" = \"difference\",\n    \"Max\" = \"maxscore\",\n    \"Min\" = \"minscore\"\n  )\n\n\nAs part of chart aesthetics enhancement, in order to create the interactive bubble plots and set the colour palette scale, plotly() and RColorBrewer packages are installed.\n\nMathematicsReadingScience\n\n\n\n\nShow suggested code\nlibrary(plotly, RColorBrewer)\n\npl1 &lt;- ggplot(join_math_sch, aes(x = School, y = Mean,\n                                 text = paste(\"School ID : \", \n                                              School, \"\\nNo. of Students : \",\n                                              Freq, \"\\nMax Score : \", \n                                              Max, \"\\nMean Score : \", \n                                              Mean, \"\\nMin Score : \", \n                                              Min, \"\\nScore Difference : \", Difference))) +\n  geom_point(aes(size = Difference, color = Difference), alpha = 0.5) +\n  scale_color_gradient(low = \"#a2c9cb\", high = \"#22494b\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size=12),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor = element_blank()\n  ) +\n  ylim(300, 800) +\n  labs(title = \"Top 10% performing schools have relatively smaller difference \\nin Mathematics performance compared to the Bottom 10%\",\n       y = \"Mathematics Scores\", x = \"Schools\",\n       caption = \"Data Source: OECD (2022)\", size = \"Score \\nDifference\", \n       color = \"Score \\nDifference\") +\n  # annotate charts to highlight top and bottom 10% of schools with rectangles, arrows & text\n  geom_hline(aes(yintercept=min(math_sch_top10$Mean) - 10),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(math_sch_top10$Mean) + 10),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(15, 720, label = \"Top 10% Performing Schools\", \n                vjust = 1, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=min(math_sch_bot10$Mean) - 10),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(math_sch_bot10$Mean) + 10),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(10, 420, label = \"Bottom 10% Performing Schools\", \n                vjust = 1, font_size = 7)) \n\n# convert to an interactive plot\nggplotly(pl1, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nShow suggested code\nlibrary(plotly, RColorBrewer)\n\npl2 &lt;- ggplot(join_read_sch, aes(x = School, y = Mean,\n                                 text = paste(\"School ID : \", \n                                              School, \"\\nNo. of Students : \",\n                                              Freq, \"\\nMax Score : \", \n                                              Max, \"\\nMean Score : \", \n                                              Mean, \"\\nMin Score : \", \n                                              Min, \"\\nScore Difference : \", Difference))) +\n  geom_point(aes(size = Difference, color = Difference), alpha = 0.5) +\n  scale_color_gradient(low = \"#f9cfa6\", high = \"#ac7a4a\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size=12),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor = element_blank()\n  ) +\n  ylim(300, 800) +\n  labs(title = \"Top 10% performing schools have relatively smaller difference \\nin Reading performance compared to the Bottom 10%\",\n    y = \"Reading Scores\", \n    x = \"Schools\",\n    caption = \"Data Source: OECD (2022)\",\n    size = \"Score \\nDifference\", \n    color = \"Score \\nDifference\") +\n  # annotate charts to highlight top and bottom 10% of schools with rectangles, arrows & text\n  geom_hline(aes(yintercept=min(read_sch_top10$Mean) - 15),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(read_sch_top10$Mean) + 15),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(15, 700, label = \"Top 10% Performing Schools\", \n                vjust = 1, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=min(read_sch_bot10$Mean) - 15),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(read_sch_bot10$Mean) + 15),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(10, 400, label = \"Bottom 10% Performing Schools\", \n                vjust = 1, font_size = 7)) \n\n# convert to an interactive plot\nggplotly(pl2, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nShow suggested code\nlibrary(plotly, RColorBrewer)\n\npl3 &lt;- ggplot(join_sci_sch, aes(x = School, y = Mean,\n                                 text = paste(\"School ID : \", \n                                              School, \"\\nNo. of Students : \",\n                                              Freq, \"\\nMax Score : \", \n                                              Max, \"\\nMean Score : \", \n                                              Mean, \"\\nMin Score : \", \n                                              Min, \"\\nScore Difference : \", Difference))) +\n  geom_point(aes(size = Difference, color = Difference), alpha = 0.5) +\n  scale_color_gradient(low = \"#abd0da\", high = \"#456a74\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size=12),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor = element_blank()\n  ) +\n  ylim(300, 800) +\n  labs(title = \"Top 10% performing schools have relatively smaller difference \\nin Science performance compared to the Bottom 10%\",\n    y = \"Science Scores\", \n    x = \"Schools\",\n    caption = \"Data Source: OECD (2022)\",\n    size = \"Score \\nDifference\", \n    color = \"Score \\nDifference\") +\n  # annotate charts to highlight top and bottom 10% of schools with rectangles, arrows & text\n  geom_hline(aes(yintercept=min(sci_sch_top10$Mean) - 15),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(sci_sch_top10$Mean) + 15),\n            color=\"#A9BA9D\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(15, 700, label = \"Top 10% Performing Schools\", \n                vjust = 1, font_size = 7)) +\n  \n  geom_hline(aes(yintercept=min(sci_sch_bot10$Mean) - 15),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_hline(aes(yintercept=max(sci_sch_bot10$Mean) + 15),\n            color=\"salmon\", linewidth=0.5, linetype=\"dash\") +\n  geom_text(aes(10, 400, label = \"Bottom 10% Performing Schools\", \n                vjust = 1, font_size = 7)) \n\n# convert to an interactive plot\nggplotly(pl3, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake-over with Bubble Plot\n\n\n\n\nAchieved in terms of Clarity\n\nGraph title is added to explain the significant findings (e.g. Top 10% performing schools have relatively smaller difference in students’ performance compared to Bottom 10% performing schools).\nTop 10% and Bottom 10% performing schools are demarcated with text and dashlines to clearly show the range difference. There was a deliberate choice of using two different dashline colours to clearly distinguish the Top 10% and Bottom 10%.\nScores differences of Top 10% and Bottom 10% were re-calcuated to ensure accuracy of results.\nY-axis scale limit has been standardised across the three subjects for ease of comparison.\nBubble plot is used to add a third dimension to scatter plot (as scatter plot only compares two variables). This chart type is able to present relationship between the variables (Schools, Mean scores and Score differences). The third dimension (score difference) will allow readers to better visualise the difference in terms of the bubble size and colour intensity (i.e. the larger the bubble the larger the difference, and the darker the bubble the larger the difference).\n\nAchieved in terms of Aesthetic\n\nInteractive bubble plot is used to include more information without cluttering the chart. Additional information (such as School ID, minimum, mean and maximum scores, number of students, and score differences) is available to reader when hover over the respective bubble which represents a school.\nY-axis range did not start from zero for these bubble plots given that the minimum score is above 300. Bubble chart provides three dimension comparison based on position and magnitude, rather than height/ length. Hence, the charts used will not necessarily need to start with zero axis as it will not distort the visualisation and interpretation of data (i.e. it will only affect if bar/ column charts were used). It is important to select the right scale to show all data as well as to reduce any redundant white space on chart.\nX-axis value labels are intentionally removed to keep a clean design look for readers, given the interactivity element of the bubble chart as information will be made available to readers when hover over."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#students-scores-and-socioeconomic-factors",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#students-scores-and-socioeconomic-factors",
    "title": "Take-home Exercise 2",
    "section": "3.4 Students’ Scores and Socioeconomic Factors",
    "text": "3.4 Students’ Scores and Socioeconomic Factors\n\nOriginal Visual #4\nScatter Plot with geom_point() and geom_smooth() were used for visual 4. Visual 4 contains individual subject plots and a patchwork.\n\nMathematicsReadingScience\n\n\n\n\nShow original code\n# Mathematics\nz1 &lt;- ggplot(stu2, \n       aes(x = AVG_PVMATH, y = ESCS)) +\n  geom_point() + \n  geom_smooth(method = \"lm\", size=0.5, fill = \"blue\")+ \n   coord_cartesian(xlim=c(150,850),\n                  ylim=c(-3,3)) + theme_minimal()+\n      theme(legend.position=\"none\") + \n  labs(title = \"Relationship between Maths Scores and ESCS\", \n       x = 'Maths Scores', y = \"ESCS\")\n\nz1\n\n\n\n\n\n\n\n\n\nShow original code\n# Reading\nz2 &lt;- ggplot(stu2, \n       aes(x = AVG_PVREAD, y = ESCS)) +\n  geom_point()+\n  geom_smooth(method = \"lm\", size=0.5, fill = \"blue\")+ \n   coord_cartesian(xlim=c(150,850),\n                  ylim=c(-3,3)) + theme_minimal()+\n      theme(legend.position=\"none\") +   \n  labs(title = \"Relationship between Reading Scores and ESCS\", \n       x = 'Reading Scores', y = \"ESCS\")\n\nz2\n\n\n\n\n\n\n\n\n\nShow original code\n# Science\nz3 &lt;- ggplot(stu2, \n       aes(x = AVG_PVSCI, y = ESCS)) +\n  geom_point() + \n    geom_smooth(method = \"lm\", size=0.5, fill = \"blue\")+ \n   coord_cartesian(xlim=c(150,850),\n                  ylim=c(-3,3)) + theme_minimal()+\n      theme(legend.position=\"none\") + \n  labs(title = \"Relationship between Science Scores and ESCS\", \n       caption = \"Data from PISA 2022\", \n       x = 'Science Scores', y = \"ESCS\")\n\nz3\n\n\n\n\n\n\n\n\n\n\nShow original code\n# patch\npatch3 &lt;- z1 +  z2 + z3\npatch3 + plot_layout(nrow = 3)\n\n\n\n\n\nVisual 4 seems to fall under “Quadrant II - Clear but Ugly”\n\n\n\n\n\n\nObservations from Visual 4 [Scatter Plot]\n\n\n\n\n Areas done well\n\nIn terms of Clarity\n\nPatchwork is well labelled with graph title, axes-labels, legend with caption to show data source.\ngeom_smooth is added to ascertain potential correlation between variables ESCS and Scores of Mathematics, Reading and Science.\nOverall chart is easy to understand. However, readers may need to take note of the y-axis that extends to the negative value range.\n\nIn terms of Aesthetic\n\nContrasting colours were used to distinguish the correlation line and the scatter points.\n\n\n\n\n Room for further improvement\n\nIn terms of Clarity\n\nPatchwork shows repetitive axes (i.e. y-axis for Gender, x-axis for Scores) across Mathematics, Reading and Science which can be distracting and confusing to readers.\nY-axis label could be renamed to better reflect the variables (e.g. Socioeconomic status) instead of using the existing variable name which is an acroynm.\nMajor gridlines on the y-axis label may not be meaningful, given that ESCS values are in continuous range (largely between -2 and 2). However, if minor gridlines were added, it might clutter the y-axis.\n\nIn terms of Aesthetic\n\nGridlines may not be necessary in the scatter plots (especially in patchwork).\n\n\n\n\n\n\n\nSuggested Sketch #4\nFrom the original visual, it seemed that the original author wanted to explore the correlation of ESCS with the respective subjects. An alternative visual design to show potential relationship for this would be to bin ESCS first and then visualise with the use of raincloud plot.\nA rough sketch of the proposed design is shown below.\n\n\n\nSketch by: TSE (2024)\n\n\n\n\nVisual Makeover #4\nggpairs() is used to plot correlation matrix for a quick visual summary of the correlation between respective scores and socioeconomic status as well as respective scores and Gender. ggpairs() is part of GGally package. The correlation matrix, ggpairs() can replace the individual correlation plot as well as the patchwork.\nThe correlation matrix will allow readers to have a quick visual glimpse into the distribution and correlation of between the respective variables.\n\n\nShow suggested code\nlibrary(GGally)\ncorr &lt;- stu2[, c(3, 8, 62:64)]\nggpairs(corr,\n        mapping = aes(color = stu2$Gender),\n        upper = list(continuous = wrap('cor', size = 3)),\n        lower = list(combo = wrap(\"facethist\", bins = 30)),\n        diag = list(continuous = wrap(\"densityDiag\", alpha = 0.5)),\n        columnLabels = c('Gender', 'Socioeconomic', 'Mathematics', 'Science', 'Reading'),\n        title = \"Correlation between students performance and gender/ socioeconomic status\"\n      )\n\n\n\n\n\nThe relatively even distribution with peak values ranging between ESCS value of -2 and 2, is considerably large given the small ordinal scale (continuous). The code chunk below bins the socioeconomic status (ESCS) variables into 5 groups.\n\n\nShow suggested code\nbinning &lt;- stu2 %&gt;%\n  mutate(\n    # binning ESCS into 5 groups\n    ESCSGroup = (quantile_Rank=ntile(stu2$ESCS,5)),\n    \n    # renaming bin ESCS labels\n    ESCSGroup = factor(ESCSGroup, labels = c(\"Lowest\", \"Low\", \"Average\", \"High\", \"Highest\"))\n  )\n\n\n\nMathematicsReadingScience\n\n\n\n\nShow suggested code\n# Mathematics\nb1 &lt;- ggplot(binning, aes(x = ESCSGroup, y = AVG_PVMATH, fill=ESCSGroup)) +\n  \n  stat_halfeye(\n    # adjust bandwidth\n    adjust = 0.5,\n    # move to the right\n    justification = -0.2,\n    # remove the slub interval\n    .width = 0,\n    point_colour = NA,\n    alpha = 0.5) +\n  \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"salmon\",\n              outlier.shape=16,\n              outlier.size=0.05,\n              outlier.alpha = 0.5) + \n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  stat_summary(fun = mean, geom = \"text\", \n               aes(label = paste(\"Mean\", round(after_stat(y), ))),\n               position = position_nudge(x = 0.05), vjust = -0.5, size=2.2,\n               colour = \"#A64D79\") + \n  \n  stat_dots(\n    # ploting on left side\n    side = \"left\",\n    # adjusting position\n    justification = 1.1,\n    # adjust grouping (binning) of observations\n    binwidth = 0.25\n  ) +\n  \n  geom_hline(aes(yintercept=mean(AVG_PVMATH)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = mn_math - 60,\n      label = paste0(\"Overall Mean\\n\", mn_math),\n      color = \"#E3A857\",\n      size = 2.5\n    )  +\n  annotate(\n    geom = \"curve\", x = 0.01, y = mn_math - 10, xend = 0.20, \n    yend = mn_math - 30, curvature = -.7, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  \n  scale_fill_manual(values = c(\"#c7e0e6\", \"#8fc1ce\", \"#73b2c2\", \"#5c8e9b\", \"#395961\"), name = \"ESCS\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVMATH)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = med_math + 100,\n      label = paste0(\"Overall Median\\n\", med_math),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  \n  annotate(\n    geom = \"curve\", x = 0.01, y = med_math + 10, xend = 0.20, \n    yend = med_math + 30, curvature = .7, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 1.6, y = mn_math - 100,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 2.2\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 5.8, y = med_math + 90,\n    label = \"Highest ESCS group \\nrecorded higher performance score\",\n    size = 2.2\n  ) +\n\n  labs(title = \"Distribution Relationship of Mathematics by Socioeconomic Status\", \n       subtitle = \"Groups with higher ESCS value perform above overall Mean and Median score as compared to the other groups\",\n       y = \"Score\", x = \"Socioeconomic Status\",\n       caption = \"Data Source: OECD (2022)\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + \n  \n  coord_flip() +\n  theme(plot.title = element_text(size = 12),\n        legend.position = \"right\")\n\nb1\n\n\n\n\n\n\n\n\n\nShow suggested code\n# Reading\nb2 &lt;- ggplot(binning, aes(x = ESCSGroup, y = AVG_PVREAD, fill=ESCSGroup)) +\n  \n  stat_halfeye(\n    # adjust bandwidth\n    adjust = 0.5,\n    # move to the right\n    justification = -0.2,\n    # remove the slub interval\n    .width = 0,\n    point_colour = NA,\n    alpha = 0.5) +\n  \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"salmon\", \n              outlier.shape=16,\n              outlier.size=0.05,\n              outlier.alpha = 0.5) +\n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  stat_summary(fun = mean, geom = \"text\", \n               aes(label = paste(\"Mean\", round(after_stat(y), ))),\n               position = position_nudge(x = 0.05), vjust = -0.5, size=2.2,\n               colour = \"#A64D79\") + \n  \n  stat_dots(\n    # ploting on left side\n    side = \"left\",\n    # adjusting position\n    justification = 1.1,\n    # adjust grouping (binning) of observations\n    binwidth = 0.25\n  ) +\n\n  geom_hline(aes(yintercept=mean(AVG_PVREAD)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = mn_sci - 80,\n      label = paste0(\"Overall Mean\\n\", mn_read),\n      color = \"#E3A857\",\n      size = 2.5\n    )  +\n  annotate(\n    geom = \"curve\", x = 0.01, y = mn_read - 10, xend = 0.20, \n    yend = mn_read - 30, curvature = -.7, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  \n  scale_fill_manual(values = c(\"#fbdfc3\", \"#f8c797\", \"#f6af6b\", \"#ac7a4a\", \"#62462a\"), name = \"ESCS\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVREAD)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = med_read + 70,\n      label = paste0(\"Overall Median\\n\", med_read),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  \n  annotate(\n    geom = \"curve\", x = 0.01, y = med_read + 10, xend = 0.20, \n    yend = med_read + 30, curvature = .7, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 1.6, y = mn_read - 100,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 2.2\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 5.8, y = med_read + 90,\n    label = \"Highest ESCS group \\nrecorded higher performance score\",\n    size = 2.2\n  ) +\n\n  labs(title = \"Distribution Relationship of Reading by Socioeconomic Status\", \n       subtitle = \"Groups with higher ESCS value perform above overall Mean and Median score as compared to the other groups\",\n       y = \"Score\", x = \"Socioeconomic Status\",\n       caption = \"Data Source: OECD (2022)\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + \n  \n  coord_flip() +\n  theme(plot.title = element_text(size = 12),\n        legend.position = \"right\")\n\nb2\n\n\n\n\n\n\n\n\n\nShow suggested code\n# Science\nb3 &lt;- ggplot(binning, aes(x = ESCSGroup, y = AVG_PVSCI, fill=ESCSGroup)) +\n  \n  stat_halfeye(\n    # adjust bandwidth\n    adjust = 0.5,\n    # move to the right\n    justification = -0.2,\n    # remove the slub interval\n    .width = 0,\n    point_colour = NA,\n    alpha = 0.5) +\n  \n  geom_boxplot(width = 0.05,\n              outlier.colour=\"salmon\", \n              outlier.shape=16,\n              outlier.size=0.05,\n              outlier.alpha = 0.5) +\n  \n  stat_summary(fun.y = mean, geom = \"point\", colour = \"#A64D79\") +\n  \n  stat_summary(fun = mean, geom = \"text\", \n               aes(label = paste(\"Mean\", round(after_stat(y), ))),\n               position = position_nudge(x = 0.05), vjust = -0.5, size=2.2,\n               colour = \"#A64D79\") + \n  \n  stat_dots(\n    # ploting on left side\n    side = \"left\",\n    # adjusting position\n    justification = 1.1,\n    # adjust grouping (binning) of observations\n    binwidth = 0.25\n  ) +\n\n  geom_hline(aes(yintercept=mean(AVG_PVSCI)),\n               color=\"#E3A857\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = mn_sci - 60,\n      label = paste0(\"Overall Mean\\n\", mn_sci),\n      color = \"#E3A857\",\n      size = 2.5\n    )  +\n  annotate(\n    geom = \"curve\", x = 0.01, y = mn_sci - 10, xend = 0.20, \n    yend = mn_sci - 30, curvature = -.7, arrow = arrow(length = unit(2, \"mm\")),\n    color = \"#E3A857\") +\n  \n  scale_fill_manual(values = c(\"#b4d3d5\", \"#7cb3b6\", \"#459397\", \"#306669\", \"#1b3a3c\"), name = \"ESCS\") +\n  \n  geom_hline(aes(yintercept=median(AVG_PVSCI)),\n               color=\"grey20\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      geom = \"text\", \n      x = 0.5, \n      y = med_sci + 70,\n      label = paste0(\"Overall Median\\n\", med_sci),\n      color = \"grey20\",\n      size = 2.5\n    ) +\n  \n  annotate(\n    geom = \"curve\", x = 0.01, y = med_sci + 10, xend = 0.20, \n    yend = med_sci + 30, curvature = .7, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 1.6, y = mn_sci - 100,\n    label = \"Lowest ESCS group\\nrecorded lower performance score\",\n    size = 2.2\n  ) +\n  \n  annotate(\n    geom = \"text\", \n    x = 5.8, y = med_sci + 110,\n    label = \"Highest ESCS group \\nrecorded higher performance score\",\n    size = 2.2\n  ) +\n\n  labs(title = \"Distribution Relationship of Science by Socioeconomic Status\", \n       subtitle = \"Groups with higher ESCS value perform above overall Mean and Median score as compared to the other groups\",\n       y = \"Score\", x = \"Socioeconomic Status\",\n       caption = \"Data Source: OECD (2022)\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(100,900)) + \n  \n  coord_flip() +\n  theme(plot.title = element_text(size = 12),\n        legend.position = \"right\")\n\nb3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake-over with Raincloud Plot\n\n\n\n\nAchieved in terms of Clarity\n\nESCS values is binned into five groups (Lowest ESCS, Low ESCS, Average ESCS, High ESCS, Highest ESCS) to ascertain whether students’ performance are affected by their high and low socioeconomic status of students’ families.\nGraph title and subtitle are added to explain the significant findings (e.g. Highest ESCS group recorded higher performance Mean score as compared to the rest).\nCaption is added to show data source.\nLegend is placed on the right side of the chart to align with the ESCS groups.\nOverall Median and Mean values are annotated to enhance interpretation of distribution while serve as reference points. The values allow quick visualisation of the central tendency and skewness of distribution across the different ESCS groups.\nRespective Mean values of ESCS groups are also annotated in a distinct colour for ease of comparison."
  }
]
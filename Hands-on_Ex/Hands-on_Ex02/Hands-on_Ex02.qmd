---
title: "Hands-on Exercise 2"
subtitle: "Beyond ggplot2 Fundamentals"
date: "9 January 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
---

# 1. Getting Started

## 1.1 Install and launch R packages

The code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R.

::: callout-tip
-   *ggrepel:* an R package provides geoms for ggplot2 to repel overlapping text labels.

-   *ggthemes*: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.

-   *hrbrthemes*: an R package provides typography-centric themes and theme components for ggplot2.

-   *patchwork*: an R package for preparing composite figure created using ggplot2.
:::

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, 
               hrbrthemes, tidyverse, 
               ggdist, ggridges, ggforce)
  
```

## 1.2 Importing the data

-   The code chunk below imports *exam_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package.

-   **readr** is one of the tidyverse package.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## 1.3 Overview of the data

```{r}
summary(exam_data)
```

# 2. Practice Time

## 2.1 Working with ggrepel

::: callout-caution
One of the challenge in plotting statistical graph is annotation, especially with large number of data points. [**ggrepel**](https://ggrepel.slowkow.com/) is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in the example tab (`ggrepel`).
:::

::: panel-tabset
## default

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## ggrepel

Simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` by [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

## 2.2 Customising themes

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html): `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`.

Refer to [link](https://ggplot2.tidyverse.org/reference/#themes) for more ggplot2 `Themes`

### ggtheme (built-in) package

::: panel-tabset
#### The Plot

```{r}
#| echo: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_gray()
```

#### The Code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_gray()
```
:::

### ggtheme package

Other 'ggplot2' themes example: fivethirtyeight.com, stata, The Economist and Wall Street Journal.

::: panel-tabset
#### fivethirtyeight.com

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_fivethirtyeight()
```

#### Stata

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_stata()
```

#### The Economist

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_economist()
```

#### Wall Street Journal

```{r}

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  theme_wsj()
```
:::

### hbrthemes package

[**hrbrthemes**](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
#### Default

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

#### With Elements

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```
:::

## 2.3 Creating beyond single graph

### **Creating Composite Graphics: pathwork methods**

There are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/) package. In this section, I am going to shared with you an ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/) which is specially designed for combining separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign `/`

### **Creating Composite Graphics: pathwork methods**

```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "Math Scores",
       y = "No. of Students",
       title = "Distribution of Math Scores")

p2 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  labs(x = "English Scores",
       y = "No. of Students",
       title = "Distribution of English Scores") 

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

#### **Combining two ggplot2 graphs**

Figure in the tabset below shows a composite of two histograms created using patchwork `+`

```{r}
p1 + p2
```

#### **Combining three ggplot2 graphs**

More complex composite can be plotted by using appropriate operators. For example, the composite figure below is plotted by using:

-   “\|” operator to stack two ggplot2 graphs,

-   “/” operator to place the plots beside each other,

-   “()” operator the define the sequence of the plotting.

```{r}
(p1 / p2) | p3
```

#### **Creating composite figure with tag**

In order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.

```{r}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

#### **Creating figure with inset**

[`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork** enable having one or several plots or graphic elements freely on top or below another plot.

```{r}
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

#### **Creating composite figure by using patchwork & ggtheme**

Example below combined patchwork and the ggthemes packages discussed earlier.

::: panel-tabset
#### fivethirtyeight.com

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_fivethirtyeight() +
  theme(plot.title=element_text(size =8),
                                        axis.title.y=element_text(size = 7),
                                        axis.title.x=element_text(size = 7))
```

#### Stata

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_stata() +
  theme(plot.title=element_text(size =8),
                                        axis.title.y=element_text(size = 7),
                                        axis.title.x=element_text(size = 7))
```

#### The Economist

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_economist() +
  theme(plot.title=element_text(size =8),
                                        axis.title.y=element_text(size = 7),
                                        axis.title.x=element_text(size = 7))
```

#### Wall Street Journal

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_wsj() +
  theme(plot.title=element_text(size =8),
                                        axis.title.y=element_text(size = 5),
                                        axis.title.x=element_text(size = 5))
```
:::

# 3. References

-   [**2  A Layered Grammar of Graphics: ggplot2 methods**](https://r4va.netlify.app/chap02)

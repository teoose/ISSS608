---
title: "Prototype - Exploratory Data Analysis"
date: "20 February 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
---

```{r}
#| eval: false
#| echo: false
# colour
"#1F5776"
"#FB3640"
"#E9E3E6"
"grey20"
```

## Install and launch R packages

```{r}
#| code-fold: true     
#| code-summary: "Show code"  
pacman::p_load(tidyverse, leaflet, treemap, rmarkdown, highcharter, viridis,
               ggplot2, tidyr, dplyr, viridisLite, RColorBrewer, countrycode, 
               wordcloud, tidytext, tm, plotly)
```

## Importing the Dataset

```{r message=F,warning=F}
#| code-fold: true    
#| code-summary: "Show code" 
data = read.csv("data/data_filtered_analysis.csv")
str(data)
```

## Geospatial Analysis

### Hotspot Map - Major Incidents with more than 100 Casualties

```{r message=F,warning=F}
#| code-fold: true    
#| code-summary: "Show code" 
Major_attacks <- data %>%
  filter(nkill > 100)
mymap <-  leaflet() %>% 
  addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
  setView(12, 38, zoom = 3) %>%
  addCircles(data=Major_attacks, lat= ~latitude, lng = ~longitude, color = "#FB3640", fillOpacity = 0.8, fillColor = "black",
             popup = paste( "<strong>Year: </strong>", Major_attacks$iyear,
                            "<br><strong>City: </strong>",  Major_attacks$city, 
                            "<br><strong>Country: </strong>",  Major_attacks$country_txt, 
                            "<br><strong>Attack type: </strong>",  Major_attacks$attacktype1_txt, 
                            "<br><strong>Target: </strong>",  Major_attacks$targtype1_txt, 
                            "<br><strong>Group: </strong>",  Major_attacks$gname, 
                            "<br><strong>Summary: </strong>",  Major_attacks$summary,
                            "<br><strong>Killed: </strong>", Major_attacks$nkill))

mymap
```

### Choropleth Map - Number of Attacks

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
countries <- data %>% 
  group_by(country_txt) %>%
  summarise(Total = n())
names(countries) <- c("country.name", "total")
countries$iso3 = countrycode(countries$country.name, origin = "country.name", destination = "iso3c")
stops <- data.frame(q = c(0, exp(1:5)/exp(5)),
                        c = substring(viridis(5 + 1, option = "F"), 0, 7)) %>%  
  list_parse2()

data(worldgeojson, package = "highcharter")
hc_plot = highchart() %>% 
          hc_add_series_map(worldgeojson, countries, value = "total", joinBy = "iso3") %>% 
          hc_colorAxis(stops = stops) %>% 
          hc_legend(enabled = TRUE) %>% 
          hc_add_theme(hc_theme_db()) %>% 
          hc_mapNavigation(enabled = TRUE) %>%
          hc_title(text = "Total Number of Attacks From 1970 to 2017") %>%
          hc_add_theme(hc_theme_google()) %>%
          hc_credits(text = "Sources: University of Maryland", style = list(fontSize = "10px")) 

hc_plot
```

## Text Analysis

### Word Cloud - Terrorist(s) Target

```{r, message = FALSE, echo = FALSE}
#| code-fold: true    
#| code-summary: "Show code" 
abc <- data %>%
        filter(targsubtype1_txt != "")

def <- abc$targsubtype1_txt 

docs <- Corpus(VectorSource(def))

# Convert the text to lower case
#docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming (reduces words to their root form)
docs <- tm_map(docs, stemDocument) #snowballc package

dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)

wordcloud(d$word, d$freq, colors = brewer.pal(9,"Set1"), random.order = FALSE, rot.per = 0) #wordcloud package
title(main = "Global Terrorism Incidents in 1970 - 2016", font.main = 1, col.main = "black", cex.main = 1.5)
```

## Trend Analysis

### Line Chart - Terrorism over the years

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
year_killing <- data %>%
  group_by(Year = iyear) %>%
  filter(nkill > 0) %>%
  summarise(total_killing = sum(nkill)) %>%
  ungroup()

hc_plot <-  highchart() %>% 
  hc_add_series(year_killing, hcaes(x = Year, y = total_killing), type = "line") %>%
  hc_tooltip(crosshairs = TRUE, borderWidth = 1.5, headerFormat = "", pointFormat = paste("Year: <b>{point.Year}</b> <br>","Killing: <b>{point.total_killing}</b><br>")) %>%
  hc_title(text = "Terrorism over the years") %>% 
  hc_subtitle(text = "1970-2017") %>%
  hc_xAxis(title = list(text = "Year")) %>%
  hc_yAxis(title = list(text = "Number of people killed"),
           allowDecimals = FALSE,
           plotLines = list(list(
             color = "black", width = 1, dashStyle = "Dash",
             value = mean(year_killing$total_killing),
             label = list(text = "Average people killed = 8763",
             style = list(color = '#FB3640', fontSize = 20))))) %>% 
  hc_add_theme(hc_theme_ffx())
hc_plot
```

### Bar/ Line Chart - Total Number of Global Terrorism Incidents per Year

```{r, message = FALSE, echo = FALSE}
#| code-fold: true    
#| code-summary: "Show code" 
incident_line <- data %>%
    group_by(iyear) %>%
    summarise(total=n())
    
plot1 <-  ggplot(incident_line, aes(x=iyear, y=total)) + 
    geom_line() +  #line chart
    geom_bar(stat = 'identity', position = 'dodge', width = 0.8, alpha = 0.5, fill = 'blue') + #barchart
    geom_point(size = 0.5, color = '#FB3640') + #point chart
    labs(x = '', y = 'Total Incidents', title = "Total Number of Global Terrorism Incidents per Year", #name title and axis
                             caption = 'Sources: National Consortium for the Study of Terrorism and Responses to Terrorism (START)') + #name caption/credit
    theme(plot.title = element_text(hjust = 0, face = 'bold',color = 'black'), #title settings
          plot.caption = element_text(size = 6, vjust = -1, face = "italic")) #caption/credit settings
```

```{r}
plot1
```

### Line chart - Total People Killed and Injured per Year

```{r, message = FALSE, echo = FALSE}
#| code-fold: true    
#| code-summary: "Show code" 
library(reshape2) #melt function

#kill and wounded
allkillwound <- data %>%
                group_by(iyear) %>%
                summarise(kill = sum(nkill, na.rm = TRUE),
                          terkill = sum(nkillter, na.rm = TRUE),
                          wound = sum(nwound, na.rm = TRUE),
                          uswound = sum(nwoundus, na.rm = TRUE),
                          terwound = sum(nwoundte, na.rm = TRUE))

killwound <- allkillwound %>%
                select(iyear, kill, wound)

names(killwound) <- c("Year", "People Killed", "People Injured") #rename the column

melt_killwound <- melt(killwound, id.vars = 'Year') #reshape2 package

plot1 <- ggplot(melt_killwound, aes(Year, value)) +   
geom_line(aes(color = variable)) +
geom_point(aes(color = variable)) +
theme_linedraw() + #make a theme
theme(panel.background = element_rect(fill = "gainsboro", colour = "white", size = 0.5, linetype = "solid"), #theme panel settings
      plot.background = element_rect(fill = "gainsboro"), #theme panel settings
      legend.position = "bottom", #legend position
      legend.title = element_blank(), #remove legend title
      legend.background = element_rect(fill = "gainsboro", colour = "gainsboro", size = 0.5, linetype = "solid"), #change legend box color
      panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"), #theme panel settings
      panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "white"), #theme panel settings
      plot.title = element_text(hjust = 0, face = 'bold',color = 'black'), #title settings
      plot.subtitle = element_text(face = "italic"), #subtitle settings
      plot.caption = element_text(size = 6, vjust = 0, face = "italic")) + #caption/credit settings
      labs(x = '', y = '', title = "Global Terrorism in 1970 - 2016", #name title and axis
           subtitle = "The number includes all victims and attackers who died and injured as a direct result of the incident.", #subtitle
           caption = 'Sources: National Consortium for the Study of Terrorism and Responses to Terrorism (START)') + #name caption/credit
scale_y_continuous(limits = c(0,50000), breaks = c(0,10000,20000,30000,40000,50000)) #set axis limits and break
```

```{r}
plot1
```

### Bubble Plot - Regional Increase in terrorism - Animation

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
regional_terrorism = data %>%
  group_by(iyear, region_txt) %>%
  summarise(Events = n())

regional_terrorism %>%
  plot_ly(x = ~iyear, y = ~Events,
          hoverinfo = "text", text = ~region_txt) %>%
  add_markers(
    size = ~Events, color = ~region_txt, 
    frame = ~iyear, ids = ~region_txt,
    marker = list(sizemode = "diameter", sizeref = 2)
  ) %>%
  animation_opts(
    frame = 50, 
    transition = 30, 
    easing = "elastic"
  ) %>%
  animation_slider(
    currentvalue = list(
      prefix = NULL, 
      font = list(color = "white", size = 50)
    )
  ) %>%  
  layout(paper_bgcolor='black', plot_bgcolor ='black',
    xaxis = list(title = "Year"),
    yaxis = list(title = "Events")
  )
```

### Number Of terrorists killed from 1970 to 2016

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
killter <- data %>%
  filter(nkillter > 0) %>%
  group_by(region = region_txt, year = iyear) %>%
  summarise(terrorist_killed = sum(nkillter))

ggplot(killter, aes(x=reorder(year, terrorist_killed), y=terrorist_killed)) +
  geom_bar(stat = "identity", fill = "#FB3640") +
  theme_classic() +
  coord_flip() +
  labs(x="Year", y="Terrorist killed", title = "Number of terrorist killed from 1970 - 2016")
```

## Distribution Analysis

### Crime

#### Crime Types

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
crime <- data %>%
  filter(nkill > 0) %>%
  group_by(alternative_txt) %>%
  summarise(killing = sum(nkill)) %>%
  arrange(desc(killing))

ggplot(crime, aes(x=reorder(alternative_txt, killing), y = killing)) +
  geom_bar(fill = '#FB3640', col = "black", stat = "identity") +
  theme_classic() +
  labs(x="Crime Type", y="Number of people killed") +
  coord_flip()
```

### Weapon

#### Weapon Types

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
weapon <- data %>%
  filter(weaptype1_txt != "Unknown") %>%
  group_by(weaptype1_txt) %>%
  summarise(Events = n())

plot1 <- ggplot(weapon, aes(x = reorder(weaptype1_txt, Events), y = Events)) +
  geom_bar(stat = "identity", fill = "#FB3640", col = "black") +
  labs(x = "Weapon Used", y = "Number of times", title = "Weapon Type") +
  coord_flip() +
  theme_classic()

weapon_subtype <- data %>%
  group_by(weapsubtype1_txt) %>%
  summarise(Events = n())

plot2 <- ggplot(weapon_subtype, aes(x = reorder(weapsubtype1_txt, Events), y = Events)) +
  geom_bar(stat = "identity", fill = "#FB3640", col = "black") +
  labs(x = "Weapon Sub-type", y = "Number of times", title = "Weapon Sub-Type") +
  coord_flip() +
  theme_classic()
```

```{r}
plot1
```

#### Weapon-Subtypes

```{r}
plot2
```

### Terrorist Attacks

#### Attack Types

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
attack <- data %>%
  group_by(attacktype1_txt) %>%
  summarise(Events = n())
plot3 <- ggplot(attack, aes(x = reorder(attacktype1_txt, Events), y = Events, fill = attacktype1_txt)) +
  geom_bar(stat = "identity",col = "black", fill = "#1F5776") +
  theme_classic() +
  coord_flip() +
  labs(x = "Attack Type", y = "Events", title = "Number of Attacks based on Attack Type")
plot3
```

### Target

#### Target Types

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
target <- data %>%
  group_by(targtype1_txt) %>%
  summarise(Events = n())

plot4 <- ggplot(target, aes(x = reorder(targtype1_txt, Events), y = Events)) +
  geom_bar(stat = "identity",col = "black", fill = "#1F5776") +
  theme_classic() +
  coord_flip() +
  labs(x = "Target", y = "Events", title = "Target")

target_subtype <- data %>%
  group_by(targsubtype1_txt) %>%
  summarise(Events = n()) %>%
  arrange(desc(Events)) %>%
  head(n = 15)

plot5 <- ggplot(target_subtype, aes(x = reorder(targsubtype1_txt, Events), y = Events)) +
  geom_bar(stat = "identity",col = "black", fill = "#1F5776") +
  theme_classic() +
  coord_flip() +
  labs(x = "Target-Subtype", y = "Events", title = "Target-Subtype")
```

```{r}
plot4
```

#### Target-Subtypes

```{r}
plot5
```

### Terrorist Profile

#### Terrorist Groups Involved

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
gang_killing <- data %>%
  group_by(gang = gname) %>%
  summarise(killing = sum(nkill)) %>%
  arrange(desc(killing)) %>%
  head(n=20)

ggplot(gang_killing, aes(x=reorder(gang, killing), y = killing)) +
  geom_bar(fill = '#1F5776', col = "black", stat = "identity") +
  theme_classic() +
  labs(x="Gangs", y="Number of people killed") +
  coord_flip()
```

#### Terrorist Nationality

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
terrorist <- data %>%
  filter(nkill > 0) %>%
  group_by(natlty1_txt) %>%
  summarise(killing = sum(nkill)) %>%
  arrange(desc(killing)) %>%
  head(n = 10)

ggplot(terrorist, aes(x=reorder(natlty1_txt, killing), y = killing)) +
  geom_bar(fill = '#1F5776', col = "black", stat = "identity") +
  theme_classic() +
  labs(x="Nationality of Terrorists", y="Number of people killed") +
  coord_flip()
```

## Countries effected by the terrorism

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
country1 <- data %>%
  group_by(country_txt) %>%
  summarise(incidents = n()) %>%
  arrange(desc(incidents))
treemap(country1, 
        index=c("country_txt"), 
        vSize = "incidents",  
        palette = "RdYlBu",  
        title="Number of events - Terrorism", 
        fontsize.title = 16 
)
```

## Country/ City/ Region Analysis

### Tremap - Number of Killings- Regionwise

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
region <- data %>%
  group_by(region = region_txt) %>%
  filter(nkill > 0) %>%
  summarise(killings = sum(nkill)) %>%
  arrange(desc(killings))
   
hc_plot =   hctreemap2(region,
    group_vars = "region",
    size_var = "killings",
    color_var = "killings",
    layoutAlgorithm = "squarified",
    levelIsConstant = FALSE,
    levels = list(
      list(level = 1, dataLabels = list(enabled = TRUE)),
      list(level = 2, dataLabels = list(enabled = FALSE)),
      list(level = 3, dataLabels = list(enabled = FALSE))
    )
  ) %>% 
  hc_colorAxis(minColor = brewer.pal(7, "Reds")[1],
               maxColor = brewer.pal(7, "Reds")[7]) %>% 
  hc_tooltip(pointFormat = "<b>{point.region}</b>:<br>
             killings: {point.colorValue:,.0f}")
hc_plot
```

### Analysing the unknown city

```{r}
#| code-fold: true    
#| code-summary: "Show code" 
unknown = data %>%
  filter(city == "Unknown", nkill > 0) %>%
  group_by(country_txt) %>%
  summarise(total_killings = sum(nkill)) %>%
  arrange(desc(total_killings)) %>%
  head(n = 15)

ggplot(unknown, aes(x=reorder(country_txt, total_killings), y= total_killings)) +
  geom_bar(stat = "identity", fill = "#FB3640", col = "black") +
  coord_flip() +
  labs(x="City", y="Number of people killed", title = "Number of people killed in the country Where city was not mentioned")
```
